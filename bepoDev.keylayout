<?xml version="1.1" encoding="UTF-8"?>
<!DOCTYPE keyboard SYSTEM "file://localhost/System/Library/DTDs/KeyboardLayout.dtd">
<!-- bépo Layout -->
<!-- http://www.bepo.fr/ -->
<!-- version 1.0 -->
<!--Last edited by Ukelele version 3.0.2.59 on 2016-02-15 at 22:23 (UTC+1)-->
<keyboard group="126" id="-6205" maxout="5" name="bepoDev">
	<!--
    This layout is designed for ISO and ANSI keyboards. The extra
    key on an ISO keyboard (next to the left Shift) is optional,
    characters on it are also accessible through other keys.

    Problem: On Mac ANSI keyboards, that extra key is not simply
    missing: on ISO keyboards, the extra key sends the code 50 and
    the key below the Esc key sends the code 10; on ANSI keyboards,
    the key below the Esc key sends the code 50. So the key next to
    the left Shift on ISO keyboards is moved below the Esc key on
    ANSI keyboards, the real missing key being the one that sends
    the code 10.

    So we need a specific layout for ANSI keyboards. There is
    unfortunately no obvious way for identifying ANSI or ISO
    keyboards, we need to specify each hardware ID individually. As
    new keyboards are created, we need to add them to the list.
    Since this is a layout for the French language and the French
    AZERTY layout is defined for ISO keyboards, it will mostly be
    used with ISO keyboards. So we will define the default layout
    for ISO keyboards and specify ANSI keyboards individually. This
    will less likely cause problems as it will cause problems only
    with new ANSI keyboards.

    Individual keyboard hardware IDs are defined in:
    /Developer/SDKs/MacOSX10.4u.sdk/System/Library/Frameworks/
    CoreServices.framework/Versions/A/Frameworks/
    CarbonCore.framework/Versions/A/Headers/Gestalt.h
    We assume that any keyboard not containing ISO or JIS in its
    name has an ANSI layout.
  -->
	<layouts>
		<layout first="0" last="0" mapSet="ISO" modifiers="commonModifiers"/>
		<layout first="1" last="6" mapSet="ANSI" modifiers="commonModifiers"/>
		<layout first="10" last="10" mapSet="ANSI" modifiers="commonModifiers"/>
		<layout first="12" last="12" mapSet="ANSI" modifiers="commonModifiers"/>
		<layout first="14" last="15" mapSet="ANSI" modifiers="commonModifiers"/>
		<layout first="24" last="24" mapSet="ANSI" modifiers="commonModifiers"/>
		<layout first="27" last="28" mapSet="ANSI" modifiers="commonModifiers"/>
		<layout first="37" last="37" mapSet="ANSI" modifiers="commonModifiers"/>
		<layout first="40" last="40" mapSet="ANSI" modifiers="commonModifiers"/>
		<layout first="195" last="195" mapSet="ANSI" modifiers="commonModifiers"/>
		<layout first="198" last="198" mapSet="ANSI" modifiers="commonModifiers"/>
		<layout first="204" last="204" mapSet="ANSI" modifiers="commonModifiers"/>
		<layout first="202" last="202" mapSet="ANSI" modifiers="commonModifiers"/>
		<layout first="34" last="34" mapSet="ANSI" modifiers="commonModifiers"/>
		<layout first="31" last="31" mapSet="ANSI" modifiers="commonModifiers"/>
	</layouts>
	<modifierMap defaultIndex="0" id="commonModifiers">
		<keyMapSelect mapIndex="0">
			<modifier keys=""/>
			<modifier keys="anyShift? caps? command"/>
		</keyMapSelect>
		<keyMapSelect mapIndex="1">
			<!-- <modifier keys="anyShift caps?" /> -->
			<modifier keys="anyShift"/>
		</keyMapSelect>
		<keyMapSelect mapIndex="2">
			<modifier keys="caps"/>
		</keyMapSelect>
		<keyMapSelect mapIndex="3">
			<modifier keys="anyShift caps"/>
		</keyMapSelect>
		<keyMapSelect mapIndex="4">
			<modifier keys="anyOption"/>
		</keyMapSelect>
		<keyMapSelect mapIndex="5">
			<!-- <modifier keys="anyShift anyOption command? caps?" /> -->
			<modifier keys="anyShift anyOption command?"/>
		</keyMapSelect>
		<keyMapSelect mapIndex="6">
			<modifier keys="anyShift caps anyOption command?"/>
		</keyMapSelect>
		<keyMapSelect mapIndex="7">
			<modifier keys="caps anyOption"/>
		</keyMapSelect>
		<keyMapSelect mapIndex="8">
			<modifier keys="caps? anyOption command"/>
		</keyMapSelect>
		<keyMapSelect mapIndex="9">
			<modifier keys="anyShift? caps? anyOption? command? anyControl"/>
		</keyMapSelect>
	</modifierMap>
	<keyMapSet id="ANSI">
		<keyMap baseIndex="0" baseMapSet="ISO" index="0">
			<!-- No modifiers -->
			<key code="50" output="$"/>
		</keyMap>
		<keyMap baseIndex="1" baseMapSet="ISO" index="1">
			<!-- shift -->
			<key code="50" output="#"/>
		</keyMap>
		<keyMap baseIndex="2" baseMapSet="ISO" index="2">
			<!-- caps lock -->
			<key code="50" output="$"/>
		</keyMap>
		<keyMap baseIndex="3" baseMapSet="ISO" index="3">
			<!-- shift caps lock -->
			<key code="50" output="#"/>
		</keyMap>
		<keyMap baseIndex="4" baseMapSet="ISO" index="4">
			<!-- option -->
			<key code="50" output=""/>
		</keyMap>
		<keyMap baseIndex="5" baseMapSet="ISO" index="5">
			<!-- shift option -->
			<key code="50" output=""/>
		</keyMap>
		<keyMap baseIndex="6" baseMapSet="ISO" index="6">
			<!-- shift option caps lock -->
			<key code="50" output=""/>
		</keyMap>
		<keyMap baseIndex="7" baseMapSet="ISO" index="7">
			<!-- option caps lock -->
			<key code="50" output=""/>
		</keyMap>
		<keyMap baseIndex="8" baseMapSet="ISO" index="8">
			<!-- option command -->
			<key code="50" output=""/>
		</keyMap>
		<keyMap baseIndex="9" baseMapSet="ISO" index="9">
			<!-- control -->
			<key code="50" output="`"/>
		</keyMap>
	</keyMapSet>
	<keyMapSet id="ISO">
		<keyMap index="0">
			<!-- No modifiers -->
			<key action="a" code="0"/>
			<key action="u" code="1"/>
			<key action="i" code="2"/>
			<key action="e" code="3"/>
			<key action="c" code="4"/>
			<key action="," code="5"/>
			<key action="à" code="6"/>
			<key action="y" code="7"/>
			<key action="x" code="8"/>
			<key action="." code="9"/>
			<key action="ê" code="10"/>
			<key action="k" code="11"/>
			<key action="b" code="12"/>
			<key action="é" code="13"/>
			<key action="p" code="14"/>
			<key action="o" code="15"/>
			<key action="circumflex" code="16"/>
			<key action="è" code="17"/>
			<key action="&#x0022;" code="18"/>
			<key action="&#x003C;" code="19"/>
			<key action="&#x003E;" code="20"/>
			<key action="( 1" code="21"/>
			<key action="@" code="22"/>
			<key action=") 1" code="23"/>
			<key action="%" code="24"/>
			<key action="/" code="25"/>
			<key action="+" code="26"/>
			<key action="=" code="27"/>
			<key action="-" code="28"/>
			<key action="*" code="29"/>
			<key action="ç" code="30"/>
			<key action="l" code="31"/>
			<key action="v" code="32"/>
			<key action="z" code="33"/>
			<key action="d" code="34"/>
			<key action="j" code="35"/>
			<key code="36" output="&#x000D;"/>
			<!-- Return -->
			<key action="r" code="37"/>
			<key action="t" code="38"/>
			<key action="m" code="39"/>
			<key action="s" code="40"/>
			<key action="n" code="41"/>
			<key action="w" code="42"/>
			<key action="g" code="43"/>
			<key action="f" code="44"/>
			<key action="&#x0027;" code="45"/>
			<key action="q" code="46"/>
			<key action="h" code="47"/>
			<key code="48" output="&#x0009;"/>
			<!-- Tab -->
			<key action=" " code="49"/>
			<key action="$" code="50"/>
			<key code="51" output="&#x0008;"/>
			<!-- Backspace -->
			<key code="52" output="&#x0003;"/>
			<!-- Enter (Fn-Return) -->
			<key code="53" output="&#x001B;"/>
			<!-- Escape -->
			<!-- gap, 54 through 64 -->
			<key action="," code="65"/>
			<!-- keypad -->
			<key code="66" output="&#x001D;"/>
			<!-- keypad right arrow? -->
			<key action="*" code="67"/>
			<!-- keypad -->
			<!-- gap, 68 -->
			<key action="+" code="69"/>
			<!-- keypad -->
			<key code="70" output="&#x001C;"/>
			<!-- keypad left arrow? -->
			<key code="71" output="&#x001B;"/>
			<!-- Clear -->
			<key code="72" output="&#x001F;"/>
			<!-- keypad down arrow? -->
			<!-- gap, 73 through 74 -->
			<key action="/" code="75"/>
			<!-- keypad -->
			<key code="76" output="&#x0003;"/>
			<!-- Enter -->
			<key code="77" output="&#x001E;"/>
			<!-- keypad up arrow? -->
			<key action="-" code="78"/>
			<!-- keypad -->
			<!-- gap, 79 through 80 -->
			<key action="=" code="81"/>
			<!-- keypad -->
			<key action="0" code="82"/>
			<!-- keypad -->
			<key action="1" code="83"/>
			<!-- keypad -->
			<key action="2" code="84"/>
			<!-- keypad -->
			<key action="3" code="85"/>
			<!-- keypad -->
			<key action="4" code="86"/>
			<!-- keypad -->
			<key action="5" code="87"/>
			<!-- keypad -->
			<key action="6" code="88"/>
			<!-- keypad -->
			<key action="7" code="89"/>
			<!-- keypad -->
			<!-- gap, 90 -->
			<key action="8" code="91"/>
			<!-- keypad -->
			<key action="9" code="92"/>
			<!-- keypad -->
			<!-- gap, 93 through 95 -->
			<key code="96" output="&#x0010;"/>
			<!-- F5 -->
			<key code="97" output="&#x0010;"/>
			<!-- F6 -->
			<key code="98" output="&#x0010;"/>
			<!-- F7 -->
			<key code="99" output="&#x0010;"/>
			<!-- F3 -->
			<key code="100" output="&#x0010;"/>
			<!-- F8 -->
			<key code="101" output="&#x0010;"/>
			<!-- F9 -->
			<key code="102" output="&#x0010;"/>
			<!-- ?? -->
			<key code="103" output="&#x0010;"/>
			<!-- F11 -->
			<key code="104" output="&#x0010;"/>
			<!-- ?? -->
			<key code="105" output="&#x0010;"/>
			<!-- F13 -->
			<key code="106" output="&#x0010;"/>
			<!-- F16 -->
			<key code="107" output="&#x0010;"/>
			<!-- F14 -->
			<key code="108" output="&#x0010;"/>
			<!-- ?? -->
			<key code="109" output="&#x0010;"/>
			<!-- F10 -->
			<key code="110" output="&#x0010;"/>
			<!-- ?? -->
			<key code="111" output="&#x0010;"/>
			<!-- F12 -->
			<key code="112" output="&#x0010;"/>
			<!-- ?? -->
			<key code="113" output="&#x0010;"/>
			<!-- F15 -->
			<key code="114" output="&#x0005;"/>
			<!-- Help -->
			<key code="115" output="&#x0001;"/>
			<!-- Home -->
			<key code="116" output="&#x000B;"/>
			<!-- Page Up -->
			<key code="117" output="&#x007F;"/>
			<!-- Delete -->
			<key code="118" output="&#x0010;"/>
			<!-- F4 -->
			<key code="119" output="&#x0004;"/>
			<!-- End -->
			<key code="120" output="&#x0010;"/>
			<!-- F2 -->
			<key code="121" output="&#x000C;"/>
			<!-- Page Down -->
			<key code="122" output="&#x0010;"/>
			<!-- F1 -->
			<key code="123" output="&#x001C;"/>
			<!-- left arrow -->
			<key code="124" output="&#x001D;"/>
			<!-- right arrow -->
			<key code="125" output="&#x001F;"/>
			<!-- down arrow -->
			<key code="126" output="&#x001E;"/>
			<!-- up arrow -->
			<!-- gap, 127 -->
		</keyMap>
		<keyMap index="1">
			<!-- shift -->
			<key action="A" code="0"/>
			<key action="U" code="1"/>
			<key action="I" code="2"/>
			<key action="E" code="3"/>
			<key action="C" code="4"/>
			<key action=";" code="5"/>
			<key action="À" code="6"/>
			<key action="Y" code="7"/>
			<key action="X" code="8"/>
			<key action=":" code="9"/>
			<key action="Ê" code="10"/>
			<key action="K" code="11"/>
			<key action="B" code="12"/>
			<key action="É" code="13"/>
			<key action="P" code="14"/>
			<key action="O" code="15"/>
			<key action="!" code="16"/>
			<key action="È" code="17"/>
			<key action="1" code="18"/>
			<key action="2" code="19"/>
			<key action="3" code="20"/>
			<key action="4" code="21"/>
			<key action="6" code="22"/>
			<key action="5" code="23"/>
			<key action="`" code="24"/>
			<key action="9" code="25"/>
			<key action="7" code="26"/>
			<key action="°" code="27"/>
			<key action="8" code="28"/>
			<key action="0" code="29"/>
			<key action="Ç" code="30"/>
			<key action="L" code="31"/>
			<key action="V" code="32"/>
			<key action="Z" code="33"/>
			<key action="D" code="34"/>
			<key action="J" code="35"/>
			<key code="36" output="&#x000D;"/>
			<!-- Return -->
			<key action="R" code="37"/>
			<key action="T" code="38"/>
			<key action="M" code="39"/>
			<key action="S" code="40"/>
			<key action="N" code="41"/>
			<key action="W" code="42"/>
			<key action="G" code="43"/>
			<key action="F" code="44"/>
			<key action="?" code="45"/>
			<key action="Q" code="46"/>
			<key action="H" code="47"/>
			<key code="48" output="&#x0009;"/>
			<!-- Tab -->
			<key action=" " code="49"/>
			<key action="#" code="50"/>
			<key code="51" output="&#x0008;"/>
			<!-- Backspace -->
			<key code="52" output="&#x0003;"/>
			<!-- Enter (Fn-Return) -->
			<key code="53" output="&#x001B;"/>
			<!-- Escape -->
			<!-- gap, 54 through 64 -->
			<key action="," code="65"/>
			<!-- keypad -->
			<key code="66" output="&#x001D;"/>
			<!-- keypad right arrow? -->
			<key action="*" code="67"/>
			<!-- keypad -->
			<!-- gap, 68 -->
			<key action="+" code="69"/>
			<!-- keypad -->
			<key code="70" output="&#x001C;"/>
			<!-- keypad left arrow? -->
			<key code="71" output="&#x001B;"/>
			<!-- Clear -->
			<key code="72" output="&#x001F;"/>
			<!-- keypad down arrow? -->
			<!-- gap, 73 through 74 -->
			<key action="/" code="75"/>
			<!-- keypad -->
			<key code="76" output="&#x0003;"/>
			<!-- Enter -->
			<key code="77" output="&#x001E;"/>
			<!-- keypad up arrow? -->
			<key action="-" code="78"/>
			<!-- keypad -->
			<!-- gap, 79 through 80 -->
			<key action="=" code="81"/>
			<!-- keypad -->
			<key action="0" code="82"/>
			<!-- keypad -->
			<key action="1" code="83"/>
			<!-- keypad -->
			<key action="2" code="84"/>
			<!-- keypad -->
			<key action="3" code="85"/>
			<!-- keypad -->
			<key action="4" code="86"/>
			<!-- keypad -->
			<key action="5" code="87"/>
			<!-- keypad -->
			<key action="6" code="88"/>
			<!-- keypad -->
			<key action="7" code="89"/>
			<!-- keypad -->
			<!-- gap, 90 -->
			<key action="8" code="91"/>
			<!-- keypad -->
			<key action="9" code="92"/>
			<!-- keypad -->
			<!-- gap, 93 through 95 -->
			<key code="96" output="&#x0010;"/>
			<!-- F5 -->
			<key code="97" output="&#x0010;"/>
			<!-- F6 -->
			<key code="98" output="&#x0010;"/>
			<!-- F7 -->
			<key code="99" output="&#x0010;"/>
			<!-- F3 -->
			<key code="100" output="&#x0010;"/>
			<!-- F8 -->
			<key code="101" output="&#x0010;"/>
			<!-- F9 -->
			<key code="102" output="&#x0010;"/>
			<!-- ?? -->
			<key code="103" output="&#x0010;"/>
			<!-- F11 -->
			<key code="104" output="&#x0010;"/>
			<!-- ?? -->
			<key code="105" output="&#x0010;"/>
			<!-- F13 -->
			<key code="106" output="&#x0010;"/>
			<!-- F16 -->
			<key code="107" output="&#x0010;"/>
			<!-- F14 -->
			<key code="108" output="&#x0010;"/>
			<!-- ?? -->
			<key code="109" output="&#x0010;"/>
			<!-- F10 -->
			<key code="110" output="&#x0010;"/>
			<!-- ?? -->
			<key code="111" output="&#x0010;"/>
			<!-- F12 -->
			<key code="112" output="&#x0010;"/>
			<!-- ?? -->
			<key code="113" output="&#x0010;"/>
			<!-- F15 -->
			<key code="114" output="&#x0005;"/>
			<!-- Help -->
			<key code="115" output="&#x0001;"/>
			<!-- Home -->
			<key code="116" output="&#x000B;"/>
			<!-- Page Up -->
			<key code="117" output="&#x007F;"/>
			<!-- Delete -->
			<key code="118" output="&#x0010;"/>
			<!-- F4 -->
			<key code="119" output="&#x0004;"/>
			<!-- End -->
			<key code="120" output="&#x0010;"/>
			<!-- F2 -->
			<key code="121" output="&#x000C;"/>
			<!-- Page Down -->
			<key code="122" output="&#x0010;"/>
			<!-- F1 -->
			<key code="123" output="&#x001C;"/>
			<!-- left arrow -->
			<key code="124" output="&#x001D;"/>
			<!-- right arrow -->
			<key code="125" output="&#x001F;"/>
			<!-- down arrow -->
			<key code="126" output="&#x001E;"/>
			<!-- up arrow -->
		</keyMap>
		<keyMap index="2">
			<!-- caps lock -->
			<key action="A" code="0"/>
			<key action="U" code="1"/>
			<key action="I" code="2"/>
			<key action="E" code="3"/>
			<key action="C" code="4"/>
			<key action="," code="5"/>
			<key action="À" code="6"/>
			<key action="Y" code="7"/>
			<key action="X" code="8"/>
			<key action="." code="9"/>
			<key action="Ê" code="10"/>
			<key action="K" code="11"/>
			<key action="B" code="12"/>
			<key action="É" code="13"/>
			<key action="P" code="14"/>
			<key action="O" code="15"/>
			<key action="circumflex" code="16"/>
			<key action="È" code="17"/>
			<key action="1" code="18"/>
			<key action="2" code="19"/>
			<key action="3" code="20"/>
			<key action="4" code="21"/>
			<key action="6" code="22"/>
			<key action="5" code="23"/>
			<key action="%" code="24"/>
			<key action="9" code="25"/>
			<key action="7" code="26"/>
			<key action="=" code="27"/>
			<key action="8" code="28"/>
			<key action="0" code="29"/>
			<key action="Ç" code="30"/>
			<key action="L" code="31"/>
			<key action="V" code="32"/>
			<key action="Z" code="33"/>
			<key action="D" code="34"/>
			<key action="J" code="35"/>
			<key code="36" output="&#x000D;"/>
			<!-- Return -->
			<key action="R" code="37"/>
			<key action="T" code="38"/>
			<key action="M" code="39"/>
			<key action="S" code="40"/>
			<key action="N" code="41"/>
			<key action="W" code="42"/>
			<key action="G" code="43"/>
			<key action="F" code="44"/>
			<key action="&#x0027;" code="45"/>
			<key action="Q" code="46"/>
			<key action="H" code="47"/>
			<key code="48" output="&#x0009;"/>
			<!-- Tab -->
			<key action=" " code="49"/>
			<key action="#" code="50"/>
			<key code="51" output="&#x0008;"/>
			<!-- Backspace -->
			<key code="52" output="&#x0003;"/>
			<!-- Enter (Fn-Return) -->
			<key code="53" output="&#x001B;"/>
			<!-- Escape -->
			<!-- gap, 54 through 64 -->
			<key action="." code="65"/>
			<!-- keypad -->
			<key code="66" output="&#x001D;"/>
			<!-- keypad right arrow? -->
			<key action="*" code="67"/>
			<!-- keypad -->
			<!-- gap, 68 -->
			<key action="+" code="69"/>
			<!-- keypad -->
			<key code="70" output="&#x001C;"/>
			<!-- keypad left arrow? -->
			<key code="71" output="&#x001B;"/>
			<!-- Clear -->
			<key code="72" output="&#x001F;"/>
			<!-- keypad down arrow? -->
			<!-- gap, 73 through 74 -->
			<key action="/" code="75"/>
			<!-- keypad -->
			<key code="76" output="&#x0003;"/>
			<!-- Enter -->
			<key code="77" output="&#x001E;"/>
			<!-- keypad up arrow? -->
			<key action="-" code="78"/>
			<!-- keypad -->
			<!-- gap, 79 through 80 -->
			<key action="=" code="81"/>
			<!-- keypad -->
			<key action="0" code="82"/>
			<!-- keypad -->
			<key action="1" code="83"/>
			<!-- keypad -->
			<key action="2" code="84"/>
			<!-- keypad -->
			<key action="3" code="85"/>
			<!-- keypad -->
			<key action="4" code="86"/>
			<!-- keypad -->
			<key action="5" code="87"/>
			<!-- keypad -->
			<key action="6" code="88"/>
			<!-- keypad -->
			<key action="7" code="89"/>
			<!-- keypad -->
			<!-- gap, 90 -->
			<key action="8" code="91"/>
			<!-- keypad -->
			<key action="9" code="92"/>
			<!-- keypad -->
			<!-- gap, 93 through 95 -->
			<key code="96" output="&#x0010;"/>
			<!-- F5 -->
			<key code="97" output="&#x0010;"/>
			<!-- F6 -->
			<key code="98" output="&#x0010;"/>
			<!-- F7 -->
			<key code="99" output="&#x0010;"/>
			<!-- F3 -->
			<key code="100" output="&#x0010;"/>
			<!-- F8 -->
			<key code="101" output="&#x0010;"/>
			<!-- F9 -->
			<key code="102" output="&#x0010;"/>
			<!-- ?? -->
			<key code="103" output="&#x0010;"/>
			<!-- F11 -->
			<key code="104" output="&#x0010;"/>
			<!-- ?? -->
			<key code="105" output="&#x0010;"/>
			<!-- F13 -->
			<key code="106" output="&#x0010;"/>
			<!-- F16 -->
			<key code="107" output="&#x0010;"/>
			<!-- F14 -->
			<key code="108" output="&#x0010;"/>
			<!-- ?? -->
			<key code="109" output="&#x0010;"/>
			<!-- F10 -->
			<key code="110" output="&#x0010;"/>
			<!-- ?? -->
			<key code="111" output="&#x0010;"/>
			<!-- F12 -->
			<key code="112" output="&#x0010;"/>
			<!-- ?? -->
			<key code="113" output="&#x0010;"/>
			<!-- F15 -->
			<key code="114" output="&#x0005;"/>
			<!-- Help -->
			<key code="115" output="&#x0001;"/>
			<!-- Home -->
			<key code="116" output="&#x000B;"/>
			<!-- Page Up -->
			<key code="117" output="&#x007F;"/>
			<!-- Delete -->
			<key code="118" output="&#x0010;"/>
			<!-- F4 -->
			<key code="119" output="&#x0004;"/>
			<!-- End -->
			<key code="120" output="&#x0010;"/>
			<!-- F2 -->
			<key code="121" output="&#x000C;"/>
			<!-- Page Down -->
			<key code="122" output="&#x0010;"/>
			<!-- F1 -->
			<key code="123" output="&#x001C;"/>
			<!-- left arrow -->
			<key code="124" output="&#x001D;"/>
			<!-- right arrow -->
			<key code="125" output="&#x001F;"/>
			<!-- down arrow -->
			<key code="126" output="&#x001E;"/>
			<!-- up arrow -->
		</keyMap>
		<keyMap index="3">
			<!-- shift caps lock -->
			<key action="a" code="0"/>
			<key action="u" code="1"/>
			<key action="i" code="2"/>
			<key action="e" code="3"/>
			<key action="c" code="4"/>
			<key action=";" code="5"/>
			<key action="à" code="6"/>
			<key action="y" code="7"/>
			<key action="x" code="8"/>
			<key action=":" code="9"/>
			<key action="ê" code="10"/>
			<key action="k" code="11"/>
			<key action="b" code="12"/>
			<key action="é" code="13"/>
			<key action="p" code="14"/>
			<key action="o" code="15"/>
			<key action="!" code="16"/>
			<key action="è" code="17"/>
			<key action="&#x0022;" code="18"/>
			<key action="&#x003C;" code="19"/>
			<key action="&#x003E;" code="20"/>
			<key action="(" code="21"/>
			<key action="@" code="22"/>
			<key action=")" code="23"/>
			<key action="`" code="24"/>
			<key action="/" code="25"/>
			<key action="+" code="26"/>
			<key action="°" code="27"/>
			<key action="-" code="28"/>
			<key action="*" code="29"/>
			<key action="ç" code="30"/>
			<key action="l" code="31"/>
			<key action="v" code="32"/>
			<key action="z" code="33"/>
			<key action="d" code="34"/>
			<key action="j" code="35"/>
			<key code="36" output="&#x000D;"/>
			<!-- Return -->
			<key action="r" code="37"/>
			<key action="t" code="38"/>
			<key action="m" code="39"/>
			<key action="s" code="40"/>
			<key action="n" code="41"/>
			<key action="w" code="42"/>
			<key action="g" code="43"/>
			<key action="f" code="44"/>
			<key action="?" code="45"/>
			<key action="q" code="46"/>
			<key action="h" code="47"/>
			<key code="48" output="&#x0009;"/>
			<!-- Tab -->
			<key action=" " code="49"/>
			<key action="$" code="50"/>
			<key code="51" output="&#x0008;"/>
			<!-- Backspace -->
			<key code="52" output="&#x0003;"/>
			<!-- Enter (Fn-Return) -->
			<key code="53" output="&#x001B;"/>
			<!-- Escape -->
			<!-- gap, 54 through 64 -->
			<key action="." code="65"/>
			<!-- keypad -->
			<key code="66" output="&#x001D;"/>
			<!-- keypad right arrow? -->
			<key action="*" code="67"/>
			<!-- keypad -->
			<!-- gap, 68 -->
			<key action="+" code="69"/>
			<!-- keypad -->
			<key code="70" output="&#x001C;"/>
			<!-- keypad left arrow? -->
			<key code="71" output="&#x001B;"/>
			<!-- Clear -->
			<key code="72" output="&#x001F;"/>
			<!-- keypad down arrow? -->
			<!-- gap, 73 through 74 -->
			<key action="/" code="75"/>
			<!-- keypad -->
			<key code="76" output="&#x0003;"/>
			<!-- Enter -->
			<key code="77" output="&#x001E;"/>
			<!-- keypad up arrow? -->
			<key action="-" code="78"/>
			<!-- keypad -->
			<!-- gap, 79 through 80 -->
			<key action="=" code="81"/>
			<!-- keypad -->
			<key action="0" code="82"/>
			<!-- keypad -->
			<key action="1" code="83"/>
			<!-- keypad -->
			<key action="2" code="84"/>
			<!-- keypad -->
			<key action="3" code="85"/>
			<!-- keypad -->
			<key action="4" code="86"/>
			<!-- keypad -->
			<key action="5" code="87"/>
			<!-- keypad -->
			<key action="6" code="88"/>
			<!-- keypad -->
			<key action="7" code="89"/>
			<!-- keypad -->
			<!-- gap, 90 -->
			<key action="8" code="91"/>
			<!-- keypad -->
			<key action="9" code="92"/>
			<!-- keypad -->
			<!-- gap, 93 through 95 -->
			<key code="96" output="&#x0010;"/>
			<!-- F5 -->
			<key code="97" output="&#x0010;"/>
			<!-- F6 -->
			<key code="98" output="&#x0010;"/>
			<!-- F7 -->
			<key code="99" output="&#x0010;"/>
			<!-- F3 -->
			<key code="100" output="&#x0010;"/>
			<!-- F8 -->
			<key code="101" output="&#x0010;"/>
			<!-- F9 -->
			<key code="102" output="&#x0010;"/>
			<!-- ?? -->
			<key code="103" output="&#x0010;"/>
			<!-- F11 -->
			<key code="104" output="&#x0010;"/>
			<!-- ?? -->
			<key code="105" output="&#x0010;"/>
			<!-- F13 -->
			<key code="106" output="&#x0010;"/>
			<!-- F16 -->
			<key code="107" output="&#x0010;"/>
			<!-- F14 -->
			<key code="108" output="&#x0010;"/>
			<!-- ?? -->
			<key code="109" output="&#x0010;"/>
			<!-- F10 -->
			<key code="110" output="&#x0010;"/>
			<!-- ?? -->
			<key code="111" output="&#x0010;"/>
			<!-- F12 -->
			<key code="112" output="&#x0010;"/>
			<!-- ?? -->
			<key code="113" output="&#x0010;"/>
			<!-- F15 -->
			<key code="114" output="&#x0005;"/>
			<!-- Help -->
			<key code="115" output="&#x0001;"/>
			<!-- Home -->
			<key code="116" output="&#x000B;"/>
			<!-- Page Up -->
			<key code="117" output="&#x007F;"/>
			<!-- Delete -->
			<key code="118" output="&#x0010;"/>
			<!-- F4 -->
			<key code="119" output="&#x0004;"/>
			<!-- End -->
			<key code="120" output="&#x0010;"/>
			<!-- F2 -->
			<key code="121" output="&#x000C;"/>
			<!-- Page Down -->
			<key code="122" output="&#x0010;"/>
			<!-- F1 -->
			<key code="123" output="&#x001C;"/>
			<!-- left arrow -->
			<key code="124" output="&#x001D;"/>
			<!-- right arrow -->
			<key code="125" output="&#x001F;"/>
			<!-- down arrow -->
			<key code="126" output="&#x001E;"/>
			<!-- up arrow -->
		</keyMap>
		<keyMap index="4">
			<!-- option -->
			<key action="æ" code="0"/>
			<key action="ù" code="1"/>
			<key action="diaeresis" code="2"/>
			<key action="€" code="3"/>
			<key action="© 2" code="4"/>
			<key action="’" code="5"/>
			<key action="\" code="6"/>
			<key action="«" code="7"/>
			<key action="»" code="8"/>
			<key action="…" code="9"/>
			<key action="–" code="10"/>
			<key action="~" code="11"/>
			<key action="|" code="12"/>
			<key action="acute" code="13"/>
			<key action="&#x0026;" code="14"/>
			<key action="œ" code="15"/>
			<key action="¡" code="16"/>
			<key action="grave" code="17"/>
			<key action="_" code="18"/>
			<key action="«" code="19"/>
			<key action="»" code="20"/>
			<key code="21" output="["/>
			<key action="^" code="22"/>
			<key action="]" code="23"/>
			<key action="‰" code="24"/>
			<key action="÷" code="25"/>
			<key action="±" code="26"/>
			<key action="≠" code="27"/>
			<key action="−" code="28"/>
			<key action="×" code="29"/>
			<key action="breve" code="30"/>
			<key action="stroke" code="31"/>
			<key code="32" output="&#x003C;"/>
			<key action="ə" code="33"/>
			<key action="] 1" code="34"/>
			<key action="ĳ" code="35"/>
			<key code="36" output="&#x000D;"/>
			<!-- Return -->
			<key action="}" code="37"/>
			<key action="(" code="38"/>
			<key action="macron" code="39"/>
			<key action=")" code="40"/>
			<key action="©" code="41"/>
			<key action="cedilla" code="42"/>
			<key action="»" code="43"/>
			<key action="ogonek" code="44"/>
			<key action="¿" code="45"/>
			<key action="«" code="46"/>
			<key action="…" code="47"/>
			<key code="48" output="&#x0009;"/>
			<!-- Tab -->
			<key action="_" code="49"/>
			<key action="/" code="50"/>
			<key code="51" output="&#x0008;"/>
			<!-- Backspace -->
			<key code="52" output="&#x0003;"/>
			<!-- Enter (Fn-Return) -->
			<key code="53" output="&#x001B;"/>
			<!-- Escape -->
			<!-- gap, 54 through 64 -->
			<key action="," code="65"/>
			<!-- keypad -->
			<key code="66" output="&#x001D;"/>
			<!-- keypad right arrow? -->
			<key action="*" code="67"/>
			<!-- keypad -->
			<!-- gap, 68 -->
			<key action="+" code="69"/>
			<!-- keypad -->
			<key code="70" output="&#x001C;"/>
			<!-- keypad left arrow? -->
			<key code="71" output="&#x001B;"/>
			<!-- Clear -->
			<key code="72" output="&#x001F;"/>
			<!-- keypad down arrow? -->
			<!-- gap, 73 through 74 -->
			<key action="/" code="75"/>
			<!-- keypad -->
			<key code="76" output="&#x0003;"/>
			<!-- Enter -->
			<key code="77" output="&#x001E;"/>
			<!-- keypad up arrow? -->
			<key action="-" code="78"/>
			<!-- keypad -->
			<!-- gap, 79 through 80 -->
			<key action="=" code="81"/>
			<!-- keypad -->
			<key action="0" code="82"/>
			<!-- keypad -->
			<key action="1" code="83"/>
			<!-- keypad -->
			<key action="2" code="84"/>
			<!-- keypad -->
			<key action="3" code="85"/>
			<!-- keypad -->
			<key action="4" code="86"/>
			<!-- keypad -->
			<key action="5" code="87"/>
			<!-- keypad -->
			<key action="6" code="88"/>
			<!-- keypad -->
			<key action="7" code="89"/>
			<!-- keypad -->
			<!-- gap, 90 -->
			<key action="8" code="91"/>
			<!-- keypad -->
			<key action="9" code="92"/>
			<!-- keypad -->
			<!-- gap, 93 through 95 -->
			<key code="96" output="&#x0010;"/>
			<!-- F5 -->
			<key code="97" output="&#x0010;"/>
			<!-- F6 -->
			<key code="98" output="&#x0010;"/>
			<!-- F7 -->
			<key code="99" output="&#x0010;"/>
			<!-- F3 -->
			<key code="100" output="&#x0010;"/>
			<!-- F8 -->
			<key code="101" output="&#x0010;"/>
			<!-- F9 -->
			<key code="102" output="&#x0010;"/>
			<!-- ?? -->
			<key code="103" output="&#x0010;"/>
			<!-- F11 -->
			<key code="104" output="&#x0010;"/>
			<!-- ?? -->
			<key code="105" output="&#x0010;"/>
			<!-- F13 -->
			<key code="106" output="&#x0010;"/>
			<!-- F16 -->
			<key code="107" output="&#x0010;"/>
			<!-- F14 -->
			<key code="108" output="&#x0010;"/>
			<!-- ?? -->
			<key code="109" output="&#x0010;"/>
			<!-- F10 -->
			<key code="110" output="&#x0010;"/>
			<!-- ?? -->
			<key code="111" output="&#x0010;"/>
			<!-- F12 -->
			<key code="112" output="&#x0010;"/>
			<!-- ?? -->
			<key code="113" output="&#x0010;"/>
			<!-- F15 -->
			<key code="114" output="&#x0005;"/>
			<!-- Help -->
			<key code="115" output="&#x0001;"/>
			<!-- Home -->
			<key code="116" output="&#x000B;"/>
			<!-- Page Up -->
			<key code="117" output="&#x007F;"/>
			<!-- Delete -->
			<key code="118" output="&#x0010;"/>
			<!-- F4 -->
			<key code="119" output="&#x0004;"/>
			<!-- End -->
			<key code="120" output="&#x0010;"/>
			<!-- F2 -->
			<key code="121" output="&#x000C;"/>
			<!-- Page Down -->
			<key code="122" output="&#x0010;"/>
			<!-- F1 -->
			<key code="123" output="&#x001C;"/>
			<!-- left arrow -->
			<key code="124" output="&#x001D;"/>
			<!-- right arrow -->
			<key code="125" output="&#x001F;"/>
			<!-- down arrow -->
			<key code="126" output="&#x001E;"/>
			<!-- up arrow -->
		</keyMap>
		<keyMap index="5">
			<!-- shift option -->
			<key action="Æ" code="0"/>
			<key action="Ù" code="1"/>
			<key action="abovedot" code="2"/>
			<key action="currency" code="3"/>
			<key action="ſ" code="4"/>
			<key action="horn" code="5"/>
			<key action="" code="6"/>
			<key action="‘" code="7"/>
			<key action="’" code="8"/>
			<key action="·" code="9"/>
			<key action="¶" code="10"/>
			<key action="⌨" code="11"/>
			<key action="¦" code="12"/>
			<key action="doubleacute" code="13"/>
			<key action="§" code="14"/>
			<key action="Œ" code="15"/>
			<key action="" code="16"/>
			<key action="`" code="17"/>
			<key action="„" code="18"/>
			<key action="“" code="19"/>
			<key action="”" code="20"/>
			<key action="≤" code="21"/>
			<key action="" code="22"/>
			<key action="≥" code="23"/>
			<key action="″" code="24"/>
			<key action="½" code="25"/>
			<key action="¬" code="26"/>
			<key action="′" code="27"/>
			<key action="¼" code="28"/>
			<key action="¾" code="29"/>
			<key action="" code="30"/>
			<key action="" code="31"/>
			<key action="[" code="32"/>
			<key action="Ə" code="33"/>
			<key action="]" code="34"/>
			<key action="Ĳ" code="35"/>
			<key code="36" output="&#x000D;"/>
			<!-- Return -->
			<key action="}" code="37"/>
			<key action="(" code="38"/>
			<key action="º" code="39"/>
			<key action=")" code="40"/>
			<key action="©" code="41"/>
			<key action="commabelow" code="42"/>
			<key action="" code="43"/>
			<key action="ª" code="44"/>
			<key action="hook" code="45"/>
			<key action="belowdot" code="46"/>
			<key action="‡" code="47"/>
			<key code="48" output="&#x0009;"/>
			<!-- Tab -->
			<key action=" " code="49"/>
			<key action="" code="50"/>
			<key code="51" output="&#x0008;"/>
			<!-- Backspace -->
			<key code="52" output="&#x0003;"/>
			<!-- Enter (Fn-Return) -->
			<key code="53" output="&#x001B;"/>
			<!-- Escape -->
			<!-- gap, 54 through 64 -->
			<key action="." code="65"/>
			<!-- keypad -->
			<key code="66" output="&#x001D;"/>
			<!-- keypad right arrow? -->
			<key action="*" code="67"/>
			<!-- keypad -->
			<!-- gap, 68 -->
			<key action="+" code="69"/>
			<!-- keypad -->
			<key code="70" output="&#x001C;"/>
			<!-- keypad left arrow? -->
			<key code="71" output="&#x001B;"/>
			<!-- Clear -->
			<key code="72" output="&#x001F;"/>
			<!-- keypad down arrow? -->
			<!-- gap, 73 through 74 -->
			<key action="/" code="75"/>
			<!-- keypad -->
			<key code="76" output="&#x0003;"/>
			<!-- Enter -->
			<key code="77" output="&#x001E;"/>
			<!-- keypad up arrow? -->
			<key action="-" code="78"/>
			<!-- keypad -->
			<!-- gap, 79 through 80 -->
			<key action="=" code="81"/>
			<!-- keypad -->
			<key action="0" code="82"/>
			<!-- keypad -->
			<key action="1" code="83"/>
			<!-- keypad -->
			<key action="2" code="84"/>
			<!-- keypad -->
			<key action="3" code="85"/>
			<!-- keypad -->
			<key action="4" code="86"/>
			<!-- keypad -->
			<key action="5" code="87"/>
			<!-- keypad -->
			<key action="6" code="88"/>
			<!-- keypad -->
			<key action="7" code="89"/>
			<!-- keypad -->
			<!-- gap, 90 -->
			<key action="8" code="91"/>
			<!-- keypad -->
			<key action="9" code="92"/>
			<!-- keypad -->
			<!-- gap, 93 through 95 -->
			<key code="96" output="&#x0010;"/>
			<!-- F5 -->
			<key code="97" output="&#x0010;"/>
			<!-- F6 -->
			<key code="98" output="&#x0010;"/>
			<!-- F7 -->
			<key code="99" output="&#x0010;"/>
			<!-- F3 -->
			<key code="100" output="&#x0010;"/>
			<!-- F8 -->
			<key code="101" output="&#x0010;"/>
			<!-- F9 -->
			<key code="102" output="&#x0010;"/>
			<!-- ?? -->
			<key code="103" output="&#x0010;"/>
			<!-- F11 -->
			<key code="104" output="&#x0010;"/>
			<!-- ?? -->
			<key code="105" output="&#x0010;"/>
			<!-- F13 -->
			<key code="106" output="&#x0010;"/>
			<!-- F16 -->
			<key code="107" output="&#x0010;"/>
			<!-- F14 -->
			<key code="108" output="&#x0010;"/>
			<!-- ?? -->
			<key code="109" output="&#x0010;"/>
			<!-- F10 -->
			<key code="110" output="&#x0010;"/>
			<!-- ?? -->
			<key code="111" output="&#x0010;"/>
			<!-- F12 -->
			<key code="112" output="&#x0010;"/>
			<!-- ?? -->
			<key code="113" output="&#x0010;"/>
			<!-- F15 -->
			<key code="114" output="&#x0005;"/>
			<!-- Help -->
			<key code="115" output="&#x0001;"/>
			<!-- Home -->
			<key code="116" output="&#x000B;"/>
			<!-- Page Up -->
			<key code="117" output="&#x007F;"/>
			<!-- Delete -->
			<key code="118" output="&#x0010;"/>
			<!-- F4 -->
			<key code="119" output="&#x0004;"/>
			<!-- End -->
			<key code="120" output="&#x0010;"/>
			<!-- F2 -->
			<key code="121" output="&#x000C;"/>
			<!-- Page Down -->
			<key code="122" output="&#x0010;"/>
			<!-- F1 -->
			<key code="123" output="&#x001C;"/>
			<!-- left arrow -->
			<key code="124" output="&#x001D;"/>
			<!-- right arrow -->
			<key code="125" output="&#x001F;"/>
			<!-- down arrow -->
			<key code="126" output="&#x001E;"/>
			<!-- up arrow -->
		</keyMap>
		<keyMap index="6">
			<!-- shift option caps lock -->
			<key action="æ" code="0"/>
			<key action="ù" code="1"/>
			<key action="abovedot" code="2"/>
			<key action="currency" code="3"/>
			<key action="ſ" code="4"/>
			<key action="horn" code="5"/>
			<key action="" code="6"/>
			<key action="‘" code="7"/>
			<key action="’" code="8"/>
			<key action="·" code="9"/>
			<key action="¶" code="10"/>
			<key action="⌨" code="11"/>
			<key action="¦" code="12"/>
			<key action="doubleacute" code="13"/>
			<key action="§" code="14"/>
			<key action="œ" code="15"/>
			<key action="" code="16"/>
			<key action="`" code="17"/>
			<key action="„" code="18"/>
			<key action="“" code="19"/>
			<key action="”" code="20"/>
			<key action="≤" code="21"/>
			<key action="" code="22"/>
			<key action="≥" code="23"/>
			<key action="″" code="24"/>
			<key action="½" code="25"/>
			<key action="¬" code="26"/>
			<key action="′" code="27"/>
			<key action="¼" code="28"/>
			<key action="¾" code="29"/>
			<key action="" code="30"/>
			<key action="" code="31"/>
			<key action="[" code="32"/>
			<key action="ə" code="33"/>
			<key action="]" code="34"/>
			<key action="ĳ" code="35"/>
			<key code="36" output="&#x000D;"/>
			<!-- Return -->
			<key action="}" code="37"/>
			<key action="(" code="38"/>
			<key action="º" code="39"/>
			<key action=")" code="40"/>
			<key action="©" code="41"/>
			<key action="commabelow" code="42"/>
			<key action="" code="43"/>
			<key action="ª" code="44"/>
			<key action="hook" code="45"/>
			<key action="belowdot" code="46"/>
			<key action="‡" code="47"/>
			<key code="48" output="&#x0009;"/>
			<!-- Tab -->
			<key action=" " code="49"/>
			<key action="" code="50"/>
			<key code="51" output="&#x0008;"/>
			<!-- Backspace -->
			<key code="52" output="&#x0003;"/>
			<!-- Enter (Fn-Return) -->
			<key code="53" output="&#x001B;"/>
			<!-- Escape -->
			<!-- gap, 54 through 64 -->
			<key action="." code="65"/>
			<!-- keypad -->
			<key code="66" output="&#x001D;"/>
			<!-- keypad right arrow? -->
			<key action="*" code="67"/>
			<!-- keypad -->
			<!-- gap, 68 -->
			<key action="+" code="69"/>
			<!-- keypad -->
			<key code="70" output="&#x001C;"/>
			<!-- keypad left arrow? -->
			<key code="71" output="&#x001B;"/>
			<!-- Clear -->
			<key code="72" output="&#x001F;"/>
			<!-- keypad down arrow? -->
			<!-- gap, 73 through 74 -->
			<key action="/" code="75"/>
			<!-- keypad -->
			<key code="76" output="&#x0003;"/>
			<!-- Enter -->
			<key code="77" output="&#x001E;"/>
			<!-- keypad up arrow? -->
			<key action="-" code="78"/>
			<!-- keypad -->
			<!-- gap, 79 through 80 -->
			<key action="=" code="81"/>
			<!-- keypad -->
			<key action="0" code="82"/>
			<!-- keypad -->
			<key action="1" code="83"/>
			<!-- keypad -->
			<key action="2" code="84"/>
			<!-- keypad -->
			<key action="3" code="85"/>
			<!-- keypad -->
			<key action="4" code="86"/>
			<!-- keypad -->
			<key action="5" code="87"/>
			<!-- keypad -->
			<key action="6" code="88"/>
			<!-- keypad -->
			<key action="7" code="89"/>
			<!-- keypad -->
			<!-- gap, 90 -->
			<key action="8" code="91"/>
			<!-- keypad -->
			<key action="9" code="92"/>
			<!-- keypad -->
			<!-- gap, 93 through 95 -->
			<key code="96" output="&#x0010;"/>
			<!-- F5 -->
			<key code="97" output="&#x0010;"/>
			<!-- F6 -->
			<key code="98" output="&#x0010;"/>
			<!-- F7 -->
			<key code="99" output="&#x0010;"/>
			<!-- F3 -->
			<key code="100" output="&#x0010;"/>
			<!-- F8 -->
			<key code="101" output="&#x0010;"/>
			<!-- F9 -->
			<key code="102" output="&#x0010;"/>
			<!-- ?? -->
			<key code="103" output="&#x0010;"/>
			<!-- F11 -->
			<key code="104" output="&#x0010;"/>
			<!-- ?? -->
			<key code="105" output="&#x0010;"/>
			<!-- F13 -->
			<key code="106" output="&#x0010;"/>
			<!-- F16 -->
			<key code="107" output="&#x0010;"/>
			<!-- F14 -->
			<key code="108" output="&#x0010;"/>
			<!-- ?? -->
			<key code="109" output="&#x0010;"/>
			<!-- F10 -->
			<key code="110" output="&#x0010;"/>
			<!-- ?? -->
			<key code="111" output="&#x0010;"/>
			<!-- F12 -->
			<key code="112" output="&#x0010;"/>
			<!-- ?? -->
			<key code="113" output="&#x0010;"/>
			<!-- F15 -->
			<key code="114" output="&#x0005;"/>
			<!-- Help -->
			<key code="115" output="&#x0001;"/>
			<!-- Home -->
			<key code="116" output="&#x000B;"/>
			<!-- Page Up -->
			<key code="117" output="&#x007F;"/>
			<!-- Delete -->
			<key code="118" output="&#x0010;"/>
			<!-- F4 -->
			<key code="119" output="&#x0004;"/>
			<!-- End -->
			<key code="120" output="&#x0010;"/>
			<!-- F2 -->
			<key code="121" output="&#x000C;"/>
			<!-- Page Down -->
			<key code="122" output="&#x0010;"/>
			<!-- F1 -->
			<key code="123" output="&#x001C;"/>
			<!-- left arrow -->
			<key code="124" output="&#x001D;"/>
			<!-- right arrow -->
			<key code="125" output="&#x001F;"/>
			<!-- down arrow -->
			<key code="126" output="&#x001E;"/>
			<!-- up arrow -->
		</keyMap>
		<keyMap index="7">
			<!-- option caps lock -->
			<key action="Æ" code="0"/>
			<key action="Ù" code="1"/>
			<key action="diaeresis" code="2"/>
			<key action="€" code="3"/>
			<key action="{" code="4"/>
			<key action="’" code="5"/>
			<key action="\" code="6"/>
			<key action="«" code="7"/>
			<key action="»" code="8"/>
			<key action="…" code="9"/>
			<key action="–" code="10"/>
			<key action="~" code="11"/>
			<key action="|" code="12"/>
			<key action="acute" code="13"/>
			<key action="&#x0026;" code="14"/>
			<key action="Œ" code="15"/>
			<key action="¡" code="16"/>
			<key action="grave" code="17"/>
			<key action="_" code="18"/>
			<key action="«" code="19"/>
			<key action="»" code="20"/>
			<key action="[" code="21"/>
			<key action="^" code="22"/>
			<key action="]" code="23"/>
			<key action="‰" code="24"/>
			<key action="÷" code="25"/>
			<key action="±" code="26"/>
			<key action="≠" code="27"/>
			<key action="−" code="28"/>
			<key action="×" code="29"/>
			<key action="breve" code="30"/>
			<key action="stroke" code="31"/>
			<key action="[" code="32"/>
			<key action="Ə" code="33"/>
			<key action="]" code="34"/>
			<key action="Ĳ" code="35"/>
			<key code="36" output="&#x000D;"/>
			<!-- Return -->
			<key action="}" code="37"/>
			<key action="(" code="38"/>
			<key action="macron" code="39"/>
			<key action="(" code="40"/>
			<key action="©" code="41"/>
			<key action="cedilla" code="42"/>
			<key action="greek" code="43"/>
			<key action="ogonek" code="44"/>
			<key action="¿" code="45"/>
			<key action="ringabove" code="46"/>
			<key action="†" code="47"/>
			<key code="48" output="&#x0009;"/>
			<!-- Tab -->
			<key action="_" code="49"/>
			<key action="/" code="50"/>
			<key code="51" output="&#x0008;"/>
			<!-- Backspace -->
			<key code="52" output="&#x0003;"/>
			<!-- Enter (Fn-Return) -->
			<key code="53" output="&#x001B;"/>
			<!-- Escape -->
			<!-- gap, 54 through 64 -->
			<key action="," code="65"/>
			<!-- keypad -->
			<key code="66" output="&#x001D;"/>
			<!-- keypad right arrow? -->
			<key action="*" code="67"/>
			<!-- keypad -->
			<!-- gap, 68 -->
			<key action="+" code="69"/>
			<!-- keypad -->
			<key code="70" output="&#x001C;"/>
			<!-- keypad left arrow? -->
			<key code="71" output="&#x001B;"/>
			<!-- Clear -->
			<key code="72" output="&#x001F;"/>
			<!-- keypad down arrow? -->
			<!-- gap, 73 through 74 -->
			<key action="/" code="75"/>
			<!-- keypad -->
			<key code="76" output="&#x0003;"/>
			<!-- Enter -->
			<key code="77" output="&#x001E;"/>
			<!-- keypad up arrow? -->
			<key action="-" code="78"/>
			<!-- keypad -->
			<!-- gap, 79 through 80 -->
			<key action="=" code="81"/>
			<!-- keypad -->
			<key action="0" code="82"/>
			<!-- keypad -->
			<key action="1" code="83"/>
			<!-- keypad -->
			<key action="2" code="84"/>
			<!-- keypad -->
			<key action="3" code="85"/>
			<!-- keypad -->
			<key action="4" code="86"/>
			<!-- keypad -->
			<key action="5" code="87"/>
			<!-- keypad -->
			<key action="6" code="88"/>
			<!-- keypad -->
			<key action="7" code="89"/>
			<!-- keypad -->
			<!-- gap, 90 -->
			<key action="8" code="91"/>
			<!-- keypad -->
			<key action="9" code="92"/>
			<!-- keypad -->
			<!-- gap, 93 through 95 -->
			<key code="96" output="&#x0010;"/>
			<!-- F5 -->
			<key code="97" output="&#x0010;"/>
			<!-- F6 -->
			<key code="98" output="&#x0010;"/>
			<!-- F7 -->
			<key code="99" output="&#x0010;"/>
			<!-- F3 -->
			<key code="100" output="&#x0010;"/>
			<!-- F8 -->
			<key code="101" output="&#x0010;"/>
			<!-- F9 -->
			<key code="102" output="&#x0010;"/>
			<!-- ?? -->
			<key code="103" output="&#x0010;"/>
			<!-- F11 -->
			<key code="104" output="&#x0010;"/>
			<!-- ?? -->
			<key code="105" output="&#x0010;"/>
			<!-- F13 -->
			<key code="106" output="&#x0010;"/>
			<!-- F16 -->
			<key code="107" output="&#x0010;"/>
			<!-- F14 -->
			<key code="108" output="&#x0010;"/>
			<!-- ?? -->
			<key code="109" output="&#x0010;"/>
			<!-- F10 -->
			<key code="110" output="&#x0010;"/>
			<!-- ?? -->
			<key code="111" output="&#x0010;"/>
			<!-- F12 -->
			<key code="112" output="&#x0010;"/>
			<!-- ?? -->
			<key code="113" output="&#x0010;"/>
			<!-- F15 -->
			<key code="114" output="&#x0005;"/>
			<!-- Help -->
			<key code="115" output="&#x0001;"/>
			<!-- Home -->
			<key code="116" output="&#x000B;"/>
			<!-- Page Up -->
			<key code="117" output="&#x007F;"/>
			<!-- Delete -->
			<key code="118" output="&#x0010;"/>
			<!-- F4 -->
			<key code="119" output="&#x0004;"/>
			<!-- End -->
			<key code="120" output="&#x0010;"/>
			<!-- F2 -->
			<key code="121" output="&#x000C;"/>
			<!-- Page Down -->
			<key code="122" output="&#x0010;"/>
			<!-- F1 -->
			<key code="123" output="&#x001C;"/>
			<!-- left arrow -->
			<key code="124" output="&#x001D;"/>
			<!-- right arrow -->
			<key code="125" output="&#x001F;"/>
			<!-- down arrow -->
			<key code="126" output="&#x001E;"/>
			<!-- up arrow -->
		</keyMap>
		<keyMap index="8">
			<!-- option command -->
			<key action="æ" code="0"/>
			<key action="ù" code="1"/>
			<key action="¨" code="2"/>
			<key action="€" code="3"/>
			<key action="{" code="4"/>
			<key action="’" code="5"/>
			<key action="\" code="6"/>
			<key action="«" code="7"/>
			<key action="»" code="8"/>
			<key action="…" code="9"/>
			<key action="–" code="10"/>
			<key action="~" code="11"/>
			<key action="|" code="12"/>
			<key action="´" code="13"/>
			<key action="&#x0026;" code="14"/>
			<key action="œ" code="15"/>
			<key action="¡" code="16"/>
			<key action="`" code="17"/>
			<key action="_" code="18"/>
			<key action="«" code="19"/>
			<key action="»" code="20"/>
			<key action="[" code="21"/>
			<key action="^" code="22"/>
			<key action="]" code="23"/>
			<key action="‰" code="24"/>
			<key action="÷" code="25"/>
			<key action="±" code="26"/>
			<key action="≠" code="27"/>
			<key action="−" code="28"/>
			<key action="×" code="29"/>
			<key action="˘" code="30"/>
			<key action="/" code="31"/>
			<key action="[" code="32"/>
			<key action="ə" code="33"/>
			<key action="]" code="34"/>
			<key action="ĳ" code="35"/>
			<key code="36" output="&#x000D;"/>
			<!-- Return -->
			<key action="}" code="37"/>
			<key action="(" code="38"/>
			<key action="¯" code="39"/>
			<key action=")" code="40"/>
			<key action="©" code="41"/>
			<key action="¸" code="42"/>
			<key action="µ" code="43"/>
			<key action="˛" code="44"/>
			<key action="¿" code="45"/>
			<key action="°" code="46"/>
			<key action="†" code="47"/>
			<key code="48" output="&#x0009;"/>
			<!-- Tab -->
			<key action="_" code="49"/>
			<key action="/" code="50"/>
			<key code="51" output="&#x0008;"/>
			<!-- Backspace -->
			<key code="52" output="&#x0003;"/>
			<!-- Enter (Fn-Return) -->
			<key code="53" output="&#x001B;"/>
			<!-- Escape -->
			<!-- gap, 54 through 64 -->
			<key action="," code="65"/>
			<!-- keypad -->
			<key code="66" output="&#x001D;"/>
			<!-- keypad right arrow? -->
			<key action="*" code="67"/>
			<!-- keypad -->
			<!-- gap, 68 -->
			<key action="+" code="69"/>
			<!-- keypad -->
			<key code="70" output="&#x001C;"/>
			<!-- keypad left arrow? -->
			<key code="71" output="&#x001B;"/>
			<!-- Clear -->
			<key code="72" output="&#x001F;"/>
			<!-- keypad down arrow? -->
			<!-- gap, 73 through 74 -->
			<key action="/" code="75"/>
			<!-- keypad -->
			<key code="76" output="&#x0003;"/>
			<!-- Enter -->
			<key code="77" output="&#x001E;"/>
			<!-- keypad up arrow? -->
			<key action="-" code="78"/>
			<!-- keypad -->
			<!-- gap, 79 through 80 -->
			<key action="=" code="81"/>
			<!-- keypad -->
			<key action="0" code="82"/>
			<!-- keypad -->
			<key action="1" code="83"/>
			<!-- keypad -->
			<key action="2" code="84"/>
			<!-- keypad -->
			<key action="3" code="85"/>
			<!-- keypad -->
			<key action="4" code="86"/>
			<!-- keypad -->
			<key action="5" code="87"/>
			<!-- keypad -->
			<key action="6" code="88"/>
			<!-- keypad -->
			<key action="7" code="89"/>
			<!-- keypad -->
			<!-- gap, 90 -->
			<key action="8" code="91"/>
			<!-- keypad -->
			<key action="9" code="92"/>
			<!-- keypad -->
			<!-- gap, 93 through 95 -->
			<key code="96" output="&#x0010;"/>
			<!-- F5 -->
			<key code="97" output="&#x0010;"/>
			<!-- F6 -->
			<key code="98" output="&#x0010;"/>
			<!-- F7 -->
			<key code="99" output="&#x0010;"/>
			<!-- F3 -->
			<key code="100" output="&#x0010;"/>
			<!-- F8 -->
			<key code="101" output="&#x0010;"/>
			<!-- F9 -->
			<key code="102" output="&#x0010;"/>
			<!-- ?? -->
			<key code="103" output="&#x0010;"/>
			<!-- F11 -->
			<key code="104" output="&#x0010;"/>
			<!-- ?? -->
			<key code="105" output="&#x0010;"/>
			<!-- F13 -->
			<key code="106" output="&#x0010;"/>
			<!-- F16 -->
			<key code="107" output="&#x0010;"/>
			<!-- F14 -->
			<key code="108" output="&#x0010;"/>
			<!-- ?? -->
			<key code="109" output="&#x0010;"/>
			<!-- F10 -->
			<key code="110" output="&#x0010;"/>
			<!-- ?? -->
			<key code="111" output="&#x0010;"/>
			<!-- F12 -->
			<key code="112" output="&#x0010;"/>
			<!-- ?? -->
			<key code="113" output="&#x0010;"/>
			<!-- F15 -->
			<key code="114" output="&#x0005;"/>
			<!-- Help -->
			<key code="115" output="&#x0001;"/>
			<!-- Home -->
			<key code="116" output="&#x000B;"/>
			<!-- Page Up -->
			<key code="117" output="&#x007F;"/>
			<!-- Delete -->
			<key code="118" output="&#x0010;"/>
			<!-- F4 -->
			<key code="119" output="&#x0004;"/>
			<!-- End -->
			<key code="120" output="&#x0010;"/>
			<!-- F2 -->
			<key code="121" output="&#x000C;"/>
			<!-- Page Down -->
			<key code="122" output="&#x0010;"/>
			<!-- F1 -->
			<key code="123" output="&#x001C;"/>
			<!-- left arrow -->
			<key code="124" output="&#x001D;"/>
			<!-- right arrow -->
			<key code="125" output="&#x001F;"/>
			<!-- down arrow -->
			<key code="126" output="&#x001E;"/>
			<!-- up arrow -->
		</keyMap>
		<keyMap index="9">
			<!-- control -->
			<key code="0" output="&#x0001;"/>
			<key code="1" output="&#x0015;"/>
			<key code="2" output="&#x0009;"/>
			<key code="3" output="&#x0005;"/>
			<key code="4" output="&#x0003;"/>
			<key code="5" output=","/>
			<key code="6" output=";"/>
			<key code="7" output="&#x0019;"/>
			<key code="8" output="&#x0008;"/>
			<key code="9" output="."/>
			<key action="0" code="10"/>
			<key code="11" output="&#x000B;"/>
			<key code="12" output="&#x0002;"/>
			<key code="13" output="/"/>
			<key code="14" output="&#x0010;"/>
			<key code="15" output="&#x000F;"/>
			<key code="16" output="&#x001C;"/>
			<key code="17" output="&#x001B;"/>
			<key action="1" code="18"/>
			<key action="2" code="19"/>
			<key action="3" code="20"/>
			<key action="4" code="21"/>
			<key action="6" code="22"/>
			<key action="5" code="23"/>
			<key action="=" code="24"/>
			<key action="9" code="25"/>
			<key action="7" code="26"/>
			<key code="27" output="&#x001F;"/>
			<key action="8" code="28"/>
			<key action="0" code="29"/>
			<key code="30" output="&#x0017;"/>
			<key code="31" output="&#x000C;"/>
			<key code="32" output="&#x0016;"/>
			<key code="33" output="&#x001A;"/>
			<key code="34" output="&#x0004;"/>
			<key code="35" output="&#x0006;"/>
			<key code="36" output="&#x000D;"/>
			<!-- Return -->
			<key code="37" output="&#x000E;"/>
			<key code="38" output="&#x0014;"/>
			<key code="39" output="&#x000D;"/>
			<key code="40" output="&#x0013;"/>
			<key code="41" output="&#x0012;"/>
			<key code="42" output="&#x001D;"/>
			<key code="43" output="&#x0007;"/>
			<key code="44" output="&#x000A;"/>
			<key code="45" output="&#x0027;"/>
			<key code="46" output="&#x0011;"/>
			<key code="47" output="&#x0018;"/>
			<key code="48" output="&#x0009;"/>
			<!-- Tab -->
			<key action=" " code="49"/>
			<!-- Space -->
			<key code="50" output="`"/>
			<key code="51" output="&#x0008;"/>
			<!-- Backspace -->
			<key code="52" output="&#x0003;"/>
			<!-- Enter (Fn-Return) -->
			<key code="53" output="&#x001B;"/>
			<!-- Escape -->
			<!-- gap, 54 through 64 -->
			<key code="65" output="."/>
			<!-- keypad -->
			<key code="66" output="&#x001D;"/>
			<!-- keypad right arrow? -->
			<key code="67" output="*"/>
			<!-- keypad -->
			<!-- gap, 68 -->
			<key action="+" code="69"/>
			<!-- keypad -->
			<key code="70" output="&#x001C;"/>
			<!-- keypad left arrow? -->
			<key code="71" output="&#x001B;"/>
			<!-- Clear -->
			<key code="72" output="&#x001F;"/>
			<!-- keypad down arrow? -->
			<!-- gap, 73 through 74 -->
			<key code="75" output="/"/>
			<!-- keypad -->
			<key code="76" output="&#x0003;"/>
			<!-- Enter -->
			<key code="77" output="&#x001E;"/>
			<!-- keypad up arrow? -->
			<key action="-" code="78"/>
			<!-- keypad -->
			<!-- gap, 79 through 80 -->
			<key action="=" code="81"/>
			<!-- keypad -->
			<key action="0" code="82"/>
			<!-- keypad -->
			<key action="1" code="83"/>
			<!-- keypad -->
			<key action="2" code="84"/>
			<!-- keypad -->
			<key action="3" code="85"/>
			<!-- keypad -->
			<key action="4" code="86"/>
			<!-- keypad -->
			<key action="5" code="87"/>
			<!-- keypad -->
			<key action="6" code="88"/>
			<!-- keypad -->
			<key action="7" code="89"/>
			<!-- keypad -->
			<!-- gap, 90 -->
			<key action="8" code="91"/>
			<!-- keypad -->
			<key action="9" code="92"/>
			<!-- keypad -->
			<!-- gap, 93 through 95 -->
			<key code="96" output="&#x0010;"/>
			<!-- F5 -->
			<key code="97" output="&#x0010;"/>
			<!-- F6 -->
			<key code="98" output="&#x0010;"/>
			<!-- F7 -->
			<key code="99" output="&#x0010;"/>
			<!-- F3 -->
			<key code="100" output="&#x0010;"/>
			<!-- F8 -->
			<key code="101" output="&#x0010;"/>
			<!-- F9 -->
			<key code="102" output="&#x0010;"/>
			<!-- ?? -->
			<key code="103" output="&#x0010;"/>
			<!-- F11 -->
			<key code="104" output="&#x0010;"/>
			<!-- ?? -->
			<key code="105" output="&#x0010;"/>
			<!-- F13 -->
			<key code="106" output="&#x0010;"/>
			<!-- F16 -->
			<key code="107" output="&#x0010;"/>
			<!-- F14 -->
			<key code="108" output="&#x0010;"/>
			<!-- ?? -->
			<key code="109" output="&#x0010;"/>
			<!-- F10 -->
			<key code="110" output="&#x0010;"/>
			<!-- ?? -->
			<key code="111" output="&#x0010;"/>
			<!-- F12 -->
			<key code="112" output="&#x0010;"/>
			<!-- ?? -->
			<key code="113" output="&#x0010;"/>
			<!-- F15 -->
			<key code="114" output="&#x0005;"/>
			<!-- Help -->
			<key code="115" output="&#x0001;"/>
			<!-- Home -->
			<key code="116" output="&#x000B;"/>
			<!-- Page Up -->
			<key code="117" output="&#x007F;"/>
			<!-- Delete -->
			<key code="118" output="&#x0010;"/>
			<!-- F4 -->
			<key code="119" output="&#x0004;"/>
			<!-- End -->
			<key code="120" output="&#x0010;"/>
			<!-- F2 -->
			<key code="121" output="&#x000C;"/>
			<!-- Page Down -->
			<key code="122" output="&#x0010;"/>
			<!-- F1 -->
			<key code="123" output="&#x001C;"/>
			<!-- left arrow -->
			<key code="124" output="&#x001D;"/>
			<!-- right arrow -->
			<key code="125" output="&#x001F;"/>
			<!-- down arrow -->
			<key code="126" output="&#x001E;"/>
			<!-- up arrow -->
			<!-- gap, 127 -->
		</keyMap>
	</keyMapSet>
	<actions>
		<action id="">
			<when output="" state="none"/>
		</action>
		<action id=" ">
			<when output=" " state="none"/>
			<when next="Multi_key_space" state="Multi_key"/>
			<when output="&#x0027;" state="Multi_key_apostrophe"/>
			<when output="^" state="Multi_key_asciicircum"/>
			<when output="~" state="Multi_key_asciitilde"/>
			<when output="¸" state="Multi_key_comma"/>
			<when output="`" state="Multi_key_grave"/>
			<when output="^" state="Multi_key_greater"/>
			<when output="~" state="Multi_key_minus"/>
			<when output=" " state="Multi_key_space"/>
			<when output="˙" state="abovedot"/>
			<when output="˙&#x0027;" state="abovedot_acute"/>
			<when output="˙̣" state="abovedot_belowdot"/>
			<when output="˙ˇ" state="abovedot_caron"/>
			<when output="˙̉/" state="abovedot_hook_stroke"/>
			<when output="˙¯" state="abovedot_macron"/>
			<when output="˙/" state="abovedot_stroke"/>
			<when output="&#x0027;" state="acute"/>
			<when output="&#x0027;˘" state="acute_breve"/>
			<when output="&#x0027;¸" state="acute_cedilla"/>
			<when output="&#x0027;^" state="acute_circumflex"/>
			<when output="&#x0027;&#x0022;" state="acute_diaeresis"/>
			<when output="&#x0027;̛" state="acute_horn"/>
			<when output="&#x0027;¯" state="acute_macron"/>
			<when output="&#x0027;°" state="acute_ringabove"/>
			<when output="&#x0027;/" state="acute_stroke"/>
			<when output="&#x0027;~" state="acute_tilde"/>
			<when output="-" state="bar"/>
			<when output="̣" state="belowdot"/>
			<when output="̣˘" state="belowdot_breve"/>
			<when output="̣^" state="belowdot_circumflex"/>
			<when output="̛̣" state="belowdot_horn"/>
			<when output="̣¯" state="belowdot_macron"/>
			<when output="?" state="belt"/>
			<when output="˘" state="breve"/>
			<when output="˘¸" state="breve_cedilla"/>
			<when output="˘`" state="breve_grave"/>
			<when output="˘̉" state="breve_hook"/>
			<when output="˘~" state="breve_tilde"/>
			<when output="?" state="brevebelow"/>
			<when output="ˇ" state="caron"/>
			<when output="ˇ&#x0022;" state="caron_diaeresis"/>
			<when output="¸" state="cedilla"/>
			<when output="¸¤" state="cedilla_currency"/>
			<when output="^" state="circumflex"/>
			<when output="^`" state="circumflex_grave"/>
			<when output="^̉" state="circumflex_hook"/>
			<when output="^~" state="circumflex_tilde"/>
			<when output="̭" state="circumflexbelow"/>
			<when output="?" state="comma"/>
			<when output="," state="commabelow"/>
			<when output="?" state="crossedtail"/>
			<when output="?" state="curl"/>
			<when output="¤" state="currency"/>
			<when output="?" state="descender"/>
			<when output="&#x0022;" state="diaeresis"/>
			<when output="&#x0022;`" state="diaeresis_grave"/>
			<when output="&#x0022;¯" state="diaeresis_macron"/>
			<when output="&#x0022;~" state="diaeresis_tilde"/>
			<when output="̤" state="diaeresisbelow"/>
			<when output="?" state="diagonalstroke"/>
			<when output="?/" state="diagonalstroke_stroke"/>
			<when output="?" state="dot"/>
			<when output="˝" state="doubleacute"/>
			<when output="?" state="doublebar"/>
			<when output="?" state="doublegrave"/>
			<when output="?" state="fishhook"/>
			<when output="??" state="fishhook_middletilde"/>
			<when output="??" state="fishhook_tail"/>
			<when output="?" state="flourish"/>
			<when output="`" state="grave"/>
			<when output="`̛" state="grave_horn"/>
			<when output="`¯" state="grave_macron"/>
			<when output="µ" state="greek"/>
			<when output="µ̉" state="greek_hook"/>
			<when output="µ¯" state="greek_macron"/>
			<when output="µ/" state="greek_stroke"/>
			<when output="?" state="highstroke"/>
			<when output="̉" state="hook"/>
			<when output="̛̉" state="hook_horn"/>
			<when output="̉?" state="hook_tail"/>
			<when output="?" state="hooktail"/>
			<when output="?" state="horizontalbar"/>
			<when output="̛" state="horn"/>
			<when output="̛~" state="horn_tilde"/>
			<when output="̑" state="invertedbreve"/>
			<when output="_" state="linebelow"/>
			<when output="?" state="longleg"/>
			<when output="?" state="longrightleg"/>
			<when output="?" state="longstrokeoverlay"/>
			<when output="?" state="loop"/>
			<when output="?" state="lowringinside"/>
			<when output="¯" state="macron"/>
			<when output="¯˛" state="macron_ogonek"/>
			<when output="¯~" state="macron_tilde"/>
			<when output="?" state="middletilde"/>
			<when output="?" state="notch"/>
			<when output="˛" state="ogonek"/>
			<when output="?" state="palatalhook"/>
			<when output="̢" state="retroflexhook"/>
			<when output="ʾ" state="righthalfring"/>
			<when output="?" state="righthook"/>
			<when output="°" state="ringabove"/>
			<when output="̥" state="ringbelow"/>
			<when output="?" state="squirreltail"/>
			<when output="/" state="stroke"/>
			<when output="?" state="strokethroughdescender"/>
			<when output="?" state="swashtail"/>
			<when output="?" state="tail"/>
			<when output="~" state="tilde"/>
			<when output="̰" state="tildebelow"/>
			<when output="⁻" state="topbar"/>
		</action>
		<action id="!">
			<when output="!" state="none"/>
			<when next="Multi_key_exclam" state="Multi_key"/>
			<when output="¶" state="Multi_key_P"/>
			<when next="Multi_key_U_exclam" state="Multi_key_U"/>
			<when next="Multi_key_asciicircum_exclam" state="Multi_key_asciicircum"/>
			<when next="Multi_key_b_exclam" state="Multi_key_b"/>
			<when output="¡" state="Multi_key_exclam"/>
			<when next="Multi_key_macron_exclam" state="Multi_key_macron"/>
			<when output="¶" state="Multi_key_p"/>
			<when next="Multi_key_period_exclam" state="Multi_key_period"/>
			<when next="Multi_key_underscore_exclam" state="Multi_key_underscore"/>
		</action>
		<action id="&#x0022;">
			<when output="&#x0022;" state="none"/>
			<when next="Multi_key_quotedbl" state="Multi_key"/>
			<when next="Multi_key_acute_quotedbl" state="Multi_key_acute"/>
			<when next="Multi_key_apostrophe_quotedbl" state="Multi_key_apostrophe"/>
			<when next="Multi_key_asciitilde_quotedbl" state="Multi_key_asciitilde"/>
			<when next="Multi_key_c_quotedbl" state="Multi_key_c"/>
			<when output="„" state="Multi_key_comma"/>
			<when next="Multi_key_grave_quotedbl" state="Multi_key_grave"/>
			<when output="”" state="Multi_key_greater"/>
			<when output="“" state="Multi_key_less"/>
			<when next="Multi_key_macron_quotedbl" state="Multi_key_macron"/>
			<when next="Multi_key_underscore_quotedbl" state="Multi_key_underscore"/>
		</action>
		<action id="#">
			<when output="#" state="none"/>
			<when next="Multi_key_numbersign" state="Multi_key"/>
			<when output="♯" state="Multi_key_numbersign"/>
		</action>
		<action id="$">
			<when output="$" state="none"/>
		</action>
		<action id="%">
			<when output="%" state="none"/>
			<when next="Multi_key_percent" state="Multi_key"/>
		</action>
		<action id="&#x0026;">
			<when output="&#x0026;" state="none"/>
		</action>
		<action id="&#x0027;">
			<when output="&#x0027;" state="none"/>
			<when next="Multi_key_apostrophe" state="Multi_key"/>
			<when next="Multi_key_Greek_iota_apostrophe" state="Multi_key_Greek_iota"/>
			<when output="῎" state="Multi_key_U1FBF"/>
			<when output="῞" state="Multi_key_U1FFE"/>
			<when output="‚" state="Multi_key_comma"/>
			<when output="΅" state="Multi_key_diaeresis"/>
			<when output="’" state="Multi_key_greater"/>
			<when output="‘" state="Multi_key_less"/>
			<when next="Multi_key_o_apostrophe" state="Multi_key_o"/>
			<when next="Multi_key_period_apostrophe" state="Multi_key_period"/>
			<when output="̈́" state="Multi_key_quotedbl"/>
			<when output="&#x0027;" state="Multi_key_space"/>
		</action>
		<action id="(">
			<when output="{" state="none"/>
			<when next="Multi_key_parenleft" state="Multi_key"/>
			<when next="Multi_key_Greek_iota_parenleft" state="Multi_key_Greek_iota"/>
			<when next="Multi_key_Greek_iota_U0342_parenleft" state="Multi_key_Greek_iota_U0342"/>
			<when next="Multi_key_Greek_iota_acute_parenleft" state="Multi_key_Greek_iota_acute"/>
			<when next="Multi_key_Greek_iota_apostrophe_parenleft" state="Multi_key_Greek_iota_apostrophe"/>
			<when next="Multi_key_Greek_iota_asciitilde_parenleft" state="Multi_key_Greek_iota_asciitilde"/>
			<when next="Multi_key_Greek_iota_combining_acute_parenleft" state="Multi_key_Greek_iota_combining_acute"/>
			<when next="Multi_key_Greek_iota_combining_grave_parenleft" state="Multi_key_Greek_iota_combining_grave"/>
			<when next="Multi_key_Greek_iota_dead_acute_parenleft" state="Multi_key_Greek_iota_dead_acute"/>
			<when next="Multi_key_Greek_iota_dead_grave_parenleft" state="Multi_key_Greek_iota_dead_grave"/>
			<when next="Multi_key_Greek_iota_dead_tilde_parenleft" state="Multi_key_Greek_iota_dead_tilde"/>
			<when next="Multi_key_Greek_iota_grave_parenleft" state="Multi_key_Greek_iota_grave"/>
			<when next="Multi_key_acute_parenleft" state="Multi_key_acute"/>
			<when next="Multi_key_apostrophe_parenleft" state="Multi_key_apostrophe"/>
			<when output="⁽" state="Multi_key_asciicircum"/>
			<when next="Multi_key_asciitilde_parenleft" state="Multi_key_asciitilde"/>
			<when next="Multi_key_grave_parenleft" state="Multi_key_grave"/>
			<when output="{" state="Multi_key_minus"/>
			<when output="[" state="Multi_key_parenleft"/>
			<when output="₍" state="Multi_key_underscore"/>
			<when output="₍" state="caron"/>
			<when output="⁽" state="circumflex"/>
		</action>
		<action id="( 1">
			<when output="(" state="none"/>
			<when next="Multi_key_parenleft" state="Multi_key"/>
			<when next="Multi_key_Greek_iota_parenleft" state="Multi_key_Greek_iota"/>
			<when next="Multi_key_Greek_iota_U0342_parenleft" state="Multi_key_Greek_iota_U0342"/>
			<when next="Multi_key_Greek_iota_acute_parenleft" state="Multi_key_Greek_iota_acute"/>
			<when next="Multi_key_Greek_iota_apostrophe_parenleft" state="Multi_key_Greek_iota_apostrophe"/>
			<when next="Multi_key_Greek_iota_asciitilde_parenleft" state="Multi_key_Greek_iota_asciitilde"/>
			<when next="Multi_key_Greek_iota_combining_acute_parenleft" state="Multi_key_Greek_iota_combining_acute"/>
			<when next="Multi_key_Greek_iota_combining_grave_parenleft" state="Multi_key_Greek_iota_combining_grave"/>
			<when next="Multi_key_Greek_iota_dead_acute_parenleft" state="Multi_key_Greek_iota_dead_acute"/>
			<when next="Multi_key_Greek_iota_dead_grave_parenleft" state="Multi_key_Greek_iota_dead_grave"/>
			<when next="Multi_key_Greek_iota_dead_tilde_parenleft" state="Multi_key_Greek_iota_dead_tilde"/>
			<when next="Multi_key_Greek_iota_grave_parenleft" state="Multi_key_Greek_iota_grave"/>
			<when next="Multi_key_acute_parenleft" state="Multi_key_acute"/>
			<when next="Multi_key_apostrophe_parenleft" state="Multi_key_apostrophe"/>
			<when output="⁽" state="Multi_key_asciicircum"/>
			<when next="Multi_key_asciitilde_parenleft" state="Multi_key_asciitilde"/>
			<when next="Multi_key_grave_parenleft" state="Multi_key_grave"/>
			<when output="{" state="Multi_key_minus"/>
			<when output="[" state="Multi_key_parenleft"/>
			<when output="₍" state="Multi_key_underscore"/>
			<when output="₍" state="caron"/>
			<when output="⁽" state="circumflex"/>
		</action>
		<action id=")">
			<when output="(" state="none"/>
			<when next="Multi_key_parenright" state="Multi_key"/>
			<when next="Multi_key_Greek_iota_parenright" state="Multi_key_Greek_iota"/>
			<when next="Multi_key_Greek_iota_U0342_parenright" state="Multi_key_Greek_iota_U0342"/>
			<when next="Multi_key_Greek_iota_acute_parenright" state="Multi_key_Greek_iota_acute"/>
			<when next="Multi_key_Greek_iota_apostrophe_parenright" state="Multi_key_Greek_iota_apostrophe"/>
			<when next="Multi_key_Greek_iota_asciitilde_parenright" state="Multi_key_Greek_iota_asciitilde"/>
			<when next="Multi_key_Greek_iota_combining_acute_parenright" state="Multi_key_Greek_iota_combining_acute"/>
			<when next="Multi_key_Greek_iota_combining_grave_parenright" state="Multi_key_Greek_iota_combining_grave"/>
			<when next="Multi_key_Greek_iota_dead_acute_parenright" state="Multi_key_Greek_iota_dead_acute"/>
			<when next="Multi_key_Greek_iota_dead_grave_parenright" state="Multi_key_Greek_iota_dead_grave"/>
			<when next="Multi_key_Greek_iota_dead_tilde_parenright" state="Multi_key_Greek_iota_dead_tilde"/>
			<when next="Multi_key_Greek_iota_grave_parenright" state="Multi_key_Greek_iota_grave"/>
			<when next="Multi_key_acute_parenright" state="Multi_key_acute"/>
			<when next="Multi_key_apostrophe_parenright" state="Multi_key_apostrophe"/>
			<when output="⁾" state="Multi_key_asciicircum"/>
			<when next="Multi_key_asciitilde_parenright" state="Multi_key_asciitilde"/>
			<when next="Multi_key_grave_parenright" state="Multi_key_grave"/>
			<when output="}" state="Multi_key_minus"/>
			<when output="⓪" state="Multi_key_parenleft_0"/>
			<when output="①" state="Multi_key_parenleft_1"/>
			<when output="⑩" state="Multi_key_parenleft_1_0"/>
			<when output="⑪" state="Multi_key_parenleft_1_1"/>
			<when output="⑫" state="Multi_key_parenleft_1_2"/>
			<when output="⑬" state="Multi_key_parenleft_1_3"/>
			<when output="⑭" state="Multi_key_parenleft_1_4"/>
			<when output="⑮" state="Multi_key_parenleft_1_5"/>
			<when output="⑯" state="Multi_key_parenleft_1_6"/>
			<when output="⑰" state="Multi_key_parenleft_1_7"/>
			<when output="⑱" state="Multi_key_parenleft_1_8"/>
			<when output="⑲" state="Multi_key_parenleft_1_9"/>
			<when output="②" state="Multi_key_parenleft_2"/>
			<when output="⑳" state="Multi_key_parenleft_2_0"/>
			<when output="㉑" state="Multi_key_parenleft_2_1"/>
			<when output="㉒" state="Multi_key_parenleft_2_2"/>
			<when output="㉓" state="Multi_key_parenleft_2_3"/>
			<when output="㉔" state="Multi_key_parenleft_2_4"/>
			<when output="㉕" state="Multi_key_parenleft_2_5"/>
			<when output="㉖" state="Multi_key_parenleft_2_6"/>
			<when output="㉗" state="Multi_key_parenleft_2_7"/>
			<when output="㉘" state="Multi_key_parenleft_2_8"/>
			<when output="㉙" state="Multi_key_parenleft_2_9"/>
			<when output="③" state="Multi_key_parenleft_3"/>
			<when output="㉚" state="Multi_key_parenleft_3_0"/>
			<when output="㉛" state="Multi_key_parenleft_3_1"/>
			<when output="㉜" state="Multi_key_parenleft_3_2"/>
			<when output="㉝" state="Multi_key_parenleft_3_3"/>
			<when output="㉞" state="Multi_key_parenleft_3_4"/>
			<when output="㉟" state="Multi_key_parenleft_3_5"/>
			<when output="㊱" state="Multi_key_parenleft_3_6"/>
			<when output="㊲" state="Multi_key_parenleft_3_7"/>
			<when output="㊳" state="Multi_key_parenleft_3_8"/>
			<when output="㊴" state="Multi_key_parenleft_3_9"/>
			<when output="④" state="Multi_key_parenleft_4"/>
			<when output="㊵" state="Multi_key_parenleft_4_0"/>
			<when output="㊶" state="Multi_key_parenleft_4_1"/>
			<when output="㊷" state="Multi_key_parenleft_4_2"/>
			<when output="㊸" state="Multi_key_parenleft_4_3"/>
			<when output="㊹" state="Multi_key_parenleft_4_4"/>
			<when output="㊺" state="Multi_key_parenleft_4_5"/>
			<when output="㊻" state="Multi_key_parenleft_4_6"/>
			<when output="㊼" state="Multi_key_parenleft_4_7"/>
			<when output="㊽" state="Multi_key_parenleft_4_8"/>
			<when output="㊾" state="Multi_key_parenleft_4_9"/>
			<when output="⑤" state="Multi_key_parenleft_5"/>
			<when output="㊿" state="Multi_key_parenleft_5_0"/>
			<when output="⑥" state="Multi_key_parenleft_6"/>
			<when output="⑦" state="Multi_key_parenleft_7"/>
			<when output="⑧" state="Multi_key_parenleft_8"/>
			<when output="⑨" state="Multi_key_parenleft_9"/>
			<when output="Ⓐ" state="Multi_key_parenleft_A"/>
			<when output="Ⓑ" state="Multi_key_parenleft_B"/>
			<when output="Ⓒ" state="Multi_key_parenleft_C"/>
			<when output="Ⓓ" state="Multi_key_parenleft_D"/>
			<when output="Ⓔ" state="Multi_key_parenleft_E"/>
			<when output="Ⓕ" state="Multi_key_parenleft_F"/>
			<when output="Ⓖ" state="Multi_key_parenleft_G"/>
			<when output="Ⓗ" state="Multi_key_parenleft_H"/>
			<when output="Ⓘ" state="Multi_key_parenleft_I"/>
			<when output="Ⓙ" state="Multi_key_parenleft_J"/>
			<when output="Ⓚ" state="Multi_key_parenleft_K"/>
			<when output="Ⓛ" state="Multi_key_parenleft_L"/>
			<when output="Ⓜ" state="Multi_key_parenleft_M"/>
			<when output="Ⓝ" state="Multi_key_parenleft_N"/>
			<when output="Ⓞ" state="Multi_key_parenleft_O"/>
			<when output="Ⓟ" state="Multi_key_parenleft_P"/>
			<when output="Ⓠ" state="Multi_key_parenleft_Q"/>
			<when output="Ⓡ" state="Multi_key_parenleft_R"/>
			<when output="Ⓢ" state="Multi_key_parenleft_S"/>
			<when output="Ⓣ" state="Multi_key_parenleft_T"/>
			<when output="Ⓤ" state="Multi_key_parenleft_U"/>
			<when output="㉠" state="Multi_key_parenleft_U1100"/>
			<when output="㉮" state="Multi_key_parenleft_U1100_U1161"/>
			<when output="㉡" state="Multi_key_parenleft_U1102"/>
			<when output="㉯" state="Multi_key_parenleft_U1102_U1161"/>
			<when output="㉢" state="Multi_key_parenleft_U1103"/>
			<when output="㉰" state="Multi_key_parenleft_U1103_U1161"/>
			<when output="㉣" state="Multi_key_parenleft_U1105"/>
			<when output="㉱" state="Multi_key_parenleft_U1105_U1161"/>
			<when output="㉤" state="Multi_key_parenleft_U1106"/>
			<when output="㉲" state="Multi_key_parenleft_U1106_U1161"/>
			<when output="㉥" state="Multi_key_parenleft_U1107"/>
			<when output="㉳" state="Multi_key_parenleft_U1107_U1161"/>
			<when output="㉦" state="Multi_key_parenleft_U1109"/>
			<when output="㉴" state="Multi_key_parenleft_U1109_U1161"/>
			<when output="㉧" state="Multi_key_parenleft_U110B"/>
			<when output="㉵" state="Multi_key_parenleft_U110B_U1161"/>
			<when output="㉨" state="Multi_key_parenleft_U110C"/>
			<when output="㉶" state="Multi_key_parenleft_U110C_U1161"/>
			<when output="㉩" state="Multi_key_parenleft_U110E"/>
			<when output="㉷" state="Multi_key_parenleft_U110E_U1161"/>
			<when output="㉪" state="Multi_key_parenleft_U110F"/>
			<when output="㉸" state="Multi_key_parenleft_U110F_U1161"/>
			<when output="㉫" state="Multi_key_parenleft_U1110"/>
			<when output="㉹" state="Multi_key_parenleft_U1110_U1161"/>
			<when output="㉬" state="Multi_key_parenleft_U1111"/>
			<when output="㉺" state="Multi_key_parenleft_U1111_U1161"/>
			<when output="㉭" state="Multi_key_parenleft_U1112"/>
			<when output="㉻" state="Multi_key_parenleft_U1112_U1161"/>
			<when output="㋼" state="Multi_key_parenleft_U30F0"/>
			<when output="㋽" state="Multi_key_parenleft_U30F1"/>
			<when output="㊀" state="Multi_key_parenleft_U4E00"/>
			<when output="㊆" state="Multi_key_parenleft_U4E03"/>
			<when output="㊂" state="Multi_key_parenleft_U4E09"/>
			<when output="㊤" state="Multi_key_parenleft_U4E0A"/>
			<when output="㊦" state="Multi_key_parenleft_U4E0B"/>
			<when output="㊥" state="Multi_key_parenleft_U4E2D"/>
			<when output="㊈" state="Multi_key_parenleft_U4E5D"/>
			<when output="㊁" state="Multi_key_parenleft_U4E8C"/>
			<when output="㊄" state="Multi_key_parenleft_U4E94"/>
			<when output="㊭" state="Multi_key_parenleft_U4F01"/>
			<when output="㊡" state="Multi_key_parenleft_U4F11"/>
			<when output="㊝" state="Multi_key_parenleft_U512A"/>
			<when output="㊇" state="Multi_key_parenleft_U516B"/>
			<when output="㊅" state="Multi_key_parenleft_U516D"/>
			<when output="㊢" state="Multi_key_parenleft_U5199"/>
			<when output="㊘" state="Multi_key_parenleft_U52B4"/>
			<when output="㊩" state="Multi_key_parenleft_U533B"/>
			<when output="㊉" state="Multi_key_parenleft_U5341"/>
			<when output="㊯" state="Multi_key_parenleft_U5354"/>
			<when output="㊞" state="Multi_key_parenleft_U5370"/>
			<when output="㊨" state="Multi_key_parenleft_U53F3"/>
			<when output="㊔" state="Multi_key_parenleft_U540D"/>
			<when output="㊃" state="Multi_key_parenleft_U56DB"/>
			<when output="㊏" state="Multi_key_parenleft_U571F"/>
			<when output="㊰" state="Multi_key_parenleft_U591C"/>
			<when output="㊛" state="Multi_key_parenleft_U5973"/>
			<when output="㊫" state="Multi_key_parenleft_U5B66"/>
			<when output="㊪" state="Multi_key_parenleft_U5B97"/>
			<when output="㊧" state="Multi_key_parenleft_U5DE6"/>
			<when output="㊐" state="Multi_key_parenleft_U65E5"/>
			<when output="㊊" state="Multi_key_parenleft_U6708"/>
			<when output="㊒" state="Multi_key_parenleft_U6709"/>
			<when output="㊍" state="Multi_key_parenleft_U6728"/>
			<when output="㊑" state="Multi_key_parenleft_U682A"/>
			<when output="㊣" state="Multi_key_parenleft_U6B63"/>
			<when output="㊌" state="Multi_key_parenleft_U6C34"/>
			<when output="㊟" state="Multi_key_parenleft_U6CE8"/>
			<when output="㊋" state="Multi_key_parenleft_U706B"/>
			<when output="㊕" state="Multi_key_parenleft_U7279"/>
			<when output="㊚" state="Multi_key_parenleft_U7537"/>
			<when output="㊬" state="Multi_key_parenleft_U76E3"/>
			<when output="㊓" state="Multi_key_parenleft_U793E"/>
			<when output="㊗" state="Multi_key_parenleft_U795D"/>
			<when output="㊙" state="Multi_key_parenleft_U79D8"/>
			<when output="㊖" state="Multi_key_parenleft_U8CA1"/>
			<when output="㊮" state="Multi_key_parenleft_U8CC7"/>
			<when output="㊜" state="Multi_key_parenleft_U9069"/>
			<when output="㊎" state="Multi_key_parenleft_U91D1"/>
			<when output="㊠" state="Multi_key_parenleft_U9805"/>
			<when output="Ⓥ" state="Multi_key_parenleft_V"/>
			<when output="Ⓦ" state="Multi_key_parenleft_W"/>
			<when output="Ⓧ" state="Multi_key_parenleft_X"/>
			<when output="Ⓨ" state="Multi_key_parenleft_Y"/>
			<when output="Ⓩ" state="Multi_key_parenleft_Z"/>
			<when output="ⓐ" state="Multi_key_parenleft_a"/>
			<when output="ⓑ" state="Multi_key_parenleft_b"/>
			<when output="ⓒ" state="Multi_key_parenleft_c"/>
			<when output="ⓓ" state="Multi_key_parenleft_d"/>
			<when output="ⓔ" state="Multi_key_parenleft_e"/>
			<when output="ⓕ" state="Multi_key_parenleft_f"/>
			<when output="ⓖ" state="Multi_key_parenleft_g"/>
			<when output="ⓗ" state="Multi_key_parenleft_h"/>
			<when output="ⓘ" state="Multi_key_parenleft_i"/>
			<when output="ⓙ" state="Multi_key_parenleft_j"/>
			<when output="ⓚ" state="Multi_key_parenleft_k"/>
			<when output="㋐" state="Multi_key_parenleft_kana_A"/>
			<when output="㋠" state="Multi_key_parenleft_kana_CHI"/>
			<when output="㋓" state="Multi_key_parenleft_kana_E"/>
			<when output="㋫" state="Multi_key_parenleft_kana_FU"/>
			<when output="㋩" state="Multi_key_parenleft_kana_HA"/>
			<when output="㋬" state="Multi_key_parenleft_kana_HE"/>
			<when output="㋪" state="Multi_key_parenleft_kana_HI"/>
			<when output="㋭" state="Multi_key_parenleft_kana_HO"/>
			<when output="㋑" state="Multi_key_parenleft_kana_I"/>
			<when output="㋕" state="Multi_key_parenleft_kana_KA"/>
			<when output="㋘" state="Multi_key_parenleft_kana_KE"/>
			<when output="㋖" state="Multi_key_parenleft_kana_KI"/>
			<when output="㋙" state="Multi_key_parenleft_kana_KO"/>
			<when output="㋗" state="Multi_key_parenleft_kana_KU"/>
			<when output="㋮" state="Multi_key_parenleft_kana_MA"/>
			<when output="㋱" state="Multi_key_parenleft_kana_ME"/>
			<when output="㋯" state="Multi_key_parenleft_kana_MI"/>
			<when output="㋲" state="Multi_key_parenleft_kana_MO"/>
			<when output="㋰" state="Multi_key_parenleft_kana_MU"/>
			<when output="㋤" state="Multi_key_parenleft_kana_NA"/>
			<when output="㋧" state="Multi_key_parenleft_kana_NE"/>
			<when output="㋥" state="Multi_key_parenleft_kana_NI"/>
			<when output="㋨" state="Multi_key_parenleft_kana_NO"/>
			<when output="㋦" state="Multi_key_parenleft_kana_NU"/>
			<when output="㋔" state="Multi_key_parenleft_kana_O"/>
			<when output="㋶" state="Multi_key_parenleft_kana_RA"/>
			<when output="㋹" state="Multi_key_parenleft_kana_RE"/>
			<when output="㋷" state="Multi_key_parenleft_kana_RI"/>
			<when output="㋺" state="Multi_key_parenleft_kana_RO"/>
			<when output="㋸" state="Multi_key_parenleft_kana_RU"/>
			<when output="㋚" state="Multi_key_parenleft_kana_SA"/>
			<when output="㋝" state="Multi_key_parenleft_kana_SE"/>
			<when output="㋛" state="Multi_key_parenleft_kana_SHI"/>
			<when output="㋞" state="Multi_key_parenleft_kana_SO"/>
			<when output="㋜" state="Multi_key_parenleft_kana_SU"/>
			<when output="㋟" state="Multi_key_parenleft_kana_TA"/>
			<when output="㋢" state="Multi_key_parenleft_kana_TE"/>
			<when output="㋣" state="Multi_key_parenleft_kana_TO"/>
			<when output="㋡" state="Multi_key_parenleft_kana_TSU"/>
			<when output="㋒" state="Multi_key_parenleft_kana_U"/>
			<when output="㋻" state="Multi_key_parenleft_kana_WA"/>
			<when output="㋾" state="Multi_key_parenleft_kana_WO"/>
			<when output="㋳" state="Multi_key_parenleft_kana_YA"/>
			<when output="㋵" state="Multi_key_parenleft_kana_YO"/>
			<when output="㋴" state="Multi_key_parenleft_kana_YU"/>
			<when output="ⓛ" state="Multi_key_parenleft_l"/>
			<when output="ⓜ" state="Multi_key_parenleft_m"/>
			<when output="ⓝ" state="Multi_key_parenleft_n"/>
			<when output="ⓞ" state="Multi_key_parenleft_o"/>
			<when output="ⓟ" state="Multi_key_parenleft_p"/>
			<when output="ⓠ" state="Multi_key_parenleft_q"/>
			<when output="ⓡ" state="Multi_key_parenleft_r"/>
			<when output="ⓢ" state="Multi_key_parenleft_s"/>
			<when output="ⓣ" state="Multi_key_parenleft_t"/>
			<when output="ⓤ" state="Multi_key_parenleft_u"/>
			<when output="ⓥ" state="Multi_key_parenleft_v"/>
			<when output="ⓦ" state="Multi_key_parenleft_w"/>
			<when output="ⓧ" state="Multi_key_parenleft_x"/>
			<when output="ⓨ" state="Multi_key_parenleft_y"/>
			<when output="ⓩ" state="Multi_key_parenleft_z"/>
			<when output="]" state="Multi_key_parenright"/>
			<when output="₎" state="Multi_key_underscore"/>
			<when output="₎" state="caron"/>
			<when output="⁾" state="circumflex"/>
		</action>
		<action id=") 1">
			<when output=")" state="none"/>
			<when next="Multi_key_parenright" state="Multi_key"/>
			<when next="Multi_key_Greek_iota_parenright" state="Multi_key_Greek_iota"/>
			<when next="Multi_key_Greek_iota_U0342_parenright" state="Multi_key_Greek_iota_U0342"/>
			<when next="Multi_key_Greek_iota_acute_parenright" state="Multi_key_Greek_iota_acute"/>
			<when next="Multi_key_Greek_iota_apostrophe_parenright" state="Multi_key_Greek_iota_apostrophe"/>
			<when next="Multi_key_Greek_iota_asciitilde_parenright" state="Multi_key_Greek_iota_asciitilde"/>
			<when next="Multi_key_Greek_iota_combining_acute_parenright" state="Multi_key_Greek_iota_combining_acute"/>
			<when next="Multi_key_Greek_iota_combining_grave_parenright" state="Multi_key_Greek_iota_combining_grave"/>
			<when next="Multi_key_Greek_iota_dead_acute_parenright" state="Multi_key_Greek_iota_dead_acute"/>
			<when next="Multi_key_Greek_iota_dead_grave_parenright" state="Multi_key_Greek_iota_dead_grave"/>
			<when next="Multi_key_Greek_iota_dead_tilde_parenright" state="Multi_key_Greek_iota_dead_tilde"/>
			<when next="Multi_key_Greek_iota_grave_parenright" state="Multi_key_Greek_iota_grave"/>
			<when next="Multi_key_acute_parenright" state="Multi_key_acute"/>
			<when next="Multi_key_apostrophe_parenright" state="Multi_key_apostrophe"/>
			<when output="⁾" state="Multi_key_asciicircum"/>
			<when next="Multi_key_asciitilde_parenright" state="Multi_key_asciitilde"/>
			<when next="Multi_key_grave_parenright" state="Multi_key_grave"/>
			<when output="}" state="Multi_key_minus"/>
			<when output="⓪" state="Multi_key_parenleft_0"/>
			<when output="①" state="Multi_key_parenleft_1"/>
			<when output="⑩" state="Multi_key_parenleft_1_0"/>
			<when output="⑪" state="Multi_key_parenleft_1_1"/>
			<when output="⑫" state="Multi_key_parenleft_1_2"/>
			<when output="⑬" state="Multi_key_parenleft_1_3"/>
			<when output="⑭" state="Multi_key_parenleft_1_4"/>
			<when output="⑮" state="Multi_key_parenleft_1_5"/>
			<when output="⑯" state="Multi_key_parenleft_1_6"/>
			<when output="⑰" state="Multi_key_parenleft_1_7"/>
			<when output="⑱" state="Multi_key_parenleft_1_8"/>
			<when output="⑲" state="Multi_key_parenleft_1_9"/>
			<when output="②" state="Multi_key_parenleft_2"/>
			<when output="⑳" state="Multi_key_parenleft_2_0"/>
			<when output="㉑" state="Multi_key_parenleft_2_1"/>
			<when output="㉒" state="Multi_key_parenleft_2_2"/>
			<when output="㉓" state="Multi_key_parenleft_2_3"/>
			<when output="㉔" state="Multi_key_parenleft_2_4"/>
			<when output="㉕" state="Multi_key_parenleft_2_5"/>
			<when output="㉖" state="Multi_key_parenleft_2_6"/>
			<when output="㉗" state="Multi_key_parenleft_2_7"/>
			<when output="㉘" state="Multi_key_parenleft_2_8"/>
			<when output="㉙" state="Multi_key_parenleft_2_9"/>
			<when output="③" state="Multi_key_parenleft_3"/>
			<when output="㉚" state="Multi_key_parenleft_3_0"/>
			<when output="㉛" state="Multi_key_parenleft_3_1"/>
			<when output="㉜" state="Multi_key_parenleft_3_2"/>
			<when output="㉝" state="Multi_key_parenleft_3_3"/>
			<when output="㉞" state="Multi_key_parenleft_3_4"/>
			<when output="㉟" state="Multi_key_parenleft_3_5"/>
			<when output="㊱" state="Multi_key_parenleft_3_6"/>
			<when output="㊲" state="Multi_key_parenleft_3_7"/>
			<when output="㊳" state="Multi_key_parenleft_3_8"/>
			<when output="㊴" state="Multi_key_parenleft_3_9"/>
			<when output="④" state="Multi_key_parenleft_4"/>
			<when output="㊵" state="Multi_key_parenleft_4_0"/>
			<when output="㊶" state="Multi_key_parenleft_4_1"/>
			<when output="㊷" state="Multi_key_parenleft_4_2"/>
			<when output="㊸" state="Multi_key_parenleft_4_3"/>
			<when output="㊹" state="Multi_key_parenleft_4_4"/>
			<when output="㊺" state="Multi_key_parenleft_4_5"/>
			<when output="㊻" state="Multi_key_parenleft_4_6"/>
			<when output="㊼" state="Multi_key_parenleft_4_7"/>
			<when output="㊽" state="Multi_key_parenleft_4_8"/>
			<when output="㊾" state="Multi_key_parenleft_4_9"/>
			<when output="⑤" state="Multi_key_parenleft_5"/>
			<when output="㊿" state="Multi_key_parenleft_5_0"/>
			<when output="⑥" state="Multi_key_parenleft_6"/>
			<when output="⑦" state="Multi_key_parenleft_7"/>
			<when output="⑧" state="Multi_key_parenleft_8"/>
			<when output="⑨" state="Multi_key_parenleft_9"/>
			<when output="Ⓐ" state="Multi_key_parenleft_A"/>
			<when output="Ⓑ" state="Multi_key_parenleft_B"/>
			<when output="Ⓒ" state="Multi_key_parenleft_C"/>
			<when output="Ⓓ" state="Multi_key_parenleft_D"/>
			<when output="Ⓔ" state="Multi_key_parenleft_E"/>
			<when output="Ⓕ" state="Multi_key_parenleft_F"/>
			<when output="Ⓖ" state="Multi_key_parenleft_G"/>
			<when output="Ⓗ" state="Multi_key_parenleft_H"/>
			<when output="Ⓘ" state="Multi_key_parenleft_I"/>
			<when output="Ⓙ" state="Multi_key_parenleft_J"/>
			<when output="Ⓚ" state="Multi_key_parenleft_K"/>
			<when output="Ⓛ" state="Multi_key_parenleft_L"/>
			<when output="Ⓜ" state="Multi_key_parenleft_M"/>
			<when output="Ⓝ" state="Multi_key_parenleft_N"/>
			<when output="Ⓞ" state="Multi_key_parenleft_O"/>
			<when output="Ⓟ" state="Multi_key_parenleft_P"/>
			<when output="Ⓠ" state="Multi_key_parenleft_Q"/>
			<when output="Ⓡ" state="Multi_key_parenleft_R"/>
			<when output="Ⓢ" state="Multi_key_parenleft_S"/>
			<when output="Ⓣ" state="Multi_key_parenleft_T"/>
			<when output="Ⓤ" state="Multi_key_parenleft_U"/>
			<when output="㉠" state="Multi_key_parenleft_U1100"/>
			<when output="㉮" state="Multi_key_parenleft_U1100_U1161"/>
			<when output="㉡" state="Multi_key_parenleft_U1102"/>
			<when output="㉯" state="Multi_key_parenleft_U1102_U1161"/>
			<when output="㉢" state="Multi_key_parenleft_U1103"/>
			<when output="㉰" state="Multi_key_parenleft_U1103_U1161"/>
			<when output="㉣" state="Multi_key_parenleft_U1105"/>
			<when output="㉱" state="Multi_key_parenleft_U1105_U1161"/>
			<when output="㉤" state="Multi_key_parenleft_U1106"/>
			<when output="㉲" state="Multi_key_parenleft_U1106_U1161"/>
			<when output="㉥" state="Multi_key_parenleft_U1107"/>
			<when output="㉳" state="Multi_key_parenleft_U1107_U1161"/>
			<when output="㉦" state="Multi_key_parenleft_U1109"/>
			<when output="㉴" state="Multi_key_parenleft_U1109_U1161"/>
			<when output="㉧" state="Multi_key_parenleft_U110B"/>
			<when output="㉵" state="Multi_key_parenleft_U110B_U1161"/>
			<when output="㉨" state="Multi_key_parenleft_U110C"/>
			<when output="㉶" state="Multi_key_parenleft_U110C_U1161"/>
			<when output="㉩" state="Multi_key_parenleft_U110E"/>
			<when output="㉷" state="Multi_key_parenleft_U110E_U1161"/>
			<when output="㉪" state="Multi_key_parenleft_U110F"/>
			<when output="㉸" state="Multi_key_parenleft_U110F_U1161"/>
			<when output="㉫" state="Multi_key_parenleft_U1110"/>
			<when output="㉹" state="Multi_key_parenleft_U1110_U1161"/>
			<when output="㉬" state="Multi_key_parenleft_U1111"/>
			<when output="㉺" state="Multi_key_parenleft_U1111_U1161"/>
			<when output="㉭" state="Multi_key_parenleft_U1112"/>
			<when output="㉻" state="Multi_key_parenleft_U1112_U1161"/>
			<when output="㋼" state="Multi_key_parenleft_U30F0"/>
			<when output="㋽" state="Multi_key_parenleft_U30F1"/>
			<when output="㊀" state="Multi_key_parenleft_U4E00"/>
			<when output="㊆" state="Multi_key_parenleft_U4E03"/>
			<when output="㊂" state="Multi_key_parenleft_U4E09"/>
			<when output="㊤" state="Multi_key_parenleft_U4E0A"/>
			<when output="㊦" state="Multi_key_parenleft_U4E0B"/>
			<when output="㊥" state="Multi_key_parenleft_U4E2D"/>
			<when output="㊈" state="Multi_key_parenleft_U4E5D"/>
			<when output="㊁" state="Multi_key_parenleft_U4E8C"/>
			<when output="㊄" state="Multi_key_parenleft_U4E94"/>
			<when output="㊭" state="Multi_key_parenleft_U4F01"/>
			<when output="㊡" state="Multi_key_parenleft_U4F11"/>
			<when output="㊝" state="Multi_key_parenleft_U512A"/>
			<when output="㊇" state="Multi_key_parenleft_U516B"/>
			<when output="㊅" state="Multi_key_parenleft_U516D"/>
			<when output="㊢" state="Multi_key_parenleft_U5199"/>
			<when output="㊘" state="Multi_key_parenleft_U52B4"/>
			<when output="㊩" state="Multi_key_parenleft_U533B"/>
			<when output="㊉" state="Multi_key_parenleft_U5341"/>
			<when output="㊯" state="Multi_key_parenleft_U5354"/>
			<when output="㊞" state="Multi_key_parenleft_U5370"/>
			<when output="㊨" state="Multi_key_parenleft_U53F3"/>
			<when output="㊔" state="Multi_key_parenleft_U540D"/>
			<when output="㊃" state="Multi_key_parenleft_U56DB"/>
			<when output="㊏" state="Multi_key_parenleft_U571F"/>
			<when output="㊰" state="Multi_key_parenleft_U591C"/>
			<when output="㊛" state="Multi_key_parenleft_U5973"/>
			<when output="㊫" state="Multi_key_parenleft_U5B66"/>
			<when output="㊪" state="Multi_key_parenleft_U5B97"/>
			<when output="㊧" state="Multi_key_parenleft_U5DE6"/>
			<when output="㊐" state="Multi_key_parenleft_U65E5"/>
			<when output="㊊" state="Multi_key_parenleft_U6708"/>
			<when output="㊒" state="Multi_key_parenleft_U6709"/>
			<when output="㊍" state="Multi_key_parenleft_U6728"/>
			<when output="㊑" state="Multi_key_parenleft_U682A"/>
			<when output="㊣" state="Multi_key_parenleft_U6B63"/>
			<when output="㊌" state="Multi_key_parenleft_U6C34"/>
			<when output="㊟" state="Multi_key_parenleft_U6CE8"/>
			<when output="㊋" state="Multi_key_parenleft_U706B"/>
			<when output="㊕" state="Multi_key_parenleft_U7279"/>
			<when output="㊚" state="Multi_key_parenleft_U7537"/>
			<when output="㊬" state="Multi_key_parenleft_U76E3"/>
			<when output="㊓" state="Multi_key_parenleft_U793E"/>
			<when output="㊗" state="Multi_key_parenleft_U795D"/>
			<when output="㊙" state="Multi_key_parenleft_U79D8"/>
			<when output="㊖" state="Multi_key_parenleft_U8CA1"/>
			<when output="㊮" state="Multi_key_parenleft_U8CC7"/>
			<when output="㊜" state="Multi_key_parenleft_U9069"/>
			<when output="㊎" state="Multi_key_parenleft_U91D1"/>
			<when output="㊠" state="Multi_key_parenleft_U9805"/>
			<when output="Ⓥ" state="Multi_key_parenleft_V"/>
			<when output="Ⓦ" state="Multi_key_parenleft_W"/>
			<when output="Ⓧ" state="Multi_key_parenleft_X"/>
			<when output="Ⓨ" state="Multi_key_parenleft_Y"/>
			<when output="Ⓩ" state="Multi_key_parenleft_Z"/>
			<when output="ⓐ" state="Multi_key_parenleft_a"/>
			<when output="ⓑ" state="Multi_key_parenleft_b"/>
			<when output="ⓒ" state="Multi_key_parenleft_c"/>
			<when output="ⓓ" state="Multi_key_parenleft_d"/>
			<when output="ⓔ" state="Multi_key_parenleft_e"/>
			<when output="ⓕ" state="Multi_key_parenleft_f"/>
			<when output="ⓖ" state="Multi_key_parenleft_g"/>
			<when output="ⓗ" state="Multi_key_parenleft_h"/>
			<when output="ⓘ" state="Multi_key_parenleft_i"/>
			<when output="ⓙ" state="Multi_key_parenleft_j"/>
			<when output="ⓚ" state="Multi_key_parenleft_k"/>
			<when output="㋐" state="Multi_key_parenleft_kana_A"/>
			<when output="㋠" state="Multi_key_parenleft_kana_CHI"/>
			<when output="㋓" state="Multi_key_parenleft_kana_E"/>
			<when output="㋫" state="Multi_key_parenleft_kana_FU"/>
			<when output="㋩" state="Multi_key_parenleft_kana_HA"/>
			<when output="㋬" state="Multi_key_parenleft_kana_HE"/>
			<when output="㋪" state="Multi_key_parenleft_kana_HI"/>
			<when output="㋭" state="Multi_key_parenleft_kana_HO"/>
			<when output="㋑" state="Multi_key_parenleft_kana_I"/>
			<when output="㋕" state="Multi_key_parenleft_kana_KA"/>
			<when output="㋘" state="Multi_key_parenleft_kana_KE"/>
			<when output="㋖" state="Multi_key_parenleft_kana_KI"/>
			<when output="㋙" state="Multi_key_parenleft_kana_KO"/>
			<when output="㋗" state="Multi_key_parenleft_kana_KU"/>
			<when output="㋮" state="Multi_key_parenleft_kana_MA"/>
			<when output="㋱" state="Multi_key_parenleft_kana_ME"/>
			<when output="㋯" state="Multi_key_parenleft_kana_MI"/>
			<when output="㋲" state="Multi_key_parenleft_kana_MO"/>
			<when output="㋰" state="Multi_key_parenleft_kana_MU"/>
			<when output="㋤" state="Multi_key_parenleft_kana_NA"/>
			<when output="㋧" state="Multi_key_parenleft_kana_NE"/>
			<when output="㋥" state="Multi_key_parenleft_kana_NI"/>
			<when output="㋨" state="Multi_key_parenleft_kana_NO"/>
			<when output="㋦" state="Multi_key_parenleft_kana_NU"/>
			<when output="㋔" state="Multi_key_parenleft_kana_O"/>
			<when output="㋶" state="Multi_key_parenleft_kana_RA"/>
			<when output="㋹" state="Multi_key_parenleft_kana_RE"/>
			<when output="㋷" state="Multi_key_parenleft_kana_RI"/>
			<when output="㋺" state="Multi_key_parenleft_kana_RO"/>
			<when output="㋸" state="Multi_key_parenleft_kana_RU"/>
			<when output="㋚" state="Multi_key_parenleft_kana_SA"/>
			<when output="㋝" state="Multi_key_parenleft_kana_SE"/>
			<when output="㋛" state="Multi_key_parenleft_kana_SHI"/>
			<when output="㋞" state="Multi_key_parenleft_kana_SO"/>
			<when output="㋜" state="Multi_key_parenleft_kana_SU"/>
			<when output="㋟" state="Multi_key_parenleft_kana_TA"/>
			<when output="㋢" state="Multi_key_parenleft_kana_TE"/>
			<when output="㋣" state="Multi_key_parenleft_kana_TO"/>
			<when output="㋡" state="Multi_key_parenleft_kana_TSU"/>
			<when output="㋒" state="Multi_key_parenleft_kana_U"/>
			<when output="㋻" state="Multi_key_parenleft_kana_WA"/>
			<when output="㋾" state="Multi_key_parenleft_kana_WO"/>
			<when output="㋳" state="Multi_key_parenleft_kana_YA"/>
			<when output="㋵" state="Multi_key_parenleft_kana_YO"/>
			<when output="㋴" state="Multi_key_parenleft_kana_YU"/>
			<when output="ⓛ" state="Multi_key_parenleft_l"/>
			<when output="ⓜ" state="Multi_key_parenleft_m"/>
			<when output="ⓝ" state="Multi_key_parenleft_n"/>
			<when output="ⓞ" state="Multi_key_parenleft_o"/>
			<when output="ⓟ" state="Multi_key_parenleft_p"/>
			<when output="ⓠ" state="Multi_key_parenleft_q"/>
			<when output="ⓡ" state="Multi_key_parenleft_r"/>
			<when output="ⓢ" state="Multi_key_parenleft_s"/>
			<when output="ⓣ" state="Multi_key_parenleft_t"/>
			<when output="ⓤ" state="Multi_key_parenleft_u"/>
			<when output="ⓥ" state="Multi_key_parenleft_v"/>
			<when output="ⓦ" state="Multi_key_parenleft_w"/>
			<when output="ⓧ" state="Multi_key_parenleft_x"/>
			<when output="ⓨ" state="Multi_key_parenleft_y"/>
			<when output="ⓩ" state="Multi_key_parenleft_z"/>
			<when output="]" state="Multi_key_parenright"/>
			<when output="₎" state="Multi_key_underscore"/>
			<when output="₎" state="caron"/>
			<when output="⁾" state="circumflex"/>
		</action>
		<action id="*">
			<when output="*" state="none"/>
		</action>
		<action id="+">
			<when output="+" state="none"/>
			<when next="Multi_key_plus" state="Multi_key"/>
			<when next="Multi_key_acute_plus" state="Multi_key_acute"/>
			<when next="Multi_key_apostrophe_plus" state="Multi_key_apostrophe"/>
			<when output="⁺" state="Multi_key_asciicircum"/>
			<when next="Multi_key_asciitilde_plus" state="Multi_key_asciitilde"/>
			<when next="Multi_key_exclam_plus" state="Multi_key_exclam"/>
			<when next="Multi_key_grave_plus" state="Multi_key_grave"/>
			<when output="#" state="Multi_key_plus"/>
			<when next="Multi_key_question_plus" state="Multi_key_question"/>
			<when output="₊" state="Multi_key_underscore"/>
			<when output="₊" state="caron"/>
			<when output="⁺" state="circumflex"/>
		</action>
		<action id=",">
			<when output="," state="none"/>
			<when next="Multi_key_comma" state="Multi_key"/>
			<when next="Multi_key_U_comma" state="Multi_key_U"/>
			<when next="Multi_key_acute_comma" state="Multi_key_acute"/>
			<when output="‚" state="Multi_key_apostrophe"/>
			<when next="Multi_key_b_comma" state="Multi_key_b"/>
			<when output="¬" state="Multi_key_minus"/>
			<when output="„" state="Multi_key_quotedbl"/>
			<when output="¸" state="Multi_key_space"/>
		</action>
		<action id="-">
			<when output="-" state="none"/>
			<when next="Multi_key_minus" state="Multi_key"/>
			<when output="£" state="Multi_key_L"/>
			<when output="÷" state="Multi_key_colon"/>
			<when output="¬" state="Multi_key_comma"/>
			<when output="₫" state="Multi_key_d"/>
			<when next="Multi_key_minus_minus" state="Multi_key_minus"/>
			<when output="—" state="Multi_key_minus_minus"/>
			<when output="{" state="Multi_key_parenleft"/>
			<when output="}" state="Multi_key_parenright"/>
			<when output="·" state="Multi_key_period"/>
			<when output="±" state="Multi_key_plus"/>
			<when output="~" state="Multi_key_space"/>
			<when output="₋" state="caron"/>
			<when output="⁻" state="circumflex"/>
			<when output="≃" state="tilde"/>
		</action>
		<action id=".">
			<when output="." state="none"/>
		</action>
		<action id="/">
			<when output="/" state="none"/>
			<when next="Multi_key_slash" state="Multi_key"/>
			<when output="₡" state="Multi_key_C"/>
			<when next="Multi_key_acute_slash" state="Multi_key_acute"/>
			<when next="Multi_key_apostrophe_slash" state="Multi_key_apostrophe"/>
			<when output="|" state="Multi_key_asciicircum"/>
			<when output="¢" state="Multi_key_c"/>
			<when output="\" state="Multi_key_less"/>
			<when output="₥" state="Multi_key_m"/>
			<when output="〞" state="Multi_key_quotedbl"/>
			<when output="\" state="Multi_key_slash"/>
		</action>
		<action id="0">
			<when output="0" state="none"/>
			<when output="⁰" state="Multi_key_asciicircum"/>
			<when next="Multi_key_parenleft_0" state="Multi_key_parenleft"/>
			<when next="Multi_key_parenleft_1_0" state="Multi_key_parenleft_1"/>
			<when next="Multi_key_parenleft_2_0" state="Multi_key_parenleft_2"/>
			<when next="Multi_key_parenleft_3_0" state="Multi_key_parenleft_3"/>
			<when next="Multi_key_parenleft_4_0" state="Multi_key_parenleft_4"/>
			<when next="Multi_key_parenleft_5_0" state="Multi_key_parenleft_5"/>
			<when output="₀" state="Multi_key_underscore"/>
			<when output="₀" state="caron"/>
			<when output="⁰" state="circumflex"/>
		</action>
		<action id="1">
			<when output="1" state="none"/>
			<when next="Multi_key_1" state="Multi_key"/>
			<when output="¹" state="Multi_key_asciicircum"/>
			<when next="Multi_key_parenleft_1" state="Multi_key_parenleft"/>
			<when next="Multi_key_parenleft_1_1" state="Multi_key_parenleft_1"/>
			<when next="Multi_key_parenleft_2_1" state="Multi_key_parenleft_2"/>
			<when next="Multi_key_parenleft_3_1" state="Multi_key_parenleft_3"/>
			<when next="Multi_key_parenleft_4_1" state="Multi_key_parenleft_4"/>
			<when output="₁" state="Multi_key_underscore"/>
			<when output="₁" state="caron"/>
			<when output="¹" state="circumflex"/>
		</action>
		<action id="2">
			<when output="2" state="none"/>
			<when output="½" state="Multi_key_1"/>
			<when output="²" state="Multi_key_asciicircum"/>
			<when next="Multi_key_parenleft_2" state="Multi_key_parenleft"/>
			<when next="Multi_key_parenleft_1_2" state="Multi_key_parenleft_1"/>
			<when next="Multi_key_parenleft_2_2" state="Multi_key_parenleft_2"/>
			<when next="Multi_key_parenleft_3_2" state="Multi_key_parenleft_3"/>
			<when next="Multi_key_parenleft_4_2" state="Multi_key_parenleft_4"/>
			<when output="₂" state="Multi_key_underscore"/>
			<when output="₂" state="caron"/>
			<when output="²" state="circumflex"/>
			<when output="ƻ" state="stroke"/>
		</action>
		<action id="3">
			<when output="3" state="none"/>
			<when next="Multi_key_3" state="Multi_key"/>
			<when output="³" state="Multi_key_asciicircum"/>
			<when next="Multi_key_parenleft_3" state="Multi_key_parenleft"/>
			<when next="Multi_key_parenleft_1_3" state="Multi_key_parenleft_1"/>
			<when next="Multi_key_parenleft_2_3" state="Multi_key_parenleft_2"/>
			<when next="Multi_key_parenleft_3_3" state="Multi_key_parenleft_3"/>
			<when next="Multi_key_parenleft_4_3" state="Multi_key_parenleft_4"/>
			<when output="₃" state="Multi_key_underscore"/>
			<when output="₃" state="caron"/>
			<when output="³" state="circumflex"/>
		</action>
		<action id="4">
			<when output="4" state="none"/>
			<when output="¼" state="Multi_key_1"/>
			<when output="¾" state="Multi_key_3"/>
			<when output="⁴" state="Multi_key_asciicircum"/>
			<when next="Multi_key_parenleft_4" state="Multi_key_parenleft"/>
			<when next="Multi_key_parenleft_1_4" state="Multi_key_parenleft_1"/>
			<when next="Multi_key_parenleft_2_4" state="Multi_key_parenleft_2"/>
			<when next="Multi_key_parenleft_3_4" state="Multi_key_parenleft_3"/>
			<when next="Multi_key_parenleft_4_4" state="Multi_key_parenleft_4"/>
			<when output="₄" state="Multi_key_underscore"/>
			<when output="₄" state="caron"/>
			<when output="⁴" state="circumflex"/>
		</action>
		<action id="5">
			<when output="5" state="none"/>
			<when output="⁵" state="Multi_key_asciicircum"/>
			<when next="Multi_key_parenleft_5" state="Multi_key_parenleft"/>
			<when next="Multi_key_parenleft_1_5" state="Multi_key_parenleft_1"/>
			<when next="Multi_key_parenleft_2_5" state="Multi_key_parenleft_2"/>
			<when next="Multi_key_parenleft_3_5" state="Multi_key_parenleft_3"/>
			<when next="Multi_key_parenleft_4_5" state="Multi_key_parenleft_4"/>
			<when output="₅" state="Multi_key_underscore"/>
			<when output="₅" state="caron"/>
			<when output="⁵" state="circumflex"/>
		</action>
		<action id="6">
			<when output="6" state="none"/>
			<when output="⁶" state="Multi_key_asciicircum"/>
			<when next="Multi_key_parenleft_6" state="Multi_key_parenleft"/>
			<when next="Multi_key_parenleft_1_6" state="Multi_key_parenleft_1"/>
			<when next="Multi_key_parenleft_2_6" state="Multi_key_parenleft_2"/>
			<when next="Multi_key_parenleft_3_6" state="Multi_key_parenleft_3"/>
			<when next="Multi_key_parenleft_4_6" state="Multi_key_parenleft_4"/>
			<when output="₆" state="Multi_key_underscore"/>
			<when output="₆" state="caron"/>
			<when output="⁶" state="circumflex"/>
		</action>
		<action id="7">
			<when output="7" state="none"/>
			<when output="⁷" state="Multi_key_asciicircum"/>
			<when next="Multi_key_parenleft_7" state="Multi_key_parenleft"/>
			<when next="Multi_key_parenleft_1_7" state="Multi_key_parenleft_1"/>
			<when next="Multi_key_parenleft_2_7" state="Multi_key_parenleft_2"/>
			<when next="Multi_key_parenleft_3_7" state="Multi_key_parenleft_3"/>
			<when next="Multi_key_parenleft_4_7" state="Multi_key_parenleft_4"/>
			<when output="₇" state="Multi_key_underscore"/>
			<when output="₇" state="caron"/>
			<when output="⁷" state="circumflex"/>
		</action>
		<action id="8">
			<when output="8" state="none"/>
			<when output="⁸" state="Multi_key_asciicircum"/>
			<when next="Multi_key_parenleft_8" state="Multi_key_parenleft"/>
			<when next="Multi_key_parenleft_1_8" state="Multi_key_parenleft_1"/>
			<when next="Multi_key_parenleft_2_8" state="Multi_key_parenleft_2"/>
			<when next="Multi_key_parenleft_3_8" state="Multi_key_parenleft_3"/>
			<when next="Multi_key_parenleft_4_8" state="Multi_key_parenleft_4"/>
			<when output="₈" state="Multi_key_underscore"/>
			<when output="₈" state="caron"/>
			<when output="⁸" state="circumflex"/>
		</action>
		<action id="9">
			<when output="9" state="none"/>
			<when output="⁹" state="Multi_key_asciicircum"/>
			<when next="Multi_key_parenleft_9" state="Multi_key_parenleft"/>
			<when next="Multi_key_parenleft_1_9" state="Multi_key_parenleft_1"/>
			<when next="Multi_key_parenleft_2_9" state="Multi_key_parenleft_2"/>
			<when next="Multi_key_parenleft_3_9" state="Multi_key_parenleft_3"/>
			<when next="Multi_key_parenleft_4_9" state="Multi_key_parenleft_4"/>
			<when output="₉" state="Multi_key_underscore"/>
			<when output="₉" state="caron"/>
			<when output="⁹" state="circumflex"/>
		</action>
		<action id=":">
			<when output=":" state="none"/>
			<when next="Multi_key_colon" state="Multi_key"/>
			<when output="÷" state="Multi_key_minus"/>
		</action>
		<action id=";">
			<when output=";" state="none"/>
			<when next="Multi_key_semicolon" state="Multi_key"/>
			<when next="Multi_key_macron_semicolon" state="Multi_key_macron"/>
			<when next="Multi_key_underscore_semicolon" state="Multi_key_underscore"/>
		</action>
		<action id="&#x003C;">
			<when output="&#x003C;" state="none"/>
			<when next="Multi_key_less" state="Multi_key"/>
			<when output="‘" state="Multi_key_apostrophe"/>
			<when output="«" state="Multi_key_less"/>
			<when output="‹" state="Multi_key_period"/>
			<when output="“" state="Multi_key_quotedbl"/>
			<when output="\" state="Multi_key_slash"/>
			<when output="≮" state="stroke"/>
			<when output="≲" state="tilde"/>
		</action>
		<action id="=">
			<when output="=" state="none"/>
			<when next="Multi_key_equal" state="Multi_key"/>
			<when output="€" state="Multi_key_C"/>
			<when output="€" state="Multi_key_Cyrillic_ES"/>
			<when output="€" state="Multi_key_Cyrillic_IE"/>
			<when output="€" state="Multi_key_E"/>
			<when output="₤" state="Multi_key_L"/>
			<when output="₦" state="Multi_key_N"/>
			<when output="₩" state="Multi_key_W"/>
			<when output="¥" state="Multi_key_Y"/>
			<when output="⁼" state="Multi_key_asciicircum"/>
			<when output="€" state="Multi_key_c"/>
			<when output="€" state="Multi_key_e"/>
			<when output="•" state="Multi_key_period"/>
			<when output="₌" state="Multi_key_underscore"/>
			<when output="₌" state="caron"/>
			<when output="⁼" state="circumflex"/>
			<when output="≠" state="stroke"/>
		</action>
		<action id="&#x003E;">
			<when output="&#x003E;" state="none"/>
			<when next="Multi_key_greater" state="Multi_key"/>
			<when output="’" state="Multi_key_apostrophe"/>
			<when output="»" state="Multi_key_greater"/>
			<when output="›" state="Multi_key_period"/>
			<when output="”" state="Multi_key_quotedbl"/>
			<when output="^" state="Multi_key_space"/>
			<when output="≯" state="stroke"/>
			<when output="≳" state="tilde"/>
		</action>
		<action id="?">
			<when output="?" state="none"/>
			<when next="Multi_key_question" state="Multi_key"/>
			<when output="¿" state="Multi_key_question"/>
		</action>
		<action id="@">
			<when output="@" state="none"/>
		</action>
		<action id="A">
			<when output="A" state="none"/>
			<when next="Multi_key_A" state="Multi_key"/>
			<when output="Ă" state="Multi_key_U"/>
			<when output="Ặ" state="Multi_key_U_combining_belowdot"/>
			<when output="Ặ" state="Multi_key_U_dead_belowdot"/>
			<when output="Ặ" state="Multi_key_U_exclam"/>
			<when output="Á" state="Multi_key_acute"/>
			<when output="Ấ" state="Multi_key_acute_asciicircum"/>
			<when output="Ắ" state="Multi_key_acute_b"/>
			<when output="Ǻ" state="Multi_key_acute_dead_abovering"/>
			<when output="Ắ" state="Multi_key_acute_dead_breve"/>
			<when output="Ấ" state="Multi_key_acute_dead_circumflex"/>
			<when output="Á" state="Multi_key_apostrophe"/>
			<when output="Ấ" state="Multi_key_apostrophe_asciicircum"/>
			<when output="Ắ" state="Multi_key_apostrophe_b"/>
			<when output="Ǻ" state="Multi_key_apostrophe_dead_abovering"/>
			<when output="Ắ" state="Multi_key_apostrophe_dead_breve"/>
			<when output="Ấ" state="Multi_key_apostrophe_dead_circumflex"/>
			<when output="Â" state="Multi_key_asciicircum"/>
			<when output="Ậ" state="Multi_key_asciicircum_combining_belowdot"/>
			<when output="Ậ" state="Multi_key_asciicircum_dead_belowdot"/>
			<when output="Ậ" state="Multi_key_asciicircum_exclam"/>
			<when output="Ã" state="Multi_key_asciitilde"/>
			<when output="Ẫ" state="Multi_key_asciitilde_asciicircum"/>
			<when output="Ẵ" state="Multi_key_asciitilde_b"/>
			<when output="Ẵ" state="Multi_key_asciitilde_dead_breve"/>
			<when output="Ẫ" state="Multi_key_asciitilde_dead_circumflex"/>
			<when output="Ă" state="Multi_key_b"/>
			<when output="Ặ" state="Multi_key_b_combining_belowdot"/>
			<when output="Ặ" state="Multi_key_b_dead_belowdot"/>
			<when output="Ặ" state="Multi_key_b_exclam"/>
			<when output="Ǎ" state="Multi_key_c"/>
			<when output="Ạ" state="Multi_key_exclam"/>
			<when output="À" state="Multi_key_grave"/>
			<when output="Ầ" state="Multi_key_grave_asciicircum"/>
			<when output="Ằ" state="Multi_key_grave_b"/>
			<when output="Ằ" state="Multi_key_grave_dead_breve"/>
			<when output="Ầ" state="Multi_key_grave_dead_circumflex"/>
			<when output="Ā" state="Multi_key_macron"/>
			<when output="Ǡ" state="Multi_key_macron_dead_abovedot"/>
			<when output="Ǟ" state="Multi_key_macron_dead_diaeresis"/>
			<when output="Ǡ" state="Multi_key_macron_period"/>
			<when output="Ǟ" state="Multi_key_macron_quotedbl"/>
			<when output="Å" state="Multi_key_o"/>
			<when output="Ǻ" state="Multi_key_o_apostrophe"/>
			<when next="Multi_key_parenleft_A" state="Multi_key_parenleft"/>
			<when output="Ȧ" state="Multi_key_period"/>
			<when output="Ả" state="Multi_key_question"/>
			<when output="Ẩ" state="Multi_key_question_asciicircum"/>
			<when output="Ẳ" state="Multi_key_question_b"/>
			<when output="Ẳ" state="Multi_key_question_dead_breve"/>
			<when output="Ẩ" state="Multi_key_question_dead_circumflex"/>
			<when output="Ä" state="Multi_key_quotedbl"/>
			<when output="Ą" state="Multi_key_semicolon"/>
			<when output="Ā" state="Multi_key_underscore"/>
			<when output="Ǡ" state="Multi_key_underscore_dead_abovedot"/>
			<when output="Ǟ" state="Multi_key_underscore_dead_diaeresis"/>
			<when output="Ǡ" state="Multi_key_underscore_period"/>
			<when output="Ǟ" state="Multi_key_underscore_quotedbl"/>
			<when output="Ȧ" state="abovedot"/>
			<when output="Ǡ" state="abovedot_macron"/>
			<when output="Á" state="acute"/>
			<when output="Ắ" state="acute_breve"/>
			<when output="Ấ" state="acute_circumflex"/>
			<when output="Ǻ" state="acute_ringabove"/>
			<when output="Ạ" state="belowdot"/>
			<when output="Ặ" state="belowdot_breve"/>
			<when output="Ậ" state="belowdot_circumflex"/>
			<when output="Ă" state="breve"/>
			<when output="Ằ" state="breve_grave"/>
			<when output="Ẳ" state="breve_hook"/>
			<when output="Ẵ" state="breve_tilde"/>
			<when output="Ǎ" state="caron"/>
			<when output="Â" state="circumflex"/>
			<when output="Ầ" state="circumflex_grave"/>
			<when output="Ẩ" state="circumflex_hook"/>
			<when output="Ẫ" state="circumflex_tilde"/>
			<when output="₳" state="currency"/>
			<when output="Ä" state="diaeresis"/>
			<when output="Ǟ" state="diaeresis_macron"/>
			<when output="Ȁ" state="doublegrave"/>
			<when output="À" state="grave"/>
			<when output="Α" state="greek"/>
			<when output="Ᾱ" state="greek_macron"/>
			<when output="Ả" state="hook"/>
			<when output="Ȃ" state="invertedbreve"/>
			<when output="Ā" state="macron"/>
			<when output="Ą" state="ogonek"/>
			<when output="Å" state="ringabove"/>
			<when output="Ḁ" state="ringbelow"/>
			<when output="Ⱥ" state="stroke"/>
			<when output="Ã" state="tilde"/>
		</action>
		<action id="B">
			<when output="B" state="none"/>
			<when output="Ḅ" state="Multi_key_exclam"/>
			<when next="Multi_key_parenleft_B" state="Multi_key_parenleft"/>
			<when output="Ḃ" state="Multi_key_period"/>
			<when output="Ḃ" state="abovedot"/>
			<when output="Ḅ" state="belowdot"/>
			<when output="₱" state="currency"/>
			<when output="Β" state="greek"/>
			<when output="Ɓ" state="hook"/>
			<when output="Ḇ" state="linebelow"/>
			<when output="Ƀ" state="stroke"/>
			<when output="Ƃ" state="topbar"/>
		</action>
		<action id="C">
			<when output="C" state="none"/>
			<when next="Multi_key_C" state="Multi_key"/>
			<when output="©" state="Multi_key_O"/>
			<when output="Ć" state="Multi_key_acute"/>
			<when output="Ḉ" state="Multi_key_acute_comma"/>
			<when output="Ḉ" state="Multi_key_acute_dead_cedilla"/>
			<when output="Ć" state="Multi_key_apostrophe"/>
			<when output="Ḉ" state="Multi_key_apostrophe_dead_cedilla"/>
			<when output="Ĉ" state="Multi_key_asciicircum"/>
			<when output="Č" state="Multi_key_c"/>
			<when output="Ç" state="Multi_key_comma"/>
			<when output="€" state="Multi_key_equal"/>
			<when output="©" state="Multi_key_o"/>
			<when next="Multi_key_parenleft_C" state="Multi_key_parenleft"/>
			<when output="Ċ" state="Multi_key_period"/>
			<when output="₡" state="Multi_key_slash"/>
			<when output="Ċ" state="abovedot"/>
			<when output="Ć" state="acute"/>
			<when output="Ḉ" state="acute_cedilla"/>
			<when output="Č" state="caron"/>
			<when output="Ç" state="cedilla"/>
			<when output="₵" state="cedilla_currency"/>
			<when output="Ĉ" state="circumflex"/>
			<when output="₡" state="currency"/>
			<when output="Ƈ" state="hook"/>
			<when output="Ȼ" state="stroke"/>
		</action>
		<action id="D">
			<when output="D" state="none"/>
			<when next="Multi_key_D" state="Multi_key"/>
			<when output="Ď" state="Multi_key_c"/>
			<when output="Ḑ" state="Multi_key_comma"/>
			<when output="Ḍ" state="Multi_key_exclam"/>
			<when output="Đ" state="Multi_key_minus"/>
			<when next="Multi_key_parenleft_D" state="Multi_key_parenleft"/>
			<when output="Ḋ" state="Multi_key_period"/>
			<when output="Đ" state="Multi_key_slash"/>
			<when output="Ḋ" state="abovedot"/>
			<when output="Ḍ" state="belowdot"/>
			<when output="Ď" state="caron"/>
			<when output="Ḑ" state="cedilla"/>
			<when output="Ḓ" state="circumflexbelow"/>
			<when output="₯" state="currency"/>
			<when output="Δ" state="greek"/>
			<when output="Ɗ" state="hook"/>
			<when output="Ḏ" state="linebelow"/>
			<when output="Đ" state="stroke"/>
			<when output="Ƌ" state="topbar"/>
		</action>
		<action id="E">
			<when output="E" state="none"/>
			<when next="Multi_key_E" state="Multi_key"/>
			<when output="Æ" state="Multi_key_A"/>
			<when output="₠" state="Multi_key_C"/>
			<when output="Œ" state="Multi_key_O"/>
			<when output="Ĕ" state="Multi_key_U"/>
			<when output="Ḝ" state="Multi_key_U_comma"/>
			<when output="Ḝ" state="Multi_key_U_dead_cedilla"/>
			<when output="É" state="Multi_key_acute"/>
			<when output="Ế" state="Multi_key_acute_asciicircum"/>
			<when output="Ế" state="Multi_key_acute_dead_circumflex"/>
			<when output="Ḗ" state="Multi_key_acute_dead_macron"/>
			<when output="Ḗ" state="Multi_key_acute_macron"/>
			<when output="Ḗ" state="Multi_key_acute_underscore"/>
			<when output="É" state="Multi_key_apostrophe"/>
			<when output="Ế" state="Multi_key_apostrophe_asciicircum"/>
			<when output="Ế" state="Multi_key_apostrophe_dead_circumflex"/>
			<when output="Ḗ" state="Multi_key_apostrophe_dead_macron"/>
			<when output="Ḗ" state="Multi_key_apostrophe_macron"/>
			<when output="Ḗ" state="Multi_key_apostrophe_underscore"/>
			<when output="Ê" state="Multi_key_asciicircum"/>
			<when output="Ệ" state="Multi_key_asciicircum_combining_belowdot"/>
			<when output="Ệ" state="Multi_key_asciicircum_dead_belowdot"/>
			<when output="Ệ" state="Multi_key_asciicircum_exclam"/>
			<when output="Ẽ" state="Multi_key_asciitilde"/>
			<when output="Ễ" state="Multi_key_asciitilde_asciicircum"/>
			<when output="Ễ" state="Multi_key_asciitilde_dead_circumflex"/>
			<when output="Ĕ" state="Multi_key_b"/>
			<when output="Ḝ" state="Multi_key_b_comma"/>
			<when output="Ḝ" state="Multi_key_b_dead_cedilla"/>
			<when output="Ě" state="Multi_key_c"/>
			<when output="Ȩ" state="Multi_key_comma"/>
			<when output="€" state="Multi_key_equal"/>
			<when output="Ẹ" state="Multi_key_exclam"/>
			<when output="È" state="Multi_key_grave"/>
			<when output="Ề" state="Multi_key_grave_asciicircum"/>
			<when output="Ề" state="Multi_key_grave_dead_circumflex"/>
			<when output="Ḕ" state="Multi_key_grave_dead_macron"/>
			<when output="Ḕ" state="Multi_key_grave_macron"/>
			<when output="Ḕ" state="Multi_key_grave_underscore"/>
			<when output="Ē" state="Multi_key_macron"/>
			<when next="Multi_key_parenleft_E" state="Multi_key_parenleft"/>
			<when output="Ė" state="Multi_key_period"/>
			<when output="Ẻ" state="Multi_key_question"/>
			<when output="Ể" state="Multi_key_question_asciicircum"/>
			<when output="Ể" state="Multi_key_question_dead_circumflex"/>
			<when output="Ë" state="Multi_key_quotedbl"/>
			<when output="Ę" state="Multi_key_semicolon"/>
			<when output="Ē" state="Multi_key_underscore"/>
			<when output="Ė" state="abovedot"/>
			<when output="É" state="acute"/>
			<when output="Ế" state="acute_circumflex"/>
			<when output="Ḗ" state="acute_macron"/>
			<when output="Ẹ" state="belowdot"/>
			<when output="Ệ" state="belowdot_circumflex"/>
			<when output="Ĕ" state="breve"/>
			<when output="Ḝ" state="breve_cedilla"/>
			<when output="Ě" state="caron"/>
			<when output="Ȩ" state="cedilla"/>
			<when output="Ê" state="circumflex"/>
			<when output="Ề" state="circumflex_grave"/>
			<when output="Ể" state="circumflex_hook"/>
			<when output="Ễ" state="circumflex_tilde"/>
			<when output="Ḙ" state="circumflexbelow"/>
			<when output="₠" state="currency"/>
			<when output="Ë" state="diaeresis"/>
			<when output="Ȅ" state="doublegrave"/>
			<when output="È" state="grave"/>
			<when output="Ḕ" state="grave_macron"/>
			<when output="Ε" state="greek"/>
			<when output="Ẻ" state="hook"/>
			<when output="Ȇ" state="invertedbreve"/>
			<when output="Ē" state="macron"/>
			<when output="Ę" state="ogonek"/>
			<when output="Ɇ" state="stroke"/>
			<when output="Ẽ" state="tilde"/>
			<when output="Ḛ" state="tildebelow"/>
		</action>
		<action id="F">
			<when output="F" state="none"/>
			<when next="Multi_key_F" state="Multi_key"/>
			<when next="Multi_key_parenleft_F" state="Multi_key_parenleft"/>
			<when output="Ḟ" state="Multi_key_period"/>
			<when output="Ḟ" state="abovedot"/>
			<when output="₣" state="currency"/>
			<when output="Φ" state="greek"/>
			<when output="Ƒ" state="hook"/>
		</action>
		<action id="G">
			<when output="G" state="none"/>
			<when output="Ŋ" state="Multi_key_N"/>
			<when output="Ğ" state="Multi_key_U"/>
			<when output="Ǵ" state="Multi_key_acute"/>
			<when output="Ǵ" state="Multi_key_apostrophe"/>
			<when output="Ĝ" state="Multi_key_asciicircum"/>
			<when output="Ğ" state="Multi_key_b"/>
			<when output="Ǧ" state="Multi_key_c"/>
			<when output="Ģ" state="Multi_key_comma"/>
			<when output="Ḡ" state="Multi_key_macron"/>
			<when next="Multi_key_parenleft_G" state="Multi_key_parenleft"/>
			<when output="Ġ" state="Multi_key_period"/>
			<when output="Ǥ" state="Multi_key_slash"/>
			<when output="Ḡ" state="Multi_key_underscore"/>
			<when output="Ġ" state="abovedot"/>
			<when output="Ǵ" state="acute"/>
			<when output="Ğ" state="breve"/>
			<when output="Ǧ" state="caron"/>
			<when output="Ģ" state="cedilla"/>
			<when output="Ĝ" state="circumflex"/>
			<when output="₲" state="currency"/>
			<when output="Γ" state="greek"/>
			<when output="Ɠ" state="hook"/>
			<when output="Ḡ" state="macron"/>
			<when output="Ǥ" state="stroke"/>
		</action>
		<action id="H">
			<when output="H" state="none"/>
			<when output="Ð" state="Multi_key_D"/>
			<when output="Þ" state="Multi_key_T"/>
			<when output="Ĥ" state="Multi_key_asciicircum"/>
			<when output="Ȟ" state="Multi_key_c"/>
			<when output="Ḩ" state="Multi_key_comma"/>
			<when output="Ḥ" state="Multi_key_exclam"/>
			<when next="Multi_key_parenleft_H" state="Multi_key_parenleft"/>
			<when output="Ḣ" state="Multi_key_period"/>
			<when output="Ḧ" state="Multi_key_quotedbl"/>
			<when output="Ħ" state="Multi_key_slash"/>
			<when output="Ḣ" state="abovedot"/>
			<when output="Ḥ" state="belowdot"/>
			<when output="Ḫ" state="brevebelow"/>
			<when output="Ȟ" state="caron"/>
			<when output="Ḩ" state="cedilla"/>
			<when output="Ĥ" state="circumflex"/>
			<when output="₴" state="currency"/>
			<when output="Ⱨ" state="descender"/>
			<when output="Ḧ" state="diaeresis"/>
			<when output="Η" state="greek"/>
			<when output="Ħ" state="stroke"/>
		</action>
		<action id="I">
			<when output="I" state="none"/>
			<when output="Ĭ" state="Multi_key_U"/>
			<when output="Í" state="Multi_key_acute"/>
			<when output="Ḯ" state="Multi_key_acute_dead_diaeresis"/>
			<when output="Ḯ" state="Multi_key_acute_quotedbl"/>
			<when output="Í" state="Multi_key_apostrophe"/>
			<when output="Ḯ" state="Multi_key_apostrophe_dead_diaeresis"/>
			<when output="Ḯ" state="Multi_key_apostrophe_quotedbl"/>
			<when output="Î" state="Multi_key_asciicircum"/>
			<when output="Ĩ" state="Multi_key_asciitilde"/>
			<when output="Ĭ" state="Multi_key_b"/>
			<when output="Ǐ" state="Multi_key_c"/>
			<when output="Ị" state="Multi_key_exclam"/>
			<when output="Ì" state="Multi_key_grave"/>
			<when output="Ī" state="Multi_key_macron"/>
			<when next="Multi_key_parenleft_I" state="Multi_key_parenleft"/>
			<when output="İ" state="Multi_key_period"/>
			<when output="Ỉ" state="Multi_key_question"/>
			<when output="Ï" state="Multi_key_quotedbl"/>
			<when output="Į" state="Multi_key_semicolon"/>
			<when output="Ɨ" state="Multi_key_slash"/>
			<when output="Ī" state="Multi_key_underscore"/>
			<when output="İ" state="abovedot"/>
			<when output="Í" state="acute"/>
			<when output="Ḯ" state="acute_diaeresis"/>
			<when output="Ị" state="belowdot"/>
			<when output="Ĭ" state="breve"/>
			<when output="Ǐ" state="caron"/>
			<when output="Î" state="circumflex"/>
			<when output="៛" state="currency"/>
			<when output="Ï" state="diaeresis"/>
			<when output="Ȉ" state="doublegrave"/>
			<when output="Ì" state="grave"/>
			<when output="Ι" state="greek"/>
			<when output="Ῑ" state="greek_macron"/>
			<when output="Ỉ" state="hook"/>
			<when output="Ȋ" state="invertedbreve"/>
			<when output="Ī" state="macron"/>
			<when output="Į" state="ogonek"/>
			<when output="Ɨ" state="stroke"/>
			<when output="Ĩ" state="tilde"/>
			<when output="Ḭ" state="tildebelow"/>
		</action>
		<action id="J">
			<when output="J" state="none"/>
			<when output="Ĵ" state="Multi_key_asciicircum"/>
			<when next="Multi_key_parenleft_J" state="Multi_key_parenleft"/>
			<when output="Ĵ" state="circumflex"/>
			<when output="Θ" state="greek"/>
			<when output="Ɉ" state="stroke"/>
		</action>
		<action id="K">
			<when output="K" state="none"/>
			<when output="Ḱ" state="Multi_key_acute"/>
			<when output="Ḱ" state="Multi_key_apostrophe"/>
			<when output="Ǩ" state="Multi_key_c"/>
			<when output="Ķ" state="Multi_key_comma"/>
			<when output="Ḳ" state="Multi_key_exclam"/>
			<when next="Multi_key_parenleft_K" state="Multi_key_parenleft"/>
			<when output="Ḱ" state="acute"/>
			<when output="Ḳ" state="belowdot"/>
			<when output="Ǩ" state="caron"/>
			<when output="Ķ" state="cedilla"/>
			<when output="₭" state="currency"/>
			<when output="Ⱪ" state="descender"/>
			<when output="Ꝃ" state="diagonalstroke"/>
			<when output="Ꝅ" state="diagonalstroke_stroke"/>
			<when output="Κ" state="greek"/>
			<when output="Ƙ" state="hook"/>
			<when output="Ḵ" state="linebelow"/>
			<when output="Ꝁ" state="stroke"/>
		</action>
		<action id="L">
			<when output="L" state="none"/>
			<when next="Multi_key_L" state="Multi_key"/>
			<when output="|" state="Multi_key_V"/>
			<when output="Ĺ" state="Multi_key_acute"/>
			<when output="Ĺ" state="Multi_key_apostrophe"/>
			<when output="Ľ" state="Multi_key_c"/>
			<when output="Ļ" state="Multi_key_comma"/>
			<when output="₤" state="Multi_key_equal"/>
			<when output="Ḷ" state="Multi_key_exclam"/>
			<when output="Ḹ" state="Multi_key_macron_combining_belowdot"/>
			<when output="Ḹ" state="Multi_key_macron_dead_belowdot"/>
			<when output="Ḹ" state="Multi_key_macron_exclam"/>
			<when output="£" state="Multi_key_minus"/>
			<when next="Multi_key_parenleft_L" state="Multi_key_parenleft"/>
			<when output="Ł" state="Multi_key_slash"/>
			<when output="Ḹ" state="Multi_key_underscore_combining_belowdot"/>
			<when output="Ḹ" state="Multi_key_underscore_dead_belowdot"/>
			<when output="Ḹ" state="Multi_key_underscore_exclam"/>
			<when output="Ŀ" state="abovedot"/>
			<when output="Ĺ" state="acute"/>
			<when output="Ƚ" state="bar"/>
			<when output="Ḷ" state="belowdot"/>
			<when output="Ḹ" state="belowdot_macron"/>
			<when output="Ľ" state="caron"/>
			<when output="Ļ" state="cedilla"/>
			<when output="Ḽ" state="circumflexbelow"/>
			<when output="₤" state="currency"/>
			<when output="Ⱡ" state="doublebar"/>
			<when output="Λ" state="greek"/>
			<when output="Ꝉ" state="highstroke"/>
			<when output="Ḻ" state="linebelow"/>
			<when output="Ɫ" state="middletilde"/>
			<when output="Ł" state="stroke"/>
		</action>
		<action id="M">
			<when output="M" state="none"/>
			<when output="℠" state="Multi_key_S"/>
			<when output="™" state="Multi_key_T"/>
			<when output="Ḿ" state="Multi_key_acute"/>
			<when output="Ḿ" state="Multi_key_apostrophe"/>
			<when output="Ṃ" state="Multi_key_exclam"/>
			<when next="Multi_key_parenleft_M" state="Multi_key_parenleft"/>
			<when output="Ṁ" state="Multi_key_period"/>
			<when output="℠" state="Multi_key_s"/>
			<when output="™" state="Multi_key_t"/>
			<when output="Ṁ" state="abovedot"/>
			<when output="Ḿ" state="acute"/>
			<when output="Ṃ" state="belowdot"/>
			<when output="ℳ" state="currency"/>
			<when output="Μ" state="greek"/>
			<when output="Ɱ" state="hook"/>
		</action>
		<action id="Multi_key">
			<when next="Multi_key" state="none"/>
		</action>
		<action id="N">
			<when output="N" state="none"/>
			<when next="Multi_key_N" state="Multi_key"/>
			<when output="Ń" state="Multi_key_acute"/>
			<when output="Ń" state="Multi_key_apostrophe"/>
			<when output="Ñ" state="Multi_key_asciitilde"/>
			<when output="Ň" state="Multi_key_c"/>
			<when output="Ņ" state="Multi_key_comma"/>
			<when output="₦" state="Multi_key_equal"/>
			<when output="Ṇ" state="Multi_key_exclam"/>
			<when output="Ǹ" state="Multi_key_grave"/>
			<when next="Multi_key_parenleft_N" state="Multi_key_parenleft"/>
			<when output="Ṅ" state="Multi_key_period"/>
			<when output="Ṅ" state="abovedot"/>
			<when output="Ń" state="acute"/>
			<when output="Ṇ" state="belowdot"/>
			<when output="Ň" state="caron"/>
			<when output="Ņ" state="cedilla"/>
			<when output="Ṋ" state="circumflexbelow"/>
			<when output="₦" state="currency"/>
			<when output="Ǹ" state="grave"/>
			<when output="Ν" state="greek"/>
			<when output="Ɲ" state="hook"/>
			<when output="Ṉ" state="linebelow"/>
			<when output="Ƞ" state="longrightleg"/>
			<when output="Ñ" state="tilde"/>
		</action>
		<action id="O">
			<when output="O" state="none"/>
			<when next="Multi_key_O" state="Multi_key"/>
			<when output="№" state="Multi_key_N"/>
			<when output="Ŏ" state="Multi_key_U"/>
			<when output="Ó" state="Multi_key_acute"/>
			<when output="Ố" state="Multi_key_acute_asciicircum"/>
			<when output="Ṍ" state="Multi_key_acute_asciitilde"/>
			<when output="Ṍ" state="Multi_key_acute_combining_tilde"/>
			<when output="Ố" state="Multi_key_acute_dead_circumflex"/>
			<when output="Ớ" state="Multi_key_acute_dead_horn"/>
			<when output="Ṓ" state="Multi_key_acute_dead_macron"/>
			<when output="Ṍ" state="Multi_key_acute_dead_tilde"/>
			<when output="Ṓ" state="Multi_key_acute_macron"/>
			<when output="Ớ" state="Multi_key_acute_plus"/>
			<when output="Ǿ" state="Multi_key_acute_slash"/>
			<when output="Ṓ" state="Multi_key_acute_underscore"/>
			<when output="Ó" state="Multi_key_apostrophe"/>
			<when output="Ố" state="Multi_key_apostrophe_asciicircum"/>
			<when output="Ṍ" state="Multi_key_apostrophe_asciitilde"/>
			<when output="Ṍ" state="Multi_key_apostrophe_combining_tilde"/>
			<when output="Ố" state="Multi_key_apostrophe_dead_circumflex"/>
			<when output="Ớ" state="Multi_key_apostrophe_dead_horn"/>
			<when output="Ṓ" state="Multi_key_apostrophe_dead_macron"/>
			<when output="Ṍ" state="Multi_key_apostrophe_dead_tilde"/>
			<when output="Ṓ" state="Multi_key_apostrophe_macron"/>
			<when output="Ớ" state="Multi_key_apostrophe_plus"/>
			<when output="Ǿ" state="Multi_key_apostrophe_slash"/>
			<when output="Ṓ" state="Multi_key_apostrophe_underscore"/>
			<when output="Ô" state="Multi_key_asciicircum"/>
			<when output="Ộ" state="Multi_key_asciicircum_combining_belowdot"/>
			<when output="Ộ" state="Multi_key_asciicircum_dead_belowdot"/>
			<when output="Ộ" state="Multi_key_asciicircum_exclam"/>
			<when output="Õ" state="Multi_key_asciitilde"/>
			<when output="Ỗ" state="Multi_key_asciitilde_asciicircum"/>
			<when output="Ỗ" state="Multi_key_asciitilde_dead_circumflex"/>
			<when output="Ỡ" state="Multi_key_asciitilde_dead_horn"/>
			<when output="Ỡ" state="Multi_key_asciitilde_plus"/>
			<when output="Ŏ" state="Multi_key_b"/>
			<when output="Ǒ" state="Multi_key_c"/>
			<when output="Ő" state="Multi_key_equal"/>
			<when output="Ọ" state="Multi_key_exclam"/>
			<when output="Ợ" state="Multi_key_exclam_dead_horn"/>
			<when output="Ợ" state="Multi_key_exclam_plus"/>
			<when output="Ò" state="Multi_key_grave"/>
			<when output="Ồ" state="Multi_key_grave_asciicircum"/>
			<when output="Ồ" state="Multi_key_grave_dead_circumflex"/>
			<when output="Ờ" state="Multi_key_grave_dead_horn"/>
			<when output="Ṑ" state="Multi_key_grave_dead_macron"/>
			<when output="Ṑ" state="Multi_key_grave_macron"/>
			<when output="Ờ" state="Multi_key_grave_plus"/>
			<when output="Ṑ" state="Multi_key_grave_underscore"/>
			<when output="Ō" state="Multi_key_macron"/>
			<when output="Ȭ" state="Multi_key_macron_asciitilde"/>
			<when output="Ȭ" state="Multi_key_macron_combining_tilde"/>
			<when output="Ȱ" state="Multi_key_macron_dead_abovedot"/>
			<when output="Ȫ" state="Multi_key_macron_dead_diaeresis"/>
			<when output="Ǭ" state="Multi_key_macron_dead_ogonek"/>
			<when output="Ȭ" state="Multi_key_macron_dead_tilde"/>
			<when output="Ȱ" state="Multi_key_macron_period"/>
			<when output="Ȫ" state="Multi_key_macron_quotedbl"/>
			<when output="Ǭ" state="Multi_key_macron_semicolon"/>
			<when next="Multi_key_parenleft_O" state="Multi_key_parenleft"/>
			<when output="Ȯ" state="Multi_key_period"/>
			<when output="Ơ" state="Multi_key_plus"/>
			<when output="Ỏ" state="Multi_key_question"/>
			<when output="Ổ" state="Multi_key_question_asciicircum"/>
			<when output="Ổ" state="Multi_key_question_dead_circumflex"/>
			<when output="Ở" state="Multi_key_question_dead_horn"/>
			<when output="Ở" state="Multi_key_question_plus"/>
			<when output="Ö" state="Multi_key_quotedbl"/>
			<when output="Ṏ" state="Multi_key_quotedbl_asciitilde"/>
			<when output="Ṏ" state="Multi_key_quotedbl_combining_tilde"/>
			<when output="Ṏ" state="Multi_key_quotedbl_dead_tilde"/>
			<when output="Ǫ" state="Multi_key_semicolon"/>
			<when output="Ø" state="Multi_key_slash"/>
			<when output="Ō" state="Multi_key_underscore"/>
			<when output="Ȭ" state="Multi_key_underscore_asciitilde"/>
			<when output="Ȭ" state="Multi_key_underscore_combining_tilde"/>
			<when output="Ȱ" state="Multi_key_underscore_dead_abovedot"/>
			<when output="Ȫ" state="Multi_key_underscore_dead_diaeresis"/>
			<when output="Ǭ" state="Multi_key_underscore_dead_ogonek"/>
			<when output="Ȭ" state="Multi_key_underscore_dead_tilde"/>
			<when output="Ȱ" state="Multi_key_underscore_period"/>
			<when output="Ȫ" state="Multi_key_underscore_quotedbl"/>
			<when output="Ǭ" state="Multi_key_underscore_semicolon"/>
			<when output="Ȯ" state="abovedot"/>
			<when output="Ȱ" state="abovedot_macron"/>
			<when output="Ó" state="acute"/>
			<when output="Ố" state="acute_circumflex"/>
			<when output="Ớ" state="acute_horn"/>
			<when output="Ṓ" state="acute_macron"/>
			<when output="Ǿ" state="acute_stroke"/>
			<when output="Ṍ" state="acute_tilde"/>
			<when output="Ọ" state="belowdot"/>
			<when output="Ộ" state="belowdot_circumflex"/>
			<when output="Ợ" state="belowdot_horn"/>
			<when output="Ŏ" state="breve"/>
			<when output="Ǒ" state="caron"/>
			<when output="Ô" state="circumflex"/>
			<when output="Ồ" state="circumflex_grave"/>
			<when output="Ổ" state="circumflex_hook"/>
			<when output="Ỗ" state="circumflex_tilde"/>
			<when output="૱" state="currency"/>
			<when output="Ö" state="diaeresis"/>
			<when output="Ȫ" state="diaeresis_macron"/>
			<when output="Ṏ" state="diaeresis_tilde"/>
			<when output="Ő" state="doubleacute"/>
			<when output="Ȍ" state="doublegrave"/>
			<when output="Ò" state="grave"/>
			<when output="Ờ" state="grave_horn"/>
			<when output="Ṑ" state="grave_macron"/>
			<when output="Ο" state="greek"/>
			<when output="Ỏ" state="hook"/>
			<when output="Ở" state="hook_horn"/>
			<when output="Ơ" state="horn"/>
			<when output="Ỡ" state="horn_tilde"/>
			<when output="Ȏ" state="invertedbreve"/>
			<when output="Ꝋ" state="longstrokeoverlay"/>
			<when output="Ꝍ" state="loop"/>
			<when output="Ō" state="macron"/>
			<when output="Ǭ" state="macron_ogonek"/>
			<when output="Ȭ" state="macron_tilde"/>
			<when output="Ɵ" state="middletilde"/>
			<when output="Ǫ" state="ogonek"/>
			<when output="Ø" state="stroke"/>
			<when output="Õ" state="tilde"/>
		</action>
		<action id="P">
			<when output="P" state="none"/>
			<when next="Multi_key_P" state="Multi_key"/>
			<when output="¶" state="Multi_key_P"/>
			<when output="Ṕ" state="Multi_key_acute"/>
			<when output="Ṕ" state="Multi_key_apostrophe"/>
			<when next="Multi_key_parenleft_P" state="Multi_key_parenleft"/>
			<when output="Ṗ" state="Multi_key_period"/>
			<when output="Ṗ" state="abovedot"/>
			<when output="Ṕ" state="acute"/>
			<when output="₧" state="currency"/>
			<when output="Ꝓ" state="flourish"/>
			<when output="Π" state="greek"/>
			<when output="Ƥ" state="hook"/>
			<when output="Ꝕ" state="squirreltail"/>
			<when output="Ᵽ" state="stroke"/>
			<when output="Ꝑ" state="strokethroughdescender"/>
		</action>
		<action id="Q">
			<when output="Q" state="none"/>
			<when next="Multi_key_parenleft_Q" state="Multi_key_parenleft"/>
			<when output="Ꝙ" state="diagonalstroke"/>
			<when output="Χ" state="greek"/>
			<when output="Ꝗ" state="strokethroughdescender"/>
		</action>
		<action id="R">
			<when output="R" state="none"/>
			<when next="Multi_key_R" state="Multi_key"/>
			<when output="®" state="Multi_key_O"/>
			<when output="Ŕ" state="Multi_key_acute"/>
			<when output="Ŕ" state="Multi_key_apostrophe"/>
			<when output="Ř" state="Multi_key_c"/>
			<when output="Ŗ" state="Multi_key_comma"/>
			<when output="Ṛ" state="Multi_key_exclam"/>
			<when output="Ṝ" state="Multi_key_macron_combining_belowdot"/>
			<when output="Ṝ" state="Multi_key_macron_dead_belowdot"/>
			<when output="Ṝ" state="Multi_key_macron_exclam"/>
			<when output="®" state="Multi_key_o"/>
			<when next="Multi_key_parenleft_R" state="Multi_key_parenleft"/>
			<when output="Ṙ" state="Multi_key_period"/>
			<when output="Ṝ" state="Multi_key_underscore_combining_belowdot"/>
			<when output="Ṝ" state="Multi_key_underscore_dead_belowdot"/>
			<when output="Ṝ" state="Multi_key_underscore_exclam"/>
			<when output="Ṙ" state="abovedot"/>
			<when output="Ŕ" state="acute"/>
			<when output="Ṛ" state="belowdot"/>
			<when output="Ṝ" state="belowdot_macron"/>
			<when output="Ř" state="caron"/>
			<when output="Ŗ" state="cedilla"/>
			<when output="₨" state="currency"/>
			<when output="Ȑ" state="doublegrave"/>
			<when output="Ρ" state="greek"/>
			<when output="Ȓ" state="invertedbreve"/>
			<when output="Ṟ" state="linebelow"/>
			<when output="Ɍ" state="stroke"/>
			<when output="Ɽ" state="tail"/>
		</action>
		<action id="S">
			<when output="S" state="none"/>
			<when next="Multi_key_S" state="Multi_key"/>
			<when output="Ś" state="Multi_key_acute"/>
			<when output="Ś" state="Multi_key_apostrophe"/>
			<when output="Ŝ" state="Multi_key_asciicircum"/>
			<when output="Š" state="Multi_key_c"/>
			<when output="Ş" state="Multi_key_comma"/>
			<when output="Ṣ" state="Multi_key_exclam"/>
			<when output="ſ" state="Multi_key_f"/>
			<when next="Multi_key_parenleft_S" state="Multi_key_parenleft"/>
			<when output="Ṡ" state="Multi_key_period"/>
			<when output="Ṥ" state="Multi_key_period_acute"/>
			<when output="Ṥ" state="Multi_key_period_apostrophe"/>
			<when output="Ṥ" state="Multi_key_period_combining_acute"/>
			<when output="Ṩ" state="Multi_key_period_combining_belowdot"/>
			<when output="Ṥ" state="Multi_key_period_dead_acute"/>
			<when output="Ṩ" state="Multi_key_period_dead_belowdot"/>
			<when output="Ṧ" state="Multi_key_period_dead_caron"/>
			<when output="Ṩ" state="Multi_key_period_exclam"/>
			<when output="Ṡ" state="abovedot"/>
			<when output="Ṥ" state="abovedot_acute"/>
			<when output="Ṩ" state="abovedot_belowdot"/>
			<when output="Ṧ" state="abovedot_caron"/>
			<when output="Ś" state="acute"/>
			<when output="Ṣ" state="belowdot"/>
			<when output="Š" state="caron"/>
			<when output="Ş" state="cedilla"/>
			<when output="Ŝ" state="circumflex"/>
			<when output="Ș" state="commabelow"/>
			<when output="$" state="currency"/>
			<when output="Σ" state="greek"/>
			<when output="Ȿ" state="swashtail"/>
		</action>
		<action id="T">
			<when output="T" state="none"/>
			<when next="Multi_key_T" state="Multi_key"/>
			<when output="@" state="Multi_key_A"/>
			<when output="Ť" state="Multi_key_c"/>
			<when output="Ţ" state="Multi_key_comma"/>
			<when output="Ṭ" state="Multi_key_exclam"/>
			<when next="Multi_key_parenleft_T" state="Multi_key_parenleft"/>
			<when output="Ṫ" state="Multi_key_period"/>
			<when output="Ŧ" state="Multi_key_slash"/>
			<when output="Ṫ" state="abovedot"/>
			<when output="Ṭ" state="belowdot"/>
			<when output="Ť" state="caron"/>
			<when output="Ţ" state="cedilla"/>
			<when output="Ṱ" state="circumflexbelow"/>
			<when output="Ț" state="commabelow"/>
			<when output="₮" state="currency"/>
			<when output="Ⱦ" state="diagonalstroke"/>
			<when output="Τ" state="greek"/>
			<when output="Ƭ" state="hook"/>
			<when output="Ṯ" state="linebelow"/>
			<when output="Ʈ" state="retroflexhook"/>
			<when output="Ŧ" state="stroke"/>
		</action>
		<action id="U">
			<when output="U" state="none"/>
			<when next="Multi_key_U" state="Multi_key"/>
			<when output="Ŭ" state="Multi_key_U"/>
			<when output="Ú" state="Multi_key_acute"/>
			<when output="Ṹ" state="Multi_key_acute_asciitilde"/>
			<when output="Ṹ" state="Multi_key_acute_combining_tilde"/>
			<when output="Ǘ" state="Multi_key_acute_dead_diaeresis"/>
			<when output="Ứ" state="Multi_key_acute_dead_horn"/>
			<when output="Ṹ" state="Multi_key_acute_dead_tilde"/>
			<when output="Ứ" state="Multi_key_acute_plus"/>
			<when output="Ǘ" state="Multi_key_acute_quotedbl"/>
			<when output="Ú" state="Multi_key_apostrophe"/>
			<when output="Ṹ" state="Multi_key_apostrophe_asciitilde"/>
			<when output="Ṹ" state="Multi_key_apostrophe_combining_tilde"/>
			<when output="Ǘ" state="Multi_key_apostrophe_dead_diaeresis"/>
			<when output="Ứ" state="Multi_key_apostrophe_dead_horn"/>
			<when output="Ṹ" state="Multi_key_apostrophe_dead_tilde"/>
			<when output="Ứ" state="Multi_key_apostrophe_plus"/>
			<when output="Ǘ" state="Multi_key_apostrophe_quotedbl"/>
			<when output="Û" state="Multi_key_asciicircum"/>
			<when output="Ũ" state="Multi_key_asciitilde"/>
			<when output="Ữ" state="Multi_key_asciitilde_dead_horn"/>
			<when output="Ữ" state="Multi_key_asciitilde_plus"/>
			<when output="Ŭ" state="Multi_key_b"/>
			<when output="Ǔ" state="Multi_key_c"/>
			<when output="Ǚ" state="Multi_key_c_dead_diaeresis"/>
			<when output="Ǚ" state="Multi_key_c_quotedbl"/>
			<when output="Ű" state="Multi_key_equal"/>
			<when output="Ụ" state="Multi_key_exclam"/>
			<when output="Ự" state="Multi_key_exclam_dead_horn"/>
			<when output="Ự" state="Multi_key_exclam_plus"/>
			<when output="Ù" state="Multi_key_grave"/>
			<when output="Ǜ" state="Multi_key_grave_dead_diaeresis"/>
			<when output="Ừ" state="Multi_key_grave_dead_horn"/>
			<when output="Ừ" state="Multi_key_grave_plus"/>
			<when output="Ǜ" state="Multi_key_grave_quotedbl"/>
			<when output="Ū" state="Multi_key_macron"/>
			<when output="Ǖ" state="Multi_key_macron_dead_diaeresis"/>
			<when output="Ǖ" state="Multi_key_macron_quotedbl"/>
			<when output="Ů" state="Multi_key_o"/>
			<when next="Multi_key_parenleft_U" state="Multi_key_parenleft"/>
			<when output="Ư" state="Multi_key_plus"/>
			<when output="Ủ" state="Multi_key_question"/>
			<when output="Ử" state="Multi_key_question_dead_horn"/>
			<when output="Ử" state="Multi_key_question_plus"/>
			<when output="Ü" state="Multi_key_quotedbl"/>
			<when output="Ṻ" state="Multi_key_quotedbl_dead_macron"/>
			<when output="Ṻ" state="Multi_key_quotedbl_macron"/>
			<when output="Ṻ" state="Multi_key_quotedbl_underscore"/>
			<when output="Ų" state="Multi_key_semicolon"/>
			<when output="Ū" state="Multi_key_underscore"/>
			<when output="Ǖ" state="Multi_key_underscore_dead_diaeresis"/>
			<when output="Ǖ" state="Multi_key_underscore_quotedbl"/>
			<when output="Ú" state="acute"/>
			<when output="Ǘ" state="acute_diaeresis"/>
			<when output="Ứ" state="acute_horn"/>
			<when output="Ṹ" state="acute_tilde"/>
			<when output="Ụ" state="belowdot"/>
			<when output="Ự" state="belowdot_horn"/>
			<when output="Ŭ" state="breve"/>
			<when output="Ǔ" state="caron"/>
			<when output="Ǚ" state="caron_diaeresis"/>
			<when output="Û" state="circumflex"/>
			<when output="Ṷ" state="circumflexbelow"/>
			<when output="圓" state="currency"/>
			<when output="Ü" state="diaeresis"/>
			<when output="Ǜ" state="diaeresis_grave"/>
			<when output="Ǖ" state="diaeresis_macron"/>
			<when output="Ṳ" state="diaeresisbelow"/>
			<when output="Ű" state="doubleacute"/>
			<when output="Ȕ" state="doublegrave"/>
			<when output="Ù" state="grave"/>
			<when output="Ừ" state="grave_horn"/>
			<when output="Υ" state="greek"/>
			<when output="ϒ" state="greek_hook"/>
			<when output="Ῡ" state="greek_macron"/>
			<when output="Ủ" state="hook"/>
			<when output="Ử" state="hook_horn"/>
			<when output="Ư" state="horn"/>
			<when output="Ữ" state="horn_tilde"/>
			<when output="Ȗ" state="invertedbreve"/>
			<when output="Ū" state="macron"/>
			<when output="Ų" state="ogonek"/>
			<when output="Ů" state="ringabove"/>
			<when output="Ʉ" state="stroke"/>
			<when output="Ũ" state="tilde"/>
			<when output="Ṵ" state="tildebelow"/>
		</action>
		<action id="V">
			<when output="V" state="none"/>
			<when next="Multi_key_V" state="Multi_key"/>
			<when output="|" state="Multi_key_L"/>
			<when output="Ṽ" state="Multi_key_asciitilde"/>
			<when output="Ṿ" state="Multi_key_exclam"/>
			<when next="Multi_key_parenleft_V" state="Multi_key_parenleft"/>
			<when output="Ṿ" state="belowdot"/>
			<when output="Ꝟ" state="diagonalstroke"/>
			<when output="Ʋ" state="hook"/>
			<when output="Ṽ" state="tilde"/>
		</action>
		<action id="W">
			<when output="W" state="none"/>
			<when next="Multi_key_W" state="Multi_key"/>
			<when output="Ẃ" state="Multi_key_acute"/>
			<when output="Ẃ" state="Multi_key_apostrophe"/>
			<when output="Ŵ" state="Multi_key_asciicircum"/>
			<when output="₩" state="Multi_key_equal"/>
			<when output="Ẉ" state="Multi_key_exclam"/>
			<when output="Ẁ" state="Multi_key_grave"/>
			<when next="Multi_key_parenleft_W" state="Multi_key_parenleft"/>
			<when output="Ẇ" state="Multi_key_period"/>
			<when output="Ẅ" state="Multi_key_quotedbl"/>
			<when output="Ẇ" state="abovedot"/>
			<when output="Ẃ" state="acute"/>
			<when output="Ẉ" state="belowdot"/>
			<when output="Ŵ" state="circumflex"/>
			<when output="₩" state="currency"/>
			<when output="Ẅ" state="diaeresis"/>
			<when output="Ẁ" state="grave"/>
			<when output="Ω" state="greek"/>
			<when output="Ⱳ" state="hook"/>
		</action>
		<action id="X">
			<when output="X" state="none"/>
			<when next="Multi_key_parenleft_X" state="Multi_key_parenleft"/>
			<when output="Ẋ" state="Multi_key_period"/>
			<when output="Ẍ" state="Multi_key_quotedbl"/>
			<when output="Ẋ" state="abovedot"/>
			<when output="Ẍ" state="diaeresis"/>
			<when output="Ξ" state="greek"/>
		</action>
		<action id="Y">
			<when output="Y" state="none"/>
			<when next="Multi_key_Y" state="Multi_key"/>
			<when output="Ý" state="Multi_key_acute"/>
			<when output="Ý" state="Multi_key_apostrophe"/>
			<when output="Ŷ" state="Multi_key_asciicircum"/>
			<when output="Ỹ" state="Multi_key_asciitilde"/>
			<when output="¥" state="Multi_key_equal"/>
			<when output="Ỵ" state="Multi_key_exclam"/>
			<when output="Ỳ" state="Multi_key_grave"/>
			<when output="Ȳ" state="Multi_key_macron"/>
			<when next="Multi_key_parenleft_Y" state="Multi_key_parenleft"/>
			<when output="Ẏ" state="Multi_key_period"/>
			<when output="Ỷ" state="Multi_key_question"/>
			<when output="Ÿ" state="Multi_key_quotedbl"/>
			<when output="Ȳ" state="Multi_key_underscore"/>
			<when output="Ẏ" state="abovedot"/>
			<when output="Ý" state="acute"/>
			<when output="Ỵ" state="belowdot"/>
			<when output="Ŷ" state="circumflex"/>
			<when output="円" state="currency"/>
			<when output="Ÿ" state="diaeresis"/>
			<when output="Ỳ" state="grave"/>
			<when output="Ψ" state="greek"/>
			<when output="Ỷ" state="hook"/>
			<when output="Ỿ" state="loop"/>
			<when output="Ȳ" state="macron"/>
			<when output="Ɏ" state="stroke"/>
			<when output="Ỹ" state="tilde"/>
		</action>
		<action id="Z">
			<when output="Z" state="none"/>
			<when output="Ź" state="Multi_key_acute"/>
			<when output="Ź" state="Multi_key_apostrophe"/>
			<when output="Ẑ" state="Multi_key_asciicircum"/>
			<when output="Ž" state="Multi_key_c"/>
			<when output="Ẓ" state="Multi_key_exclam"/>
			<when next="Multi_key_parenleft_Z" state="Multi_key_parenleft"/>
			<when output="Ż" state="Multi_key_period"/>
			<when output="Ƶ" state="Multi_key_slash"/>
			<when output="Ż" state="abovedot"/>
			<when output="Ź" state="acute"/>
			<when output="Ẓ" state="belowdot"/>
			<when output="Ž" state="caron"/>
			<when output="Ẑ" state="circumflex"/>
			<when output="Ⱬ" state="descender"/>
			<when output="Ζ" state="greek"/>
			<when output="Ȥ" state="hook"/>
			<when output="Ẕ" state="linebelow"/>
			<when output="Ƶ" state="stroke"/>
			<when output="Ɀ" state="swashtail"/>
		</action>
		<action id="[">
			<when next="Dead Key State 0" state="none"/>
		</action>
		<action id="[ 1">
			<when next="Dead Key State 0" state="none"/>
		</action>
		<action id="\">
			<when output="\" state="none"/>
			<when output="〝" state="Multi_key_quotedbl"/>
		</action>
		<action id="]">
			<when output="]" state="none"/>
		</action>
		<action id="] 1">
			<when output="[" state="none"/>
		</action>
		<action id="^">
			<when output="^" state="none"/>
			<when next="Multi_key_asciicircum" state="Multi_key"/>
			<when next="Multi_key_acute_asciicircum" state="Multi_key_acute"/>
			<when next="Multi_key_apostrophe_asciicircum" state="Multi_key_apostrophe"/>
			<when next="Multi_key_asciitilde_asciicircum" state="Multi_key_asciitilde"/>
			<when output="¦" state="Multi_key_exclam"/>
			<when next="Multi_key_grave_asciicircum" state="Multi_key_grave"/>
			<when next="Multi_key_question_asciicircum" state="Multi_key_question"/>
			<when output="|" state="Multi_key_slash"/>
			<when output="^" state="Multi_key_space"/>
		</action>
		<action id="_">
			<when output="_" state="none"/>
			<when next="Multi_key_underscore" state="Multi_key"/>
			<when next="Multi_key_acute_underscore" state="Multi_key_acute"/>
			<when next="Multi_key_apostrophe_underscore" state="Multi_key_apostrophe"/>
			<when next="Multi_key_asciicircum_underscore" state="Multi_key_asciicircum"/>
			<when next="Multi_key_grave_underscore" state="Multi_key_grave"/>
			<when next="Multi_key_quotedbl_underscore" state="Multi_key_quotedbl"/>
		</action>
		<action id="`">
			<when output="`" state="none"/>
			<when next="Multi_key_grave" state="Multi_key"/>
			<when next="Multi_key_Greek_iota_grave" state="Multi_key_Greek_iota"/>
			<when output="῍" state="Multi_key_U1FBF"/>
			<when output="῝" state="Multi_key_U1FFE"/>
			<when output="῭" state="Multi_key_diaeresis"/>
			<when output="`" state="Multi_key_space"/>
		</action>
		<action id="a">
			<when output="a" state="none"/>
			<when next="Multi_key_a" state="Multi_key"/>
			<when output="ă" state="Multi_key_U"/>
			<when output="ặ" state="Multi_key_U_combining_belowdot"/>
			<when output="ặ" state="Multi_key_U_dead_belowdot"/>
			<when output="ặ" state="Multi_key_U_exclam"/>
			<when output="á" state="Multi_key_acute"/>
			<when output="ấ" state="Multi_key_acute_asciicircum"/>
			<when output="ắ" state="Multi_key_acute_b"/>
			<when output="ǻ" state="Multi_key_acute_dead_abovering"/>
			<when output="ắ" state="Multi_key_acute_dead_breve"/>
			<when output="ấ" state="Multi_key_acute_dead_circumflex"/>
			<when output="á" state="Multi_key_apostrophe"/>
			<when output="ấ" state="Multi_key_apostrophe_asciicircum"/>
			<when output="ắ" state="Multi_key_apostrophe_b"/>
			<when output="ǻ" state="Multi_key_apostrophe_dead_abovering"/>
			<when output="ắ" state="Multi_key_apostrophe_dead_breve"/>
			<when output="ấ" state="Multi_key_apostrophe_dead_circumflex"/>
			<when output="â" state="Multi_key_asciicircum"/>
			<when output="ậ" state="Multi_key_asciicircum_combining_belowdot"/>
			<when output="ậ" state="Multi_key_asciicircum_dead_belowdot"/>
			<when output="ậ" state="Multi_key_asciicircum_exclam"/>
			<when output="ª" state="Multi_key_asciicircum_underscore"/>
			<when output="ã" state="Multi_key_asciitilde"/>
			<when output="ẫ" state="Multi_key_asciitilde_asciicircum"/>
			<when output="ẵ" state="Multi_key_asciitilde_b"/>
			<when output="ẵ" state="Multi_key_asciitilde_dead_breve"/>
			<when output="ẫ" state="Multi_key_asciitilde_dead_circumflex"/>
			<when output="ă" state="Multi_key_b"/>
			<when output="ặ" state="Multi_key_b_combining_belowdot"/>
			<when output="ặ" state="Multi_key_b_dead_belowdot"/>
			<when output="ặ" state="Multi_key_b_exclam"/>
			<when output="ǎ" state="Multi_key_c"/>
			<when output="ạ" state="Multi_key_exclam"/>
			<when output="à" state="Multi_key_grave"/>
			<when output="ầ" state="Multi_key_grave_asciicircum"/>
			<when output="ằ" state="Multi_key_grave_b"/>
			<when output="ằ" state="Multi_key_grave_dead_breve"/>
			<when output="ầ" state="Multi_key_grave_dead_circumflex"/>
			<when output="ā" state="Multi_key_macron"/>
			<when output="ǡ" state="Multi_key_macron_dead_abovedot"/>
			<when output="ǟ" state="Multi_key_macron_dead_diaeresis"/>
			<when output="ǡ" state="Multi_key_macron_period"/>
			<when output="ǟ" state="Multi_key_macron_quotedbl"/>
			<when output="å" state="Multi_key_o"/>
			<when output="ǻ" state="Multi_key_o_apostrophe"/>
			<when next="Multi_key_parenleft_a" state="Multi_key_parenleft"/>
			<when output="ȧ" state="Multi_key_period"/>
			<when output="ả" state="Multi_key_question"/>
			<when output="ẩ" state="Multi_key_question_asciicircum"/>
			<when output="ẳ" state="Multi_key_question_b"/>
			<when output="ẳ" state="Multi_key_question_dead_breve"/>
			<when output="ẩ" state="Multi_key_question_dead_circumflex"/>
			<when output="ä" state="Multi_key_quotedbl"/>
			<when output="ą" state="Multi_key_semicolon"/>
			<when output="ā" state="Multi_key_underscore"/>
			<when output="ǡ" state="Multi_key_underscore_dead_abovedot"/>
			<when output="ǟ" state="Multi_key_underscore_dead_diaeresis"/>
			<when output="ǡ" state="Multi_key_underscore_period"/>
			<when output="ǟ" state="Multi_key_underscore_quotedbl"/>
			<when output="ȧ" state="abovedot"/>
			<when output="ǡ" state="abovedot_macron"/>
			<when output="á" state="acute"/>
			<when output="ắ" state="acute_breve"/>
			<when output="ấ" state="acute_circumflex"/>
			<when output="ǻ" state="acute_ringabove"/>
			<when output="ạ" state="belowdot"/>
			<when output="ặ" state="belowdot_breve"/>
			<when output="ậ" state="belowdot_circumflex"/>
			<when output="ă" state="breve"/>
			<when output="ằ" state="breve_grave"/>
			<when output="ẳ" state="breve_hook"/>
			<when output="ẵ" state="breve_tilde"/>
			<when output="ǎ" state="caron"/>
			<when output="â" state="circumflex"/>
			<when output="ầ" state="circumflex_grave"/>
			<when output="ẩ" state="circumflex_hook"/>
			<when output="ẫ" state="circumflex_tilde"/>
			<when output="؋" state="currency"/>
			<when output="ä" state="diaeresis"/>
			<when output="ǟ" state="diaeresis_macron"/>
			<when output="ȁ" state="doublegrave"/>
			<when output="à" state="grave"/>
			<when output="α" state="greek"/>
			<when output="ᾱ" state="greek_macron"/>
			<when output="ả" state="hook"/>
			<when output="ȃ" state="invertedbreve"/>
			<when output="ā" state="macron"/>
			<when output="ą" state="ogonek"/>
			<when output="ᶏ" state="retroflexhook"/>
			<when output="ẚ" state="righthalfring"/>
			<when output="å" state="ringabove"/>
			<when output="ḁ" state="ringbelow"/>
			<when output="ⱥ" state="stroke"/>
			<when output="ã" state="tilde"/>
		</action>
		<action id="abovedot">
			<when next="abovedot" state="none"/>
			<when next="Multi_key_macron_dead_abovedot" state="Multi_key_macron"/>
			<when next="Multi_key_underscore_dead_abovedot" state="Multi_key_underscore"/>
			<when output="˙" state="abovedot"/>
			<when next="abovedot_acute" state="acute"/>
			<when next="abovedot_belowdot" state="belowdot"/>
			<when next="abovedot_caron" state="caron"/>
			<when next="abovedot_macron" state="macron"/>
			<when next="abovedot_stroke" state="stroke"/>
		</action>
		<action id="acute">
			<when next="acute" state="none"/>
			<when next="Multi_key_Greek_iota_dead_acute" state="Multi_key_Greek_iota"/>
			<when output="῎" state="Multi_key_U1FBF"/>
			<when output="῞" state="Multi_key_U1FFE"/>
			<when output="΅" state="Multi_key_diaeresis"/>
			<when next="Multi_key_period_dead_acute" state="Multi_key_period"/>
			<when output="̈́" state="Multi_key_quotedbl"/>
			<when next="abovedot_acute" state="abovedot"/>
			<when output="´" state="acute"/>
			<when next="acute_breve" state="breve"/>
			<when next="acute_cedilla" state="cedilla"/>
			<when next="acute_circumflex" state="circumflex"/>
			<when next="acute_diaeresis" state="diaeresis"/>
			<when next="acute_horn" state="horn"/>
			<when next="acute_macron" state="macron"/>
			<when next="acute_ringabove" state="ringabove"/>
			<when next="acute_stroke" state="stroke"/>
			<when next="acute_tilde" state="tilde"/>
		</action>
		<action id="b">
			<when output="b" state="none"/>
			<when next="Multi_key_b" state="Multi_key"/>
			<when next="Multi_key_acute_b" state="Multi_key_acute"/>
			<when next="Multi_key_apostrophe_b" state="Multi_key_apostrophe"/>
			<when next="Multi_key_asciitilde_b" state="Multi_key_asciitilde"/>
			<when output="ḅ" state="Multi_key_exclam"/>
			<when next="Multi_key_grave_b" state="Multi_key_grave"/>
			<when output="♭" state="Multi_key_numbersign"/>
			<when next="Multi_key_parenleft_b" state="Multi_key_parenleft"/>
			<when output="ḃ" state="Multi_key_period"/>
			<when next="Multi_key_question_b" state="Multi_key_question"/>
			<when output="ƀ" state="Multi_key_slash"/>
			<when output="ḃ" state="abovedot"/>
			<when output="ḅ" state="belowdot"/>
			<when output="฿" state="currency"/>
			<when output="β" state="greek"/>
			<when output="ɓ" state="hook"/>
			<when output="ḇ" state="linebelow"/>
			<when output="ᵬ" state="middletilde"/>
			<when output="ᶀ" state="palatalhook"/>
			<when output="ƀ" state="stroke"/>
			<when output="ƃ" state="topbar"/>
		</action>
		<action id="bar">
			<when next="bar" state="none"/>
			<when output="-" state="bar"/>
		</action>
		<action id="belowdot">
			<when next="belowdot" state="none"/>
			<when next="Multi_key_U_dead_belowdot" state="Multi_key_U"/>
			<when next="Multi_key_asciicircum_dead_belowdot" state="Multi_key_asciicircum"/>
			<when next="Multi_key_b_dead_belowdot" state="Multi_key_b"/>
			<when next="Multi_key_macron_dead_belowdot" state="Multi_key_macron"/>
			<when next="Multi_key_period_dead_belowdot" state="Multi_key_period"/>
			<when next="Multi_key_underscore_dead_belowdot" state="Multi_key_underscore"/>
			<when next="abovedot_belowdot" state="abovedot"/>
			<when output="̣" state="belowdot"/>
			<when next="belowdot_breve" state="breve"/>
			<when next="belowdot_circumflex" state="circumflex"/>
			<when next="belowdot_horn" state="horn"/>
			<when next="belowdot_macron" state="macron"/>
		</action>
		<action id="belt">
			<when next="belt" state="none"/>
			<when output="?" state="belt"/>
		</action>
		<action id="breve">
			<when next="breve" state="none"/>
			<when next="Multi_key_acute_dead_breve" state="Multi_key_acute"/>
			<when next="Multi_key_apostrophe_dead_breve" state="Multi_key_apostrophe"/>
			<when next="Multi_key_asciitilde_dead_breve" state="Multi_key_asciitilde"/>
			<when next="Multi_key_grave_dead_breve" state="Multi_key_grave"/>
			<when next="Multi_key_question_dead_breve" state="Multi_key_question"/>
			<when next="acute_breve" state="acute"/>
			<when next="belowdot_breve" state="belowdot"/>
			<when output="˘" state="breve"/>
			<when next="breve_cedilla" state="cedilla"/>
			<when next="breve_grave" state="grave"/>
			<when next="breve_hook" state="hook"/>
			<when next="breve_tilde" state="tilde"/>
		</action>
		<action id="brevebelow">
			<when next="brevebelow" state="none"/>
			<when output="?" state="brevebelow"/>
		</action>
		<action id="c">
			<when output="c" state="none"/>
			<when next="Multi_key_c" state="Multi_key"/>
			<when output="©" state="Multi_key_O"/>
			<when output="ć" state="Multi_key_acute"/>
			<when output="ḉ" state="Multi_key_acute_comma"/>
			<when output="ḉ" state="Multi_key_acute_dead_cedilla"/>
			<when output="ć" state="Multi_key_apostrophe"/>
			<when output="ḉ" state="Multi_key_apostrophe_dead_cedilla"/>
			<when output="ĉ" state="Multi_key_asciicircum"/>
			<when output="¢" state="Multi_key_bar"/>
			<when output="č" state="Multi_key_c"/>
			<when output="ç" state="Multi_key_comma"/>
			<when output="€" state="Multi_key_equal"/>
			<when output="©" state="Multi_key_o"/>
			<when next="Multi_key_parenleft_c" state="Multi_key_parenleft"/>
			<when output="ċ" state="Multi_key_period"/>
			<when output="¢" state="Multi_key_slash"/>
			<when output="ċ" state="abovedot"/>
			<when output="ć" state="acute"/>
			<when output="ḉ" state="acute_cedilla"/>
			<when output="č" state="caron"/>
			<when output="ç" state="cedilla"/>
			<when output="₵" state="cedilla_currency"/>
			<when output="ĉ" state="circumflex"/>
			<when output="ɕ" state="curl"/>
			<when output="¢" state="currency"/>
			<when output="ƈ" state="hook"/>
			<when output="ȼ" state="stroke"/>
		</action>
		<action id="caron">
			<when next="caron" state="none"/>
			<when next="Multi_key_period_dead_caron" state="Multi_key_period"/>
			<when next="abovedot_caron" state="abovedot"/>
			<when output="ˇ" state="caron"/>
			<when next="caron_diaeresis" state="diaeresis"/>
		</action>
		<action id="cedilla">
			<when next="cedilla" state="none"/>
			<when next="Multi_key_U_dead_cedilla" state="Multi_key_U"/>
			<when next="Multi_key_acute_dead_cedilla" state="Multi_key_acute"/>
			<when next="Multi_key_apostrophe_dead_cedilla" state="Multi_key_apostrophe"/>
			<when next="Multi_key_b_dead_cedilla" state="Multi_key_b"/>
			<when next="acute_cedilla" state="acute"/>
			<when next="breve_cedilla" state="breve"/>
			<when output="¸" state="cedilla"/>
			<when next="cedilla_currency" state="currency"/>
		</action>
		<action id="circumflex">
			<when next="circumflex" state="none"/>
			<when next="Multi_key_acute_dead_circumflex" state="Multi_key_acute"/>
			<when next="Multi_key_apostrophe_dead_circumflex" state="Multi_key_apostrophe"/>
			<when next="Multi_key_asciitilde_dead_circumflex" state="Multi_key_asciitilde"/>
			<when next="Multi_key_grave_dead_circumflex" state="Multi_key_grave"/>
			<when next="Multi_key_question_dead_circumflex" state="Multi_key_question"/>
			<when next="acute_circumflex" state="acute"/>
			<when next="belowdot_circumflex" state="belowdot"/>
			<when output="^" state="circumflex"/>
			<when next="circumflex_grave" state="grave"/>
			<when next="circumflex_hook" state="hook"/>
			<when next="circumflex_tilde" state="tilde"/>
		</action>
		<action id="circumflexbelow">
			<when next="circumflexbelow" state="none"/>
			<when output="̭" state="circumflexbelow"/>
		</action>
		<action id="comma">
			<when next="comma" state="none"/>
			<when output="?" state="comma"/>
		</action>
		<action id="commabelow">
			<when next="commabelow" state="none"/>
			<when output="," state="commabelow"/>
		</action>
		<action id="crossedtail">
			<when next="crossedtail" state="none"/>
			<when output="?" state="crossedtail"/>
		</action>
		<action id="curl">
			<when next="curl" state="none"/>
			<when output="?" state="curl"/>
		</action>
		<action id="currency">
			<when next="currency" state="none"/>
			<when next="cedilla_currency" state="cedilla"/>
			<when output="¤" state="currency"/>
		</action>
		<action id="d">
			<when output="d" state="none"/>
			<when next="Multi_key_d" state="Multi_key"/>
			<when output="ď" state="Multi_key_c"/>
			<when output="ḑ" state="Multi_key_comma"/>
			<when output="ḍ" state="Multi_key_exclam"/>
			<when output="đ" state="Multi_key_minus"/>
			<when next="Multi_key_parenleft_d" state="Multi_key_parenleft"/>
			<when output="ḋ" state="Multi_key_period"/>
			<when output="đ" state="Multi_key_slash"/>
			<when output="ḋ" state="abovedot"/>
			<when output="ḍ" state="belowdot"/>
			<when output="ď" state="caron"/>
			<when output="ḑ" state="cedilla"/>
			<when output="ḓ" state="circumflexbelow"/>
			<when output="ȡ" state="curl"/>
			<when output="₫" state="currency"/>
			<when output="δ" state="greek"/>
			<when output="ɗ" state="hook"/>
			<when output="ᶑ" state="hook_tail"/>
			<when output="ḏ" state="linebelow"/>
			<when output="ᵭ" state="middletilde"/>
			<when output="ᶁ" state="palatalhook"/>
			<when output="đ" state="stroke"/>
			<when output="ɖ" state="tail"/>
			<when output="ƌ" state="topbar"/>
		</action>
		<action id="dasia">
			<when output="dasia" state="none"/>
			<when next="Multi_key_Greek_iota_dead_dasia" state="Multi_key_Greek_iota"/>
			<when next="Multi_key_Greek_iota_U0342_dead_dasia" state="Multi_key_Greek_iota_U0342"/>
			<when next="Multi_key_Greek_iota_acute_dead_dasia" state="Multi_key_Greek_iota_acute"/>
			<when next="Multi_key_Greek_iota_apostrophe_dead_dasia" state="Multi_key_Greek_iota_apostrophe"/>
			<when next="Multi_key_Greek_iota_asciitilde_dead_dasia" state="Multi_key_Greek_iota_asciitilde"/>
			<when next="Multi_key_Greek_iota_combining_acute_dead_dasia" state="Multi_key_Greek_iota_combining_acute"/>
			<when next="Multi_key_Greek_iota_combining_grave_dead_dasia" state="Multi_key_Greek_iota_combining_grave"/>
			<when next="Multi_key_Greek_iota_dead_acute_dead_dasia" state="Multi_key_Greek_iota_dead_acute"/>
			<when next="Multi_key_Greek_iota_dead_grave_dead_dasia" state="Multi_key_Greek_iota_dead_grave"/>
			<when next="Multi_key_Greek_iota_dead_tilde_dead_dasia" state="Multi_key_Greek_iota_dead_tilde"/>
			<when next="Multi_key_Greek_iota_grave_dead_dasia" state="Multi_key_Greek_iota_grave"/>
			<when next="Multi_key_acute_dead_dasia" state="Multi_key_acute"/>
			<when next="Multi_key_apostrophe_dead_dasia" state="Multi_key_apostrophe"/>
			<when next="Multi_key_asciitilde_dead_dasia" state="Multi_key_asciitilde"/>
			<when next="Multi_key_grave_dead_dasia" state="Multi_key_grave"/>
		</action>
		<action id="descender">
			<when next="descender" state="none"/>
			<when output="?" state="descender"/>
		</action>
		<action id="diaeresis">
			<when next="diaeresis" state="none"/>
			<when next="Multi_key_acute_dead_diaeresis" state="Multi_key_acute"/>
			<when next="Multi_key_apostrophe_dead_diaeresis" state="Multi_key_apostrophe"/>
			<when next="Multi_key_asciitilde_dead_diaeresis" state="Multi_key_asciitilde"/>
			<when next="Multi_key_c_dead_diaeresis" state="Multi_key_c"/>
			<when next="Multi_key_grave_dead_diaeresis" state="Multi_key_grave"/>
			<when next="Multi_key_macron_dead_diaeresis" state="Multi_key_macron"/>
			<when next="Multi_key_underscore_dead_diaeresis" state="Multi_key_underscore"/>
			<when next="acute_diaeresis" state="acute"/>
			<when next="caron_diaeresis" state="caron"/>
			<when output="¨" state="diaeresis"/>
			<when next="diaeresis_grave" state="grave"/>
			<when next="diaeresis_macron" state="macron"/>
			<when next="diaeresis_tilde" state="tilde"/>
		</action>
		<action id="diaeresisbelow">
			<when next="diaeresisbelow" state="none"/>
			<when output="̤" state="diaeresisbelow"/>
		</action>
		<action id="diagonalstroke">
			<when next="diagonalstroke" state="none"/>
			<when output="?" state="diagonalstroke"/>
			<when next="diagonalstroke_stroke" state="stroke"/>
		</action>
		<action id="dot">
			<when next="dot" state="none"/>
			<when output="?" state="dot"/>
		</action>
		<action id="doubleacute">
			<when next="doubleacute" state="none"/>
			<when output="˝" state="doubleacute"/>
		</action>
		<action id="doublebar">
			<when next="doublebar" state="none"/>
			<when output="?" state="doublebar"/>
		</action>
		<action id="doublegrave">
			<when next="doublegrave" state="none"/>
			<when output="?" state="doublegrave"/>
		</action>
		<action id="e">
			<when output="e" state="none"/>
			<when next="Multi_key_e" state="Multi_key"/>
			<when output="ĕ" state="Multi_key_U"/>
			<when output="ḝ" state="Multi_key_U_comma"/>
			<when output="ḝ" state="Multi_key_U_dead_cedilla"/>
			<when output="æ" state="Multi_key_a"/>
			<when output="é" state="Multi_key_acute"/>
			<when output="ế" state="Multi_key_acute_asciicircum"/>
			<when output="ế" state="Multi_key_acute_dead_circumflex"/>
			<when output="ḗ" state="Multi_key_acute_dead_macron"/>
			<when output="ḗ" state="Multi_key_acute_macron"/>
			<when output="ḗ" state="Multi_key_acute_underscore"/>
			<when output="é" state="Multi_key_apostrophe"/>
			<when output="ế" state="Multi_key_apostrophe_asciicircum"/>
			<when output="ế" state="Multi_key_apostrophe_dead_circumflex"/>
			<when output="ḗ" state="Multi_key_apostrophe_dead_macron"/>
			<when output="ḗ" state="Multi_key_apostrophe_macron"/>
			<when output="ḗ" state="Multi_key_apostrophe_underscore"/>
			<when output="ê" state="Multi_key_asciicircum"/>
			<when output="ệ" state="Multi_key_asciicircum_combining_belowdot"/>
			<when output="ệ" state="Multi_key_asciicircum_dead_belowdot"/>
			<when output="ệ" state="Multi_key_asciicircum_exclam"/>
			<when output="ẽ" state="Multi_key_asciitilde"/>
			<when output="ễ" state="Multi_key_asciitilde_asciicircum"/>
			<when output="ễ" state="Multi_key_asciitilde_dead_circumflex"/>
			<when output="ĕ" state="Multi_key_b"/>
			<when output="ḝ" state="Multi_key_b_comma"/>
			<when output="ḝ" state="Multi_key_b_dead_cedilla"/>
			<when output="ě" state="Multi_key_c"/>
			<when output="ȩ" state="Multi_key_comma"/>
			<when output="ə" state="Multi_key_e"/>
			<when output="€" state="Multi_key_equal"/>
			<when output="ẹ" state="Multi_key_exclam"/>
			<when output="è" state="Multi_key_grave"/>
			<when output="ề" state="Multi_key_grave_asciicircum"/>
			<when output="ề" state="Multi_key_grave_dead_circumflex"/>
			<when output="ḕ" state="Multi_key_grave_dead_macron"/>
			<when output="ḕ" state="Multi_key_grave_macron"/>
			<when output="ḕ" state="Multi_key_grave_underscore"/>
			<when output="ē" state="Multi_key_macron"/>
			<when output="œ" state="Multi_key_o"/>
			<when next="Multi_key_parenleft_e" state="Multi_key_parenleft"/>
			<when output="ė" state="Multi_key_period"/>
			<when output="ẻ" state="Multi_key_question"/>
			<when output="ể" state="Multi_key_question_asciicircum"/>
			<when output="ể" state="Multi_key_question_dead_circumflex"/>
			<when output="ë" state="Multi_key_quotedbl"/>
			<when output="ę" state="Multi_key_semicolon"/>
			<when output="ē" state="Multi_key_underscore"/>
			<when output="ė" state="abovedot"/>
			<when output="é" state="acute"/>
			<when output="ế" state="acute_circumflex"/>
			<when output="ḗ" state="acute_macron"/>
			<when output="ẹ" state="belowdot"/>
			<when output="ệ" state="belowdot_circumflex"/>
			<when output="ĕ" state="breve"/>
			<when output="ḝ" state="breve_cedilla"/>
			<when output="ě" state="caron"/>
			<when output="ȩ" state="cedilla"/>
			<when output="ê" state="circumflex"/>
			<when output="ề" state="circumflex_grave"/>
			<when output="ể" state="circumflex_hook"/>
			<when output="ễ" state="circumflex_tilde"/>
			<when output="ḙ" state="circumflexbelow"/>
			<when output="€" state="currency"/>
			<when output="ë" state="diaeresis"/>
			<when output="ȅ" state="doublegrave"/>
			<when output="è" state="grave"/>
			<when output="ḕ" state="grave_macron"/>
			<when output="ε" state="greek"/>
			<when output="ẻ" state="hook"/>
			<when output="ȇ" state="invertedbreve"/>
			<when output="ē" state="macron"/>
			<when output="ⱸ" state="notch"/>
			<when output="ę" state="ogonek"/>
			<when output="ᶒ" state="retroflexhook"/>
			<when output="ɇ" state="stroke"/>
			<when output="ẽ" state="tilde"/>
			<when output="ḛ" state="tildebelow"/>
		</action>
		<action id="f">
			<when output="f" state="none"/>
			<when next="Multi_key_f" state="Multi_key"/>
			<when output="♮" state="Multi_key_numbersign"/>
			<when next="Multi_key_parenleft_f" state="Multi_key_parenleft"/>
			<when output="ḟ" state="Multi_key_period"/>
			<when output="ḟ" state="abovedot"/>
			<when output="ƒ" state="currency"/>
			<when output="φ" state="greek"/>
			<when output="ƒ" state="hook"/>
			<when output="ᵮ" state="middletilde"/>
			<when output="ᶂ" state="palatalhook"/>
		</action>
		<action id="fishhook">
			<when next="fishhook" state="none"/>
			<when output="?" state="fishhook"/>
			<when next="fishhook_middletilde" state="middletilde"/>
			<when next="fishhook_tail" state="tail"/>
		</action>
		<action id="flourish">
			<when next="flourish" state="none"/>
			<when output="?" state="flourish"/>
		</action>
		<action id="g">
			<when output="g" state="none"/>
			<when output="ğ" state="Multi_key_U"/>
			<when output="ǵ" state="Multi_key_acute"/>
			<when output="ǵ" state="Multi_key_apostrophe"/>
			<when output="ĝ" state="Multi_key_asciicircum"/>
			<when output="ğ" state="Multi_key_b"/>
			<when output="ǧ" state="Multi_key_c"/>
			<when output="ģ" state="Multi_key_comma"/>
			<when output="ḡ" state="Multi_key_macron"/>
			<when output="ŋ" state="Multi_key_n"/>
			<when next="Multi_key_parenleft_g" state="Multi_key_parenleft"/>
			<when output="ġ" state="Multi_key_period"/>
			<when output="ǥ" state="Multi_key_slash"/>
			<when output="ḡ" state="Multi_key_underscore"/>
			<when output="ġ" state="abovedot"/>
			<when output="ǵ" state="acute"/>
			<when output="ğ" state="breve"/>
			<when output="ǧ" state="caron"/>
			<when output="ģ" state="cedilla"/>
			<when output="ĝ" state="circumflex"/>
			<when output="₲" state="currency"/>
			<when output="γ" state="greek"/>
			<when output="ɠ" state="hook"/>
			<when output="ḡ" state="macron"/>
			<when output="ᶃ" state="palatalhook"/>
			<when output="ǥ" state="stroke"/>
		</action>
		<action id="grave">
			<when next="grave" state="none"/>
			<when next="Multi_key_Greek_iota_dead_grave" state="Multi_key_Greek_iota"/>
			<when output="῍" state="Multi_key_U1FBF"/>
			<when output="῝" state="Multi_key_U1FFE"/>
			<when output="῭" state="Multi_key_diaeresis"/>
			<when next="breve_grave" state="breve"/>
			<when next="circumflex_grave" state="circumflex"/>
			<when next="diaeresis_grave" state="diaeresis"/>
			<when output="`" state="grave"/>
			<when next="grave_horn" state="horn"/>
			<when next="grave_macron" state="macron"/>
		</action>
		<action id="greek">
			<when next="greek" state="none"/>
			<when output="µ" state="greek"/>
			<when next="greek_hook" state="hook"/>
			<when next="greek_macron" state="macron"/>
			<when next="greek_stroke" state="stroke"/>
		</action>
		<action id="h">
			<when output="h" state="none"/>
			<when output="ĥ" state="Multi_key_asciicircum"/>
			<when output="ʰ" state="Multi_key_asciicircum_underscore"/>
			<when output="ȟ" state="Multi_key_c"/>
			<when output="ḩ" state="Multi_key_comma"/>
			<when output="ð" state="Multi_key_d"/>
			<when output="ḥ" state="Multi_key_exclam"/>
			<when next="Multi_key_parenleft_h" state="Multi_key_parenleft"/>
			<when output="ḣ" state="Multi_key_period"/>
			<when output="ḧ" state="Multi_key_quotedbl"/>
			<when output="ħ" state="Multi_key_slash"/>
			<when output="þ" state="Multi_key_t"/>
			<when output="ḣ" state="abovedot"/>
			<when output="ḥ" state="belowdot"/>
			<when output="ḫ" state="brevebelow"/>
			<when output="ȟ" state="caron"/>
			<when output="ḩ" state="cedilla"/>
			<when output="ĥ" state="circumflex"/>
			<when output="₴" state="currency"/>
			<when output="ⱨ" state="descender"/>
			<when output="ḧ" state="diaeresis"/>
			<when output="η" state="greek"/>
			<when output="ɦ" state="hook"/>
			<when output="ẖ" state="linebelow"/>
			<when output="ħ" state="stroke"/>
		</action>
		<action id="highstroke">
			<when next="highstroke" state="none"/>
			<when output="?" state="highstroke"/>
		</action>
		<action id="hook">
			<when next="hook" state="none"/>
			<when next="breve_hook" state="breve"/>
			<when next="circumflex_hook" state="circumflex"/>
			<when next="greek_hook" state="greek"/>
			<when output="̉" state="hook"/>
			<when next="hook_horn" state="horn"/>
			<when next="hook_tail" state="tail"/>
		</action>
		<action id="hooktail">
			<when next="hooktail" state="none"/>
			<when output="?" state="hooktail"/>
		</action>
		<action id="horizontalbar">
			<when next="horizontalbar" state="none"/>
			<when output="?" state="horizontalbar"/>
		</action>
		<action id="horn">
			<when next="horn" state="none"/>
			<when next="Multi_key_acute_dead_horn" state="Multi_key_acute"/>
			<when next="Multi_key_apostrophe_dead_horn" state="Multi_key_apostrophe"/>
			<when next="Multi_key_asciitilde_dead_horn" state="Multi_key_asciitilde"/>
			<when next="Multi_key_exclam_dead_horn" state="Multi_key_exclam"/>
			<when next="Multi_key_grave_dead_horn" state="Multi_key_grave"/>
			<when next="Multi_key_question_dead_horn" state="Multi_key_question"/>
			<when next="acute_horn" state="acute"/>
			<when next="belowdot_horn" state="belowdot"/>
			<when next="grave_horn" state="grave"/>
			<when next="hook_horn" state="hook"/>
			<when output="̛" state="horn"/>
			<when next="horn_tilde" state="tilde"/>
		</action>
		<action id="i">
			<when output="i" state="none"/>
			<when next="Multi_key_i" state="Multi_key"/>
			<when output="ĭ" state="Multi_key_U"/>
			<when output="í" state="Multi_key_acute"/>
			<when output="ḯ" state="Multi_key_acute_dead_diaeresis"/>
			<when output="ḯ" state="Multi_key_acute_quotedbl"/>
			<when output="í" state="Multi_key_apostrophe"/>
			<when output="ḯ" state="Multi_key_apostrophe_dead_diaeresis"/>
			<when output="ḯ" state="Multi_key_apostrophe_quotedbl"/>
			<when output="î" state="Multi_key_asciicircum"/>
			<when output="ⁱ" state="Multi_key_asciicircum_underscore"/>
			<when output="ĩ" state="Multi_key_asciitilde"/>
			<when output="ĭ" state="Multi_key_b"/>
			<when output="ǐ" state="Multi_key_c"/>
			<when output="ị" state="Multi_key_exclam"/>
			<when output="ì" state="Multi_key_grave"/>
			<when output="ī" state="Multi_key_macron"/>
			<when next="Multi_key_parenleft_i" state="Multi_key_parenleft"/>
			<when output="ỉ" state="Multi_key_question"/>
			<when output="ï" state="Multi_key_quotedbl"/>
			<when output="į" state="Multi_key_semicolon"/>
			<when output="ɨ" state="Multi_key_slash"/>
			<when output="ī" state="Multi_key_underscore"/>
			<when output="ı" state="abovedot"/>
			<when output="í" state="acute"/>
			<when output="ḯ" state="acute_diaeresis"/>
			<when output="ị" state="belowdot"/>
			<when output="ĭ" state="breve"/>
			<when output="ǐ" state="caron"/>
			<when output="î" state="circumflex"/>
			<when output="﷼" state="currency"/>
			<when output="ï" state="diaeresis"/>
			<when output="ȉ" state="doublegrave"/>
			<when output="ì" state="grave"/>
			<when output="ι" state="greek"/>
			<when output="ῑ" state="greek_macron"/>
			<when output="ỉ" state="hook"/>
			<when output="ȋ" state="invertedbreve"/>
			<when output="ī" state="macron"/>
			<when output="į" state="ogonek"/>
			<when output="ᶖ" state="retroflexhook"/>
			<when output="ɨ" state="stroke"/>
			<when output="ĩ" state="tilde"/>
			<when output="ḭ" state="tildebelow"/>
		</action>
		<action id="invertedbreve">
			<when next="invertedbreve" state="none"/>
			<when output="̑" state="invertedbreve"/>
		</action>
		<action id="j">
			<when output="j" state="none"/>
			<when output="ĵ" state="Multi_key_asciicircum"/>
			<when output="ʲ" state="Multi_key_asciicircum_underscore"/>
			<when output="ǰ" state="Multi_key_c"/>
			<when next="Multi_key_parenleft_j" state="Multi_key_parenleft"/>
			<when output="ȷ" state="abovedot"/>
			<when output="ʄ" state="abovedot_hook_stroke"/>
			<when output="ɟ" state="abovedot_stroke"/>
			<when output="ǰ" state="caron"/>
			<when output="ĵ" state="circumflex"/>
			<when output="ʝ" state="crossedtail"/>
			<when output="θ" state="greek"/>
			<when output="ɉ" state="stroke"/>
		</action>
		<action id="k">
			<when output="k" state="none"/>
			<when next="Multi_key_k" state="Multi_key"/>
			<when output="ḱ" state="Multi_key_acute"/>
			<when output="ḱ" state="Multi_key_apostrophe"/>
			<when output="ǩ" state="Multi_key_c"/>
			<when output="ķ" state="Multi_key_comma"/>
			<when output="ḳ" state="Multi_key_exclam"/>
			<when output="ĸ" state="Multi_key_k"/>
			<when next="Multi_key_parenleft_k" state="Multi_key_parenleft"/>
			<when output="ḱ" state="acute"/>
			<when output="ḳ" state="belowdot"/>
			<when output="ǩ" state="caron"/>
			<when output="ķ" state="cedilla"/>
			<when output="₭" state="currency"/>
			<when output="ⱪ" state="descender"/>
			<when output="ꝃ" state="diagonalstroke"/>
			<when output="ꝅ" state="diagonalstroke_stroke"/>
			<when output="κ" state="greek"/>
			<when output="ƙ" state="hook"/>
			<when output="ḵ" state="linebelow"/>
			<when output="ᶄ" state="palatalhook"/>
			<when output="ꝁ" state="stroke"/>
		</action>
		<action id="l">
			<when output="l" state="none"/>
			<when next="Multi_key_l" state="Multi_key"/>
			<when output="ĺ" state="Multi_key_acute"/>
			<when output="ĺ" state="Multi_key_apostrophe"/>
			<when output="ˡ" state="Multi_key_asciicircum_underscore"/>
			<when output="ľ" state="Multi_key_c"/>
			<when output="ļ" state="Multi_key_comma"/>
			<when output="ḷ" state="Multi_key_exclam"/>
			<when output="ḹ" state="Multi_key_macron_combining_belowdot"/>
			<when output="ḹ" state="Multi_key_macron_dead_belowdot"/>
			<when output="ḹ" state="Multi_key_macron_exclam"/>
			<when next="Multi_key_parenleft_l" state="Multi_key_parenleft"/>
			<when output="ł" state="Multi_key_slash"/>
			<when output="ḹ" state="Multi_key_underscore_combining_belowdot"/>
			<when output="ḹ" state="Multi_key_underscore_dead_belowdot"/>
			<when output="ḹ" state="Multi_key_underscore_exclam"/>
			<when output="|" state="Multi_key_v"/>
			<when output="ŀ" state="abovedot"/>
			<when output="ĺ" state="acute"/>
			<when output="ƚ" state="bar"/>
			<when output="ḷ" state="belowdot"/>
			<when output="ḹ" state="belowdot_macron"/>
			<when output="ɬ" state="belt"/>
			<when output="ľ" state="caron"/>
			<when output="ļ" state="cedilla"/>
			<when output="ḽ" state="circumflexbelow"/>
			<when output="ȴ" state="curl"/>
			<when output="£" state="currency"/>
			<when output="ⱡ" state="doublebar"/>
			<when output="λ" state="greek"/>
			<when output="ꝉ" state="highstroke"/>
			<when output="ḻ" state="linebelow"/>
			<when output="ɫ" state="middletilde"/>
			<when output="ᶅ" state="palatalhook"/>
			<when output="ɭ" state="retroflexhook"/>
			<when output="ł" state="stroke"/>
		</action>
		<action id="linebelow">
			<when next="linebelow" state="none"/>
			<when output="_" state="linebelow"/>
		</action>
		<action id="longleg">
			<when next="longleg" state="none"/>
			<when output="?" state="longleg"/>
		</action>
		<action id="longrightleg">
			<when next="longrightleg" state="none"/>
			<when output="?" state="longrightleg"/>
		</action>
		<action id="longstrokeoverlay">
			<when next="longstrokeoverlay" state="none"/>
			<when output="?" state="longstrokeoverlay"/>
		</action>
		<action id="loop">
			<when next="loop" state="none"/>
			<when output="?" state="loop"/>
		</action>
		<action id="lowringinside">
			<when next="lowringinside" state="none"/>
			<when output="?" state="lowringinside"/>
		</action>
		<action id="m">
			<when output="m" state="none"/>
			<when next="Multi_key_m" state="Multi_key"/>
			<when output="℠" state="Multi_key_S"/>
			<when output="™" state="Multi_key_T"/>
			<when output="ḿ" state="Multi_key_acute"/>
			<when output="ḿ" state="Multi_key_apostrophe"/>
			<when output="ṃ" state="Multi_key_exclam"/>
			<when next="Multi_key_parenleft_m" state="Multi_key_parenleft"/>
			<when output="ṁ" state="Multi_key_period"/>
			<when output="℠" state="Multi_key_s"/>
			<when output="₥" state="Multi_key_slash"/>
			<when output="™" state="Multi_key_t"/>
			<when output="ṁ" state="abovedot"/>
			<when output="ḿ" state="acute"/>
			<when output="ṃ" state="belowdot"/>
			<when output="₥" state="currency"/>
			<when output="μ" state="greek"/>
			<when output="ɱ" state="hook"/>
			<when output="ᵯ" state="middletilde"/>
			<when output="ᶆ" state="palatalhook"/>
		</action>
		<action id="macron">
			<when next="macron" state="none"/>
			<when next="Multi_key_acute_dead_macron" state="Multi_key_acute"/>
			<when next="Multi_key_apostrophe_dead_macron" state="Multi_key_apostrophe"/>
			<when next="Multi_key_grave_dead_macron" state="Multi_key_grave"/>
			<when next="Multi_key_quotedbl_dead_macron" state="Multi_key_quotedbl"/>
			<when next="abovedot_macron" state="abovedot"/>
			<when next="acute_macron" state="acute"/>
			<when next="belowdot_macron" state="belowdot"/>
			<when next="diaeresis_macron" state="diaeresis"/>
			<when next="grave_macron" state="grave"/>
			<when next="greek_macron" state="greek"/>
			<when output="¯" state="macron"/>
			<when next="macron_ogonek" state="ogonek"/>
			<when next="macron_tilde" state="tilde"/>
		</action>
		<action id="middletilde">
			<when next="middletilde" state="none"/>
			<when next="fishhook_middletilde" state="fishhook"/>
			<when output="?" state="middletilde"/>
		</action>
		<action id="n">
			<when output="n" state="none"/>
			<when next="Multi_key_n" state="Multi_key"/>
			<when output="ń" state="Multi_key_acute"/>
			<when output="ń" state="Multi_key_apostrophe"/>
			<when output="ⁿ" state="Multi_key_asciicircum_underscore"/>
			<when output="ñ" state="Multi_key_asciitilde"/>
			<when output="ň" state="Multi_key_c"/>
			<when output="ņ" state="Multi_key_comma"/>
			<when output="ṇ" state="Multi_key_exclam"/>
			<when output="ǹ" state="Multi_key_grave"/>
			<when next="Multi_key_parenleft_n" state="Multi_key_parenleft"/>
			<when output="ṅ" state="Multi_key_period"/>
			<when output="ṅ" state="abovedot"/>
			<when output="ń" state="acute"/>
			<when output="ṇ" state="belowdot"/>
			<when output="ň" state="caron"/>
			<when output="ņ" state="cedilla"/>
			<when output="ṋ" state="circumflexbelow"/>
			<when output="ȵ" state="curl"/>
			<when output="₦" state="currency"/>
			<when output="ǹ" state="grave"/>
			<when output="ν" state="greek"/>
			<when output="ɲ" state="hook"/>
			<when output="ṉ" state="linebelow"/>
			<when output="ƞ" state="longrightleg"/>
			<when output="ᵰ" state="middletilde"/>
			<when output="ᶇ" state="palatalhook"/>
			<when output="ɳ" state="retroflexhook"/>
			<when output="ñ" state="tilde"/>
		</action>
		<action id="notch">
			<when next="notch" state="none"/>
			<when output="?" state="notch"/>
		</action>
		<action id="o">
			<when output="o" state="none"/>
			<when next="Multi_key_o" state="Multi_key"/>
			<when output="№" state="Multi_key_N"/>
			<when output="ŏ" state="Multi_key_U"/>
			<when output="ó" state="Multi_key_acute"/>
			<when output="ố" state="Multi_key_acute_asciicircum"/>
			<when output="ṍ" state="Multi_key_acute_asciitilde"/>
			<when output="ṍ" state="Multi_key_acute_combining_tilde"/>
			<when output="ố" state="Multi_key_acute_dead_circumflex"/>
			<when output="ớ" state="Multi_key_acute_dead_horn"/>
			<when output="ṓ" state="Multi_key_acute_dead_macron"/>
			<when output="ṍ" state="Multi_key_acute_dead_tilde"/>
			<when output="ṓ" state="Multi_key_acute_macron"/>
			<when output="ớ" state="Multi_key_acute_plus"/>
			<when output="ǿ" state="Multi_key_acute_slash"/>
			<when output="ṓ" state="Multi_key_acute_underscore"/>
			<when output="ó" state="Multi_key_apostrophe"/>
			<when output="ố" state="Multi_key_apostrophe_asciicircum"/>
			<when output="ṍ" state="Multi_key_apostrophe_asciitilde"/>
			<when output="ṍ" state="Multi_key_apostrophe_combining_tilde"/>
			<when output="ố" state="Multi_key_apostrophe_dead_circumflex"/>
			<when output="ớ" state="Multi_key_apostrophe_dead_horn"/>
			<when output="ṓ" state="Multi_key_apostrophe_dead_macron"/>
			<when output="ṍ" state="Multi_key_apostrophe_dead_tilde"/>
			<when output="ṓ" state="Multi_key_apostrophe_macron"/>
			<when output="ớ" state="Multi_key_apostrophe_plus"/>
			<when output="ǿ" state="Multi_key_apostrophe_slash"/>
			<when output="ṓ" state="Multi_key_apostrophe_underscore"/>
			<when output="ô" state="Multi_key_asciicircum"/>
			<when output="ộ" state="Multi_key_asciicircum_combining_belowdot"/>
			<when output="ộ" state="Multi_key_asciicircum_dead_belowdot"/>
			<when output="ộ" state="Multi_key_asciicircum_exclam"/>
			<when output="º" state="Multi_key_asciicircum_underscore"/>
			<when output="õ" state="Multi_key_asciitilde"/>
			<when output="ỗ" state="Multi_key_asciitilde_asciicircum"/>
			<when output="ỗ" state="Multi_key_asciitilde_dead_circumflex"/>
			<when output="ỡ" state="Multi_key_asciitilde_dead_horn"/>
			<when output="ỡ" state="Multi_key_asciitilde_plus"/>
			<when output="ŏ" state="Multi_key_b"/>
			<when output="ǒ" state="Multi_key_c"/>
			<when output="ő" state="Multi_key_equal"/>
			<when output="ọ" state="Multi_key_exclam"/>
			<when output="ợ" state="Multi_key_exclam_dead_horn"/>
			<when output="ợ" state="Multi_key_exclam_plus"/>
			<when output="ò" state="Multi_key_grave"/>
			<when output="ồ" state="Multi_key_grave_asciicircum"/>
			<when output="ồ" state="Multi_key_grave_dead_circumflex"/>
			<when output="ờ" state="Multi_key_grave_dead_horn"/>
			<when output="ṑ" state="Multi_key_grave_dead_macron"/>
			<when output="ṑ" state="Multi_key_grave_macron"/>
			<when output="ờ" state="Multi_key_grave_plus"/>
			<when output="ṑ" state="Multi_key_grave_underscore"/>
			<when output="ō" state="Multi_key_macron"/>
			<when output="ȭ" state="Multi_key_macron_asciitilde"/>
			<when output="ȭ" state="Multi_key_macron_combining_tilde"/>
			<when output="ȱ" state="Multi_key_macron_dead_abovedot"/>
			<when output="ȫ" state="Multi_key_macron_dead_diaeresis"/>
			<when output="ǭ" state="Multi_key_macron_dead_ogonek"/>
			<when output="ȭ" state="Multi_key_macron_dead_tilde"/>
			<when output="ȱ" state="Multi_key_macron_period"/>
			<when output="ȫ" state="Multi_key_macron_quotedbl"/>
			<when output="ǭ" state="Multi_key_macron_semicolon"/>
			<when output="°" state="Multi_key_o"/>
			<when next="Multi_key_parenleft_o" state="Multi_key_parenleft"/>
			<when output="‰" state="Multi_key_percent"/>
			<when output="ȯ" state="Multi_key_period"/>
			<when output="ơ" state="Multi_key_plus"/>
			<when output="ỏ" state="Multi_key_question"/>
			<when output="ổ" state="Multi_key_question_asciicircum"/>
			<when output="ổ" state="Multi_key_question_dead_circumflex"/>
			<when output="ở" state="Multi_key_question_dead_horn"/>
			<when output="ở" state="Multi_key_question_plus"/>
			<when output="ö" state="Multi_key_quotedbl"/>
			<when output="ṏ" state="Multi_key_quotedbl_asciitilde"/>
			<when output="ṏ" state="Multi_key_quotedbl_combining_tilde"/>
			<when output="ṏ" state="Multi_key_quotedbl_dead_tilde"/>
			<when output="§" state="Multi_key_s"/>
			<when output="ǫ" state="Multi_key_semicolon"/>
			<when output="ø" state="Multi_key_slash"/>
			<when output="ō" state="Multi_key_underscore"/>
			<when output="ȭ" state="Multi_key_underscore_asciitilde"/>
			<when output="ȭ" state="Multi_key_underscore_combining_tilde"/>
			<when output="ȱ" state="Multi_key_underscore_dead_abovedot"/>
			<when output="ȫ" state="Multi_key_underscore_dead_diaeresis"/>
			<when output="ǭ" state="Multi_key_underscore_dead_ogonek"/>
			<when output="ȭ" state="Multi_key_underscore_dead_tilde"/>
			<when output="ȱ" state="Multi_key_underscore_period"/>
			<when output="ȫ" state="Multi_key_underscore_quotedbl"/>
			<when output="ǭ" state="Multi_key_underscore_semicolon"/>
			<when output="¤" state="Multi_key_x"/>
			<when output="ȯ" state="abovedot"/>
			<when output="ȱ" state="abovedot_macron"/>
			<when output="ó" state="acute"/>
			<when output="ố" state="acute_circumflex"/>
			<when output="ớ" state="acute_horn"/>
			<when output="ṓ" state="acute_macron"/>
			<when output="ǿ" state="acute_stroke"/>
			<when output="ṍ" state="acute_tilde"/>
			<when output="ọ" state="belowdot"/>
			<when output="ộ" state="belowdot_circumflex"/>
			<when output="ợ" state="belowdot_horn"/>
			<when output="ŏ" state="breve"/>
			<when output="ǒ" state="caron"/>
			<when output="ô" state="circumflex"/>
			<when output="ồ" state="circumflex_grave"/>
			<when output="ổ" state="circumflex_hook"/>
			<when output="ỗ" state="circumflex_tilde"/>
			<when output="௹" state="currency"/>
			<when output="ö" state="diaeresis"/>
			<when output="ȫ" state="diaeresis_macron"/>
			<when output="ṏ" state="diaeresis_tilde"/>
			<when output="ő" state="doubleacute"/>
			<when output="ȍ" state="doublegrave"/>
			<when output="ò" state="grave"/>
			<when output="ờ" state="grave_horn"/>
			<when output="ṑ" state="grave_macron"/>
			<when output="ο" state="greek"/>
			<when output="ỏ" state="hook"/>
			<when output="ở" state="hook_horn"/>
			<when output="ơ" state="horn"/>
			<when output="ỡ" state="horn_tilde"/>
			<when output="ȏ" state="invertedbreve"/>
			<when output="ꝋ" state="longstrokeoverlay"/>
			<when output="ꝍ" state="loop"/>
			<when output="ⱺ" state="lowringinside"/>
			<when output="ō" state="macron"/>
			<when output="ǭ" state="macron_ogonek"/>
			<when output="ȭ" state="macron_tilde"/>
			<when output="ǫ" state="ogonek"/>
			<when output="ø" state="stroke"/>
			<when output="õ" state="tilde"/>
		</action>
		<action id="ogonek">
			<when next="ogonek" state="none"/>
			<when next="Multi_key_macron_dead_ogonek" state="Multi_key_macron"/>
			<when next="Multi_key_underscore_dead_ogonek" state="Multi_key_underscore"/>
			<when next="macron_ogonek" state="macron"/>
			<when output="˛" state="ogonek"/>
		</action>
		<action id="p">
			<when output="p" state="none"/>
			<when next="Multi_key_p" state="Multi_key"/>
			<when output="ṕ" state="Multi_key_acute"/>
			<when output="ṕ" state="Multi_key_apostrophe"/>
			<when next="Multi_key_parenleft_p" state="Multi_key_parenleft"/>
			<when output="ṗ" state="Multi_key_period"/>
			<when output="ṗ" state="abovedot"/>
			<when output="ṕ" state="acute"/>
			<when output="₰" state="currency"/>
			<when output="ꝓ" state="flourish"/>
			<when output="π" state="greek"/>
			<when output="ƥ" state="hook"/>
			<when output="ᵱ" state="middletilde"/>
			<when output="ᶈ" state="palatalhook"/>
			<when output="ꝕ" state="squirreltail"/>
			<when output="ᵽ" state="stroke"/>
			<when output="ꝑ" state="strokethroughdescender"/>
		</action>
		<action id="palatalhook">
			<when next="palatalhook" state="none"/>
			<when output="?" state="palatalhook"/>
		</action>
		<action id="psili">
			<when output="psili" state="none"/>
			<when next="Multi_key_Greek_iota_dead_psili" state="Multi_key_Greek_iota"/>
			<when next="Multi_key_Greek_iota_U0342_dead_psili" state="Multi_key_Greek_iota_U0342"/>
			<when next="Multi_key_Greek_iota_acute_dead_psili" state="Multi_key_Greek_iota_acute"/>
			<when next="Multi_key_Greek_iota_apostrophe_dead_psili" state="Multi_key_Greek_iota_apostrophe"/>
			<when next="Multi_key_Greek_iota_asciitilde_dead_psili" state="Multi_key_Greek_iota_asciitilde"/>
			<when next="Multi_key_Greek_iota_combining_acute_dead_psili" state="Multi_key_Greek_iota_combining_acute"/>
			<when next="Multi_key_Greek_iota_combining_grave_dead_psili" state="Multi_key_Greek_iota_combining_grave"/>
			<when next="Multi_key_Greek_iota_dead_acute_dead_psili" state="Multi_key_Greek_iota_dead_acute"/>
			<when next="Multi_key_Greek_iota_dead_grave_dead_psili" state="Multi_key_Greek_iota_dead_grave"/>
			<when next="Multi_key_Greek_iota_dead_tilde_dead_psili" state="Multi_key_Greek_iota_dead_tilde"/>
			<when next="Multi_key_Greek_iota_grave_dead_psili" state="Multi_key_Greek_iota_grave"/>
			<when next="Multi_key_acute_dead_psili" state="Multi_key_acute"/>
			<when next="Multi_key_apostrophe_dead_psili" state="Multi_key_apostrophe"/>
			<when next="Multi_key_asciitilde_dead_psili" state="Multi_key_asciitilde"/>
			<when next="Multi_key_grave_dead_psili" state="Multi_key_grave"/>
		</action>
		<action id="q">
			<when output="q" state="none"/>
			<when next="Multi_key_parenleft_q" state="Multi_key_parenleft"/>
			<when output="ꝙ" state="diagonalstroke"/>
			<when output="χ" state="greek"/>
			<when output="ʠ" state="hook"/>
			<when output="ɋ" state="hooktail"/>
			<when output="ꝗ" state="strokethroughdescender"/>
		</action>
		<action id="r">
			<when output="r" state="none"/>
			<when output="₢" state="Multi_key_C"/>
			<when output="₣" state="Multi_key_F"/>
			<when output="®" state="Multi_key_O"/>
			<when output="ŕ" state="Multi_key_acute"/>
			<when output="ŕ" state="Multi_key_apostrophe"/>
			<when output="ʳ" state="Multi_key_asciicircum_underscore"/>
			<when output="ř" state="Multi_key_c"/>
			<when output="ŗ" state="Multi_key_comma"/>
			<when output="ṛ" state="Multi_key_exclam"/>
			<when output="ṝ" state="Multi_key_macron_combining_belowdot"/>
			<when output="ṝ" state="Multi_key_macron_dead_belowdot"/>
			<when output="ṝ" state="Multi_key_macron_exclam"/>
			<when output="®" state="Multi_key_o"/>
			<when next="Multi_key_parenleft_r" state="Multi_key_parenleft"/>
			<when output="ṙ" state="Multi_key_period"/>
			<when output="ṝ" state="Multi_key_underscore_combining_belowdot"/>
			<when output="ṝ" state="Multi_key_underscore_dead_belowdot"/>
			<when output="ṝ" state="Multi_key_underscore_exclam"/>
			<when output="ṙ" state="abovedot"/>
			<when output="ŕ" state="acute"/>
			<when output="ṛ" state="belowdot"/>
			<when output="ṝ" state="belowdot_macron"/>
			<when output="ř" state="caron"/>
			<when output="ŗ" state="cedilla"/>
			<when output="₢" state="currency"/>
			<when output="ȑ" state="doublegrave"/>
			<when output="ɾ" state="fishhook"/>
			<when output="ᵳ" state="fishhook_middletilde"/>
			<when output="ρ" state="greek"/>
			<when output="ϼ" state="greek_stroke"/>
			<when output="ȓ" state="invertedbreve"/>
			<when output="ṟ" state="linebelow"/>
			<when output="ɼ" state="longleg"/>
			<when output="ᵲ" state="middletilde"/>
			<when output="ᶉ" state="palatalhook"/>
			<when output="ɍ" state="stroke"/>
			<when output="ɽ" state="tail"/>
		</action>
		<action id="retroflexhook">
			<when next="retroflexhook" state="none"/>
			<when output="̢" state="retroflexhook"/>
		</action>
		<action id="righthalfring">
			<when next="righthalfring" state="none"/>
			<when output="ʾ" state="righthalfring"/>
		</action>
		<action id="righthook">
			<when next="righthook" state="none"/>
			<when output="?" state="righthook"/>
		</action>
		<action id="ringabove">
			<when next="ringabove" state="none"/>
			<when next="Multi_key_acute_dead_abovering" state="Multi_key_acute"/>
			<when next="Multi_key_apostrophe_dead_abovering" state="Multi_key_apostrophe"/>
			<when next="acute_ringabove" state="acute"/>
			<when output="°" state="ringabove"/>
		</action>
		<action id="ringbelow">
			<when next="ringbelow" state="none"/>
			<when output="̥" state="ringbelow"/>
		</action>
		<action id="s">
			<when output="s" state="none"/>
			<when next="Multi_key_s" state="Multi_key"/>
			<when output="₨" state="Multi_key_R"/>
			<when output="ś" state="Multi_key_acute"/>
			<when output="ś" state="Multi_key_apostrophe"/>
			<when output="ŝ" state="Multi_key_asciicircum"/>
			<when output="ˢ" state="Multi_key_asciicircum_underscore"/>
			<when output="š" state="Multi_key_c"/>
			<when output="ş" state="Multi_key_comma"/>
			<when output="ṣ" state="Multi_key_exclam"/>
			<when output="ſ" state="Multi_key_f"/>
			<when output="§" state="Multi_key_o"/>
			<when next="Multi_key_parenleft_s" state="Multi_key_parenleft"/>
			<when output="ṡ" state="Multi_key_period"/>
			<when output="ṥ" state="Multi_key_period_acute"/>
			<when output="ṥ" state="Multi_key_period_apostrophe"/>
			<when output="ṥ" state="Multi_key_period_combining_acute"/>
			<when output="ṩ" state="Multi_key_period_combining_belowdot"/>
			<when output="ṥ" state="Multi_key_period_dead_acute"/>
			<when output="ṩ" state="Multi_key_period_dead_belowdot"/>
			<when output="ṧ" state="Multi_key_period_dead_caron"/>
			<when output="ṩ" state="Multi_key_period_exclam"/>
			<when output="ß" state="Multi_key_s"/>
			<when output="ṡ" state="abovedot"/>
			<when output="ṥ" state="abovedot_acute"/>
			<when output="ṩ" state="abovedot_belowdot"/>
			<when output="ṧ" state="abovedot_caron"/>
			<when output="ś" state="acute"/>
			<when output="ṣ" state="belowdot"/>
			<when output="š" state="caron"/>
			<when output="ş" state="cedilla"/>
			<when output="ŝ" state="circumflex"/>
			<when output="ș" state="commabelow"/>
			<when output="₪" state="currency"/>
			<when output="σ" state="greek"/>
			<when output="ʂ" state="hook"/>
			<when output="ᵴ" state="middletilde"/>
			<when output="ᶊ" state="palatalhook"/>
			<when output="ȿ" state="swashtail"/>
		</action>
		<action id="squirreltail">
			<when next="squirreltail" state="none"/>
			<when output="?" state="squirreltail"/>
		</action>
		<action id="stroke">
			<when output="]" state="none"/>
			<when next="abovedot_stroke" state="abovedot"/>
			<when next="acute_stroke" state="acute"/>
			<when next="diagonalstroke_stroke" state="diagonalstroke"/>
			<when next="greek_stroke" state="greek"/>
			<when output="/" state="stroke"/>
		</action>
		<action id="strokethroughdescender">
			<when next="strokethroughdescender" state="none"/>
			<when output="?" state="strokethroughdescender"/>
		</action>
		<action id="swashtail">
			<when next="swashtail" state="none"/>
			<when output="?" state="swashtail"/>
		</action>
		<action id="t">
			<when output="t" state="none"/>
			<when next="Multi_key_t" state="Multi_key"/>
			<when output="₧" state="Multi_key_P"/>
			<when output="ť" state="Multi_key_c"/>
			<when output="ţ" state="Multi_key_comma"/>
			<when output="ṭ" state="Multi_key_exclam"/>
			<when next="Multi_key_parenleft_t" state="Multi_key_parenleft"/>
			<when output="ṫ" state="Multi_key_period"/>
			<when output="ẗ" state="Multi_key_quotedbl"/>
			<when output="ŧ" state="Multi_key_slash"/>
			<when output="ṫ" state="abovedot"/>
			<when output="ṭ" state="belowdot"/>
			<when output="ť" state="caron"/>
			<when output="ţ" state="cedilla"/>
			<when output="ṱ" state="circumflexbelow"/>
			<when output="ț" state="commabelow"/>
			<when output="ȶ" state="curl"/>
			<when output="৳" state="currency"/>
			<when output="ẗ" state="diaeresis"/>
			<when output="ⱦ" state="diagonalstroke"/>
			<when output="τ" state="greek"/>
			<when output="ƭ" state="hook"/>
			<when output="ṯ" state="linebelow"/>
			<when output="ᵵ" state="middletilde"/>
			<when output="ƫ" state="palatalhook"/>
			<when output="ʈ" state="retroflexhook"/>
			<when output="ŧ" state="stroke"/>
		</action>
		<action id="tail">
			<when next="tail" state="none"/>
			<when next="fishhook_tail" state="fishhook"/>
			<when next="hook_tail" state="hook"/>
			<when output="?" state="tail"/>
		</action>
		<action id="tilde">
			<when next="tilde" state="none"/>
			<when next="Multi_key_Greek_iota_dead_tilde" state="Multi_key_Greek_iota"/>
			<when output="῏" state="Multi_key_U1FBF"/>
			<when output="῟" state="Multi_key_U1FFE"/>
			<when next="Multi_key_acute_dead_tilde" state="Multi_key_acute"/>
			<when next="Multi_key_apostrophe_dead_tilde" state="Multi_key_apostrophe"/>
			<when output="῁" state="Multi_key_diaeresis"/>
			<when next="Multi_key_macron_dead_tilde" state="Multi_key_macron"/>
			<when next="Multi_key_quotedbl_dead_tilde" state="Multi_key_quotedbl"/>
			<when next="Multi_key_underscore_dead_tilde" state="Multi_key_underscore"/>
			<when next="acute_tilde" state="acute"/>
			<when next="breve_tilde" state="breve"/>
			<when next="circumflex_tilde" state="circumflex"/>
			<when next="diaeresis_tilde" state="diaeresis"/>
			<when next="horn_tilde" state="horn"/>
			<when next="macron_tilde" state="macron"/>
			<when output="~" state="tilde"/>
		</action>
		<action id="tildebelow">
			<when next="tildebelow" state="none"/>
			<when output="̰" state="tildebelow"/>
		</action>
		<action id="topbar">
			<when next="topbar" state="none"/>
			<when output="⁻" state="topbar"/>
		</action>
		<action id="u">
			<when output="u" state="none"/>
			<when next="Multi_key_u" state="Multi_key"/>
			<when output="ŭ" state="Multi_key_U"/>
			<when output="ú" state="Multi_key_acute"/>
			<when output="ṹ" state="Multi_key_acute_asciitilde"/>
			<when output="ṹ" state="Multi_key_acute_combining_tilde"/>
			<when output="ǘ" state="Multi_key_acute_dead_diaeresis"/>
			<when output="ứ" state="Multi_key_acute_dead_horn"/>
			<when output="ṹ" state="Multi_key_acute_dead_tilde"/>
			<when output="ứ" state="Multi_key_acute_plus"/>
			<when output="ǘ" state="Multi_key_acute_quotedbl"/>
			<when output="ú" state="Multi_key_apostrophe"/>
			<when output="ṹ" state="Multi_key_apostrophe_asciitilde"/>
			<when output="ṹ" state="Multi_key_apostrophe_combining_tilde"/>
			<when output="ǘ" state="Multi_key_apostrophe_dead_diaeresis"/>
			<when output="ứ" state="Multi_key_apostrophe_dead_horn"/>
			<when output="ṹ" state="Multi_key_apostrophe_dead_tilde"/>
			<when output="ứ" state="Multi_key_apostrophe_plus"/>
			<when output="ǘ" state="Multi_key_apostrophe_quotedbl"/>
			<when output="û" state="Multi_key_asciicircum"/>
			<when output="ũ" state="Multi_key_asciitilde"/>
			<when output="ữ" state="Multi_key_asciitilde_dead_horn"/>
			<when output="ữ" state="Multi_key_asciitilde_plus"/>
			<when output="ŭ" state="Multi_key_b"/>
			<when output="ǔ" state="Multi_key_c"/>
			<when output="ǚ" state="Multi_key_c_dead_diaeresis"/>
			<when output="ǚ" state="Multi_key_c_quotedbl"/>
			<when output="ű" state="Multi_key_equal"/>
			<when output="ụ" state="Multi_key_exclam"/>
			<when output="ự" state="Multi_key_exclam_dead_horn"/>
			<when output="ự" state="Multi_key_exclam_plus"/>
			<when output="ù" state="Multi_key_grave"/>
			<when output="ǜ" state="Multi_key_grave_dead_diaeresis"/>
			<when output="ừ" state="Multi_key_grave_dead_horn"/>
			<when output="ừ" state="Multi_key_grave_plus"/>
			<when output="ǜ" state="Multi_key_grave_quotedbl"/>
			<when output="µ" state="Multi_key_m"/>
			<when output="ū" state="Multi_key_macron"/>
			<when output="ǖ" state="Multi_key_macron_dead_diaeresis"/>
			<when output="ǖ" state="Multi_key_macron_quotedbl"/>
			<when output="ů" state="Multi_key_o"/>
			<when next="Multi_key_parenleft_u" state="Multi_key_parenleft"/>
			<when output="ư" state="Multi_key_plus"/>
			<when output="ủ" state="Multi_key_question"/>
			<when output="ử" state="Multi_key_question_dead_horn"/>
			<when output="ử" state="Multi_key_question_plus"/>
			<when output="ü" state="Multi_key_quotedbl"/>
			<when output="ṻ" state="Multi_key_quotedbl_dead_macron"/>
			<when output="ṻ" state="Multi_key_quotedbl_macron"/>
			<when output="ṻ" state="Multi_key_quotedbl_underscore"/>
			<when output="ų" state="Multi_key_semicolon"/>
			<when output="ŭ" state="Multi_key_u"/>
			<when output="ū" state="Multi_key_underscore"/>
			<when output="ǖ" state="Multi_key_underscore_dead_diaeresis"/>
			<when output="ǖ" state="Multi_key_underscore_quotedbl"/>
			<when output="ú" state="acute"/>
			<when output="ǘ" state="acute_diaeresis"/>
			<when output="ứ" state="acute_horn"/>
			<when output="ṹ" state="acute_tilde"/>
			<when output="ụ" state="belowdot"/>
			<when output="ự" state="belowdot_horn"/>
			<when output="ŭ" state="breve"/>
			<when output="ǔ" state="caron"/>
			<when output="ǚ" state="caron_diaeresis"/>
			<when output="û" state="circumflex"/>
			<when output="ṷ" state="circumflexbelow"/>
			<when output="元" state="currency"/>
			<when output="ü" state="diaeresis"/>
			<when output="ǜ" state="diaeresis_grave"/>
			<when output="ǖ" state="diaeresis_macron"/>
			<when output="ṳ" state="diaeresisbelow"/>
			<when output="ű" state="doubleacute"/>
			<when output="ȕ" state="doublegrave"/>
			<when output="ù" state="grave"/>
			<when output="ừ" state="grave_horn"/>
			<when output="υ" state="greek"/>
			<when output="ῡ" state="greek_macron"/>
			<when output="ủ" state="hook"/>
			<when output="ử" state="hook_horn"/>
			<when output="ư" state="horn"/>
			<when output="ữ" state="horn_tilde"/>
			<when output="ȗ" state="invertedbreve"/>
			<when output="ū" state="macron"/>
			<when output="ų" state="ogonek"/>
			<when output="ᶙ" state="retroflexhook"/>
			<when output="ů" state="ringabove"/>
			<when output="ʉ" state="stroke"/>
			<when output="ũ" state="tilde"/>
			<when output="ṵ" state="tildebelow"/>
		</action>
		<action id="v">
			<when output="v" state="none"/>
			<when next="Multi_key_v" state="Multi_key"/>
			<when output="ṽ" state="Multi_key_asciitilde"/>
			<when output="ṿ" state="Multi_key_exclam"/>
			<when output="|" state="Multi_key_l"/>
			<when next="Multi_key_parenleft_v" state="Multi_key_parenleft"/>
			<when output="ṿ" state="belowdot"/>
			<when output="ⱴ" state="curl"/>
			<when output="ꝟ" state="diagonalstroke"/>
			<when output="ʋ" state="hook"/>
			<when output="ᶌ" state="palatalhook"/>
			<when output="ⱱ" state="righthook"/>
			<when output="ṽ" state="tilde"/>
		</action>
		<action id="w">
			<when output="w" state="none"/>
			<when output="ẃ" state="Multi_key_acute"/>
			<when output="ẃ" state="Multi_key_apostrophe"/>
			<when output="ŵ" state="Multi_key_asciicircum"/>
			<when output="ʷ" state="Multi_key_asciicircum_underscore"/>
			<when output="ẉ" state="Multi_key_exclam"/>
			<when output="ẁ" state="Multi_key_grave"/>
			<when output="ẘ" state="Multi_key_o"/>
			<when next="Multi_key_parenleft_w" state="Multi_key_parenleft"/>
			<when output="ẇ" state="Multi_key_period"/>
			<when output="ẅ" state="Multi_key_quotedbl"/>
			<when output="ẇ" state="abovedot"/>
			<when output="ẃ" state="acute"/>
			<when output="ẉ" state="belowdot"/>
			<when output="ŵ" state="circumflex"/>
			<when output="₩" state="currency"/>
			<when output="ẅ" state="diaeresis"/>
			<when output="ẁ" state="grave"/>
			<when output="ω" state="greek"/>
			<when output="ⱳ" state="hook"/>
			<when output="ẘ" state="ringabove"/>
		</action>
		<action id="x">
			<when output="x" state="none"/>
			<when next="Multi_key_x" state="Multi_key"/>
			<when output="ˣ" state="Multi_key_asciicircum_underscore"/>
			<when output="¤" state="Multi_key_o"/>
			<when next="Multi_key_parenleft_x" state="Multi_key_parenleft"/>
			<when output="ẋ" state="Multi_key_period"/>
			<when output="ẍ" state="Multi_key_quotedbl"/>
			<when output="×" state="Multi_key_x"/>
			<when output="ẋ" state="abovedot"/>
			<when output="ẍ" state="diaeresis"/>
			<when output="ξ" state="greek"/>
			<when output="ᶍ" state="palatalhook"/>
		</action>
		<action id="y">
			<when output="y" state="none"/>
			<when output="ý" state="Multi_key_acute"/>
			<when output="ý" state="Multi_key_apostrophe"/>
			<when output="ŷ" state="Multi_key_asciicircum"/>
			<when output="ʸ" state="Multi_key_asciicircum_underscore"/>
			<when output="ỹ" state="Multi_key_asciitilde"/>
			<when output="ỵ" state="Multi_key_exclam"/>
			<when output="ỳ" state="Multi_key_grave"/>
			<when output="ȳ" state="Multi_key_macron"/>
			<when output="ẙ" state="Multi_key_o"/>
			<when next="Multi_key_parenleft_y" state="Multi_key_parenleft"/>
			<when output="ẏ" state="Multi_key_period"/>
			<when output="ỷ" state="Multi_key_question"/>
			<when output="ÿ" state="Multi_key_quotedbl"/>
			<when output="ȳ" state="Multi_key_underscore"/>
			<when output="ẏ" state="abovedot"/>
			<when output="ý" state="acute"/>
			<when output="ỵ" state="belowdot"/>
			<when output="ŷ" state="circumflex"/>
			<when output="¥" state="currency"/>
			<when output="ÿ" state="diaeresis"/>
			<when output="ỳ" state="grave"/>
			<when output="ψ" state="greek"/>
			<when output="ỷ" state="hook"/>
			<when output="ỿ" state="loop"/>
			<when output="ȳ" state="macron"/>
			<when output="ẙ" state="ringabove"/>
			<when output="ɏ" state="stroke"/>
			<when output="ỹ" state="tilde"/>
		</action>
		<action id="z">
			<when output="z" state="none"/>
			<when output="ź" state="Multi_key_acute"/>
			<when output="ź" state="Multi_key_apostrophe"/>
			<when output="ẑ" state="Multi_key_asciicircum"/>
			<when output="ž" state="Multi_key_c"/>
			<when output="ẓ" state="Multi_key_exclam"/>
			<when next="Multi_key_parenleft_z" state="Multi_key_parenleft"/>
			<when output="ż" state="Multi_key_period"/>
			<when output="ƶ" state="Multi_key_slash"/>
			<when output="ż" state="abovedot"/>
			<when output="ź" state="acute"/>
			<when output="ẓ" state="belowdot"/>
			<when output="ž" state="caron"/>
			<when output="ẑ" state="circumflex"/>
			<when output="ʑ" state="curl"/>
			<when output="ⱬ" state="descender"/>
			<when output="ζ" state="greek"/>
			<when output="ȥ" state="hook"/>
			<when output="ẕ" state="linebelow"/>
			<when output="ᵶ" state="middletilde"/>
			<when output="ᶎ" state="palatalhook"/>
			<when output="ʐ" state="retroflexhook"/>
			<when output="ƶ" state="stroke"/>
			<when output="ɀ" state="swashtail"/>
		</action>
		<action id="{">
			<when output="{" state="none"/>
		</action>
		<action id="|">
			<when output="|" state="none"/>
			<when next="Multi_key_bar" state="Multi_key"/>
			<when output="¢" state="Multi_key_c"/>
		</action>
		<action id="}">
			<when output=")" state="none"/>
		</action>
		<action id="~">
			<when output="~" state="none"/>
			<when next="Multi_key_asciitilde" state="Multi_key"/>
			<when next="Multi_key_Greek_iota_asciitilde" state="Multi_key_Greek_iota"/>
			<when output="῏" state="Multi_key_U1FBF"/>
			<when output="῟" state="Multi_key_U1FFE"/>
			<when next="Multi_key_acute_asciitilde" state="Multi_key_acute"/>
			<when next="Multi_key_apostrophe_asciitilde" state="Multi_key_apostrophe"/>
			<when output="῁" state="Multi_key_diaeresis"/>
			<when next="Multi_key_macron_asciitilde" state="Multi_key_macron"/>
			<when next="Multi_key_quotedbl_asciitilde" state="Multi_key_quotedbl"/>
			<when output="~" state="Multi_key_space"/>
			<when next="Multi_key_underscore_asciitilde" state="Multi_key_underscore"/>
		</action>
		<action id=" ">
			<when output=" " state="none"/>
			<when output="̇" state="abovedot"/>
			<when output="̇́" state="abovedot_acute"/>
			<when output="̣̇" state="abovedot_belowdot"/>
			<when output="̇̌" state="abovedot_caron"/>
			<when output="̸̇̉" state="abovedot_hook_stroke"/>
			<when output="̇̄" state="abovedot_macron"/>
			<when output="̸̇" state="abovedot_stroke"/>
			<when output="́" state="acute"/>
			<when output="́̆" state="acute_breve"/>
			<when output="̧́" state="acute_cedilla"/>
			<when output="́̂" state="acute_circumflex"/>
			<when output="́̈" state="acute_diaeresis"/>
			<when output="̛́" state="acute_horn"/>
			<when output="́̄" state="acute_macron"/>
			<when output="́̊" state="acute_ringabove"/>
			<when output="̸́" state="acute_stroke"/>
			<when output="́̃" state="acute_tilde"/>
			<when output="-" state="bar"/>
			<when output="̣" state="belowdot"/>
			<when output="̣̆" state="belowdot_breve"/>
			<when output="̣̂" state="belowdot_circumflex"/>
			<when output="̛̣" state="belowdot_horn"/>
			<when output="̣̄" state="belowdot_macron"/>
			<when output="?" state="belt"/>
			<when output="̆" state="breve"/>
			<when output="̧̆" state="breve_cedilla"/>
			<when output="̆̀" state="breve_grave"/>
			<when output="̆̉" state="breve_hook"/>
			<when output="̆̃" state="breve_tilde"/>
			<when output="?" state="brevebelow"/>
			<when output="̌" state="caron"/>
			<when output="̌̈" state="caron_diaeresis"/>
			<when output="̧" state="cedilla"/>
			<when output="̧¤" state="cedilla_currency"/>
			<when output="̂" state="circumflex"/>
			<when output="̂̀" state="circumflex_grave"/>
			<when output="̂̉" state="circumflex_hook"/>
			<when output="̂̃" state="circumflex_tilde"/>
			<when output="̭" state="circumflexbelow"/>
			<when output="?" state="comma"/>
			<when output="̦" state="commabelow"/>
			<when output="?" state="crossedtail"/>
			<when output="?" state="curl"/>
			<when output="¤" state="currency"/>
			<when output="?" state="descender"/>
			<when output="̈" state="diaeresis"/>
			<when output="̈̀" state="diaeresis_grave"/>
			<when output="̈̄" state="diaeresis_macron"/>
			<when output="̈̃" state="diaeresis_tilde"/>
			<when output="̤" state="diaeresisbelow"/>
			<when output="?" state="diagonalstroke"/>
			<when output="?̸" state="diagonalstroke_stroke"/>
			<when output="?" state="dot"/>
			<when output="̋" state="doubleacute"/>
			<when output="?" state="doublebar"/>
			<when output="̏" state="doublegrave"/>
			<when output="?" state="fishhook"/>
			<when output="??" state="fishhook_middletilde"/>
			<when output="??" state="fishhook_tail"/>
			<when output="?" state="flourish"/>
			<when output="̀" state="grave"/>
			<when output="̛̀" state="grave_horn"/>
			<when output="̀̄" state="grave_macron"/>
			<when output="µ" state="greek"/>
			<when output="µ̉" state="greek_hook"/>
			<when output="µ̄" state="greek_macron"/>
			<when output="µ̸" state="greek_stroke"/>
			<when output="?" state="highstroke"/>
			<when output="̉" state="hook"/>
			<when output="̛̉" state="hook_horn"/>
			<when output="̉?" state="hook_tail"/>
			<when output="?" state="hooktail"/>
			<when output="?" state="horizontalbar"/>
			<when output="̛" state="horn"/>
			<when output="̛̃" state="horn_tilde"/>
			<when output="̑" state="invertedbreve"/>
			<when output="_" state="linebelow"/>
			<when output="?" state="longleg"/>
			<when output="?" state="longrightleg"/>
			<when output="?" state="longstrokeoverlay"/>
			<when output="?" state="loop"/>
			<when output="?" state="lowringinside"/>
			<when output="̄" state="macron"/>
			<when output="̨̄" state="macron_ogonek"/>
			<when output="̄̃" state="macron_tilde"/>
			<when output="?" state="middletilde"/>
			<when output="?" state="notch"/>
			<when output="̨" state="ogonek"/>
			<when output="?" state="palatalhook"/>
			<when output="̢" state="retroflexhook"/>
			<when output="ʾ" state="righthalfring"/>
			<when output="?" state="righthook"/>
			<when output="̊" state="ringabove"/>
			<when output="̥" state="ringbelow"/>
			<when output="?" state="squirreltail"/>
			<when output="̸" state="stroke"/>
			<when output="?" state="strokethroughdescender"/>
			<when output="?" state="swashtail"/>
			<when output="?" state="tail"/>
			<when output="̃" state="tilde"/>
			<when output="̰" state="tildebelow"/>
			<when output="⁻" state="topbar"/>
		</action>
		<!-- nbsp -->
		<action id="¡">
			<when output="¡" state="none"/>
		</action>
		<action id="¢">
			<when output="¢" state="none"/>
			<when output="₵" state="cedilla"/>
		</action>
		<action id="¦">
			<when output="¦" state="none"/>
		</action>
		<action id="§">
			<when output="§" state="none"/>
		</action>
		<action id="¨">
			<when output="¨" state="none"/>
			<when next="Multi_key_diaeresis" state="Multi_key"/>
		</action>
		<action id="©">
			<when output="}" state="none"/>
		</action>
		<action id="© 1">
			<when output="}" state="none"/>
		</action>
		<action id="© 2">
			<when output="©" state="none"/>
		</action>
		<action id="ª">
			<when output="ª" state="none"/>
		</action>
		<action id="«">
			<when output="«" state="none"/>
		</action>
		<action id="¬">
			<when output="¬" state="none"/>
		</action>
		<action id="¯">
			<when output="¯" state="none"/>
			<when next="Multi_key_macron" state="Multi_key"/>
			<when next="Multi_key_acute_macron" state="Multi_key_acute"/>
			<when next="Multi_key_apostrophe_macron" state="Multi_key_apostrophe"/>
			<when next="Multi_key_grave_macron" state="Multi_key_grave"/>
			<when next="Multi_key_quotedbl_macron" state="Multi_key_quotedbl"/>
		</action>
		<action id="°">
			<when output="°" state="none"/>
		</action>
		<action id="±">
			<when output="±" state="none"/>
		</action>
		<action id="´">
			<when output="´" state="none"/>
			<when next="Multi_key_acute" state="Multi_key"/>
			<when next="Multi_key_Greek_iota_acute" state="Multi_key_Greek_iota"/>
			<when output="῎" state="Multi_key_U1FBF"/>
			<when output="῞" state="Multi_key_U1FFE"/>
			<when output="΅" state="Multi_key_diaeresis"/>
			<when next="Multi_key_period_acute" state="Multi_key_period"/>
			<when output="̈́" state="Multi_key_quotedbl"/>
		</action>
		<action id="µ">
			<when output="µ" state="none"/>
		</action>
		<action id="¶">
			<when output="¶" state="none"/>
		</action>
		<action id="·">
			<when output="·" state="none"/>
		</action>
		<action id="¸">
			<when output="¸" state="none"/>
		</action>
		<action id="º">
			<when output="º" state="none"/>
		</action>
		<action id="»">
			<when output="»" state="none"/>
		</action>
		<action id="¼">
			<when output="¼" state="none"/>
		</action>
		<action id="½">
			<when output="½" state="none"/>
		</action>
		<action id="¾">
			<when output="¾" state="none"/>
		</action>
		<action id="¿">
			<when output="¿" state="none"/>
		</action>
		<action id="À">
			<when output="À" state="none"/>
			<when output="Ằ" state="breve"/>
			<when output="Ầ" state="circumflex"/>
		</action>
		<action id="Á">
			<when output="Á" state="none"/>
			<when output="Ắ" state="breve"/>
			<when output="Ấ" state="circumflex"/>
			<when output="Ǻ" state="ringabove"/>
		</action>
		<action id="Â">
			<when output="Â" state="none"/>
			<when output="Ấ" state="Multi_key_acute"/>
			<when output="Ấ" state="Multi_key_apostrophe"/>
			<when output="Ẫ" state="Multi_key_asciitilde"/>
			<when output="Ầ" state="Multi_key_grave"/>
			<when output="Ẩ" state="Multi_key_question"/>
			<when output="Ấ" state="acute"/>
			<when output="Ậ" state="belowdot"/>
			<when output="Ầ" state="grave"/>
			<when output="Ẩ" state="hook"/>
			<when output="Ẫ" state="tilde"/>
		</action>
		<action id="Ã">
			<when output="Ã" state="none"/>
			<when output="Ẵ" state="breve"/>
			<when output="Ẫ" state="circumflex"/>
		</action>
		<action id="Ä">
			<when output="Ä" state="none"/>
			<when output="Ǟ" state="Multi_key_macron"/>
			<when output="Ǟ" state="Multi_key_underscore"/>
			<when output="Ǟ" state="macron"/>
		</action>
		<action id="Å">
			<when output="Å" state="none"/>
			<when output="Ǻ" state="Multi_key_acute"/>
			<when output="Ǻ" state="Multi_key_apostrophe"/>
			<when output="Ǻ" state="acute"/>
		</action>
		<action id="Æ">
			<when output="Æ" state="none"/>
			<when output="Ǽ" state="Multi_key_acute"/>
			<when output="Ǽ" state="Multi_key_apostrophe"/>
			<when output="Ǣ" state="Multi_key_macron"/>
			<when output="Ǣ" state="Multi_key_underscore"/>
			<when output="Ǽ" state="acute"/>
			<when output="Ǣ" state="macron"/>
		</action>
		<action id="Ç">
			<when output="Ç" state="none"/>
			<when output="Ḉ" state="Multi_key_acute"/>
			<when output="Ḉ" state="Multi_key_apostrophe"/>
			<when output="Ḉ" state="acute"/>
			<when output="₵" state="currency"/>
		</action>
		<action id="È">
			<when output="È" state="none"/>
			<when output="Ề" state="circumflex"/>
			<when output="Ḕ" state="macron"/>
		</action>
		<action id="É">
			<when output="É" state="none"/>
			<when output="Ế" state="circumflex"/>
			<when output="Ḗ" state="macron"/>
		</action>
		<action id="Ê">
			<when output="Ê" state="none"/>
			<when output="Ế" state="Multi_key_acute"/>
			<when output="Ế" state="Multi_key_apostrophe"/>
			<when output="Ễ" state="Multi_key_asciitilde"/>
			<when output="Ề" state="Multi_key_grave"/>
			<when output="Ể" state="Multi_key_question"/>
			<when output="Ế" state="acute"/>
			<when output="Ệ" state="belowdot"/>
			<when output="Ề" state="grave"/>
			<when output="Ể" state="hook"/>
			<when output="Ễ" state="tilde"/>
		</action>
		<action id="Í">
			<when output="Í" state="none"/>
			<when output="Ḯ" state="diaeresis"/>
		</action>
		<action id="Ï">
			<when output="Ï" state="none"/>
			<when output="Ḯ" state="Multi_key_acute"/>
			<when output="Ḯ" state="Multi_key_apostrophe"/>
			<when output="Ḯ" state="acute"/>
		</action>
		<action id="Ð">
			<when output="Ð" state="none"/>
		</action>
		<action id="Ò">
			<when output="Ò" state="none"/>
			<when output="Ồ" state="circumflex"/>
			<when output="Ờ" state="horn"/>
			<when output="Ṑ" state="macron"/>
		</action>
		<action id="Ó">
			<when output="Ó" state="none"/>
			<when output="Ố" state="circumflex"/>
			<when output="Ớ" state="horn"/>
			<when output="Ṓ" state="macron"/>
			<when output="Ǿ" state="stroke"/>
			<when output="Ṍ" state="tilde"/>
		</action>
		<action id="Ô">
			<when output="Ô" state="none"/>
			<when output="Ố" state="Multi_key_acute"/>
			<when output="Ố" state="Multi_key_apostrophe"/>
			<when output="Ỗ" state="Multi_key_asciitilde"/>
			<when output="Ồ" state="Multi_key_grave"/>
			<when output="Ổ" state="Multi_key_question"/>
			<when output="Ố" state="acute"/>
			<when output="Ộ" state="belowdot"/>
			<when output="Ồ" state="grave"/>
			<when output="Ổ" state="hook"/>
			<when output="Ỗ" state="tilde"/>
		</action>
		<action id="Õ">
			<when output="Õ" state="none"/>
			<when output="Ṍ" state="Multi_key_acute"/>
			<when output="Ṍ" state="Multi_key_apostrophe"/>
			<when output="Ȭ" state="Multi_key_macron"/>
			<when output="Ṏ" state="Multi_key_quotedbl"/>
			<when output="Ȭ" state="Multi_key_underscore"/>
			<when output="Ṍ" state="acute"/>
			<when output="Ỗ" state="circumflex"/>
			<when output="Ṏ" state="diaeresis"/>
			<when output="Ỡ" state="horn"/>
			<when output="Ȭ" state="macron"/>
		</action>
		<action id="Ö">
			<when output="Ö" state="none"/>
			<when output="Ȫ" state="Multi_key_macron"/>
			<when output="Ȫ" state="Multi_key_underscore"/>
			<when output="Ȫ" state="macron"/>
			<when output="Ṏ" state="tilde"/>
		</action>
		<action id="×">
			<when output="×" state="none"/>
		</action>
		<action id="Ø">
			<when output="Ø" state="none"/>
			<when output="Ǿ" state="Multi_key_acute"/>
			<when output="Ǿ" state="Multi_key_apostrophe"/>
			<when output="Ǿ" state="acute"/>
		</action>
		<action id="Ù">
			<when output="Ù" state="none"/>
			<when output="Ǜ" state="diaeresis"/>
			<when output="Ừ" state="horn"/>
		</action>
		<action id="Ú">
			<when output="Ú" state="none"/>
			<when output="Ǘ" state="diaeresis"/>
			<when output="Ứ" state="horn"/>
			<when output="Ṹ" state="tilde"/>
		</action>
		<action id="Ü">
			<when output="Ü" state="none"/>
			<when output="Ǘ" state="Multi_key_acute"/>
			<when output="Ǘ" state="Multi_key_apostrophe"/>
			<when output="Ǚ" state="Multi_key_c"/>
			<when output="Ǜ" state="Multi_key_grave"/>
			<when output="Ǖ" state="Multi_key_macron"/>
			<when output="Ǖ" state="Multi_key_underscore"/>
			<when output="Ǘ" state="acute"/>
			<when output="Ǚ" state="caron"/>
			<when output="Ǜ" state="grave"/>
			<when output="Ǖ" state="macron"/>
		</action>
		<action id="Þ">
			<when output="Þ" state="none"/>
			<when output="৲" state="currency"/>
			<when output="Ꝥ" state="stroke"/>
			<when output="Ꝧ" state="strokethroughdescender"/>
		</action>
		<action id="à">
			<when output="à" state="none"/>
			<when output="ằ" state="breve"/>
			<when output="ầ" state="circumflex"/>
		</action>
		<action id="á">
			<when output="á" state="none"/>
			<when output="ắ" state="breve"/>
			<when output="ấ" state="circumflex"/>
			<when output="ǻ" state="ringabove"/>
		</action>
		<action id="â">
			<when output="â" state="none"/>
			<when output="ấ" state="Multi_key_acute"/>
			<when output="ấ" state="Multi_key_apostrophe"/>
			<when output="ẫ" state="Multi_key_asciitilde"/>
			<when output="ầ" state="Multi_key_grave"/>
			<when output="ẩ" state="Multi_key_question"/>
			<when output="ấ" state="acute"/>
			<when output="ậ" state="belowdot"/>
			<when output="ầ" state="grave"/>
			<when output="ẩ" state="hook"/>
			<when output="ẫ" state="tilde"/>
		</action>
		<action id="ã">
			<when output="ã" state="none"/>
			<when output="ẵ" state="breve"/>
			<when output="ẫ" state="circumflex"/>
		</action>
		<action id="ä">
			<when output="ä" state="none"/>
			<when output="ǟ" state="Multi_key_macron"/>
			<when output="ǟ" state="Multi_key_underscore"/>
			<when output="ǟ" state="macron"/>
		</action>
		<action id="å">
			<when output="å" state="none"/>
			<when output="ǻ" state="Multi_key_acute"/>
			<when output="ǻ" state="Multi_key_apostrophe"/>
			<when output="ǻ" state="acute"/>
		</action>
		<action id="æ">
			<when output="æ" state="none"/>
			<when output="ǽ" state="Multi_key_acute"/>
			<when output="ǽ" state="Multi_key_apostrophe"/>
			<when output="ǣ" state="Multi_key_macron"/>
			<when output="ǣ" state="Multi_key_underscore"/>
			<when output="ǽ" state="acute"/>
			<when output="ǣ" state="macron"/>
		</action>
		<action id="ç">
			<when output="ç" state="none"/>
			<when output="ḉ" state="Multi_key_acute"/>
			<when output="ḉ" state="Multi_key_apostrophe"/>
			<when output="ḉ" state="acute"/>
			<when output="₵" state="currency"/>
		</action>
		<action id="è">
			<when output="è" state="none"/>
			<when output="ề" state="circumflex"/>
			<when output="ḕ" state="macron"/>
		</action>
		<action id="é">
			<when output="é" state="none"/>
			<when output="ế" state="circumflex"/>
			<when output="ḗ" state="macron"/>
		</action>
		<action id="ê">
			<when output="ê" state="none"/>
			<when output="ế" state="Multi_key_acute"/>
			<when output="ế" state="Multi_key_apostrophe"/>
			<when output="ễ" state="Multi_key_asciitilde"/>
			<when output="ề" state="Multi_key_grave"/>
			<when output="ể" state="Multi_key_question"/>
			<when output="ế" state="acute"/>
			<when output="ệ" state="belowdot"/>
			<when output="ề" state="grave"/>
			<when output="ể" state="hook"/>
			<when output="ễ" state="tilde"/>
		</action>
		<action id="í">
			<when output="í" state="none"/>
			<when output="ḯ" state="diaeresis"/>
		</action>
		<action id="ï">
			<when output="ï" state="none"/>
			<when output="ḯ" state="Multi_key_acute"/>
			<when output="ḯ" state="Multi_key_apostrophe"/>
			<when output="ḯ" state="acute"/>
		</action>
		<action id="ð">
			<when output="ð" state="none"/>
		</action>
		<action id="ò">
			<when output="ò" state="none"/>
			<when output="ồ" state="circumflex"/>
			<when output="ờ" state="horn"/>
			<when output="ṑ" state="macron"/>
		</action>
		<action id="ó">
			<when output="ó" state="none"/>
			<when output="ố" state="circumflex"/>
			<when output="ớ" state="horn"/>
			<when output="ṓ" state="macron"/>
			<when output="ǿ" state="stroke"/>
			<when output="ṍ" state="tilde"/>
		</action>
		<action id="ô">
			<when output="ô" state="none"/>
			<when output="ố" state="Multi_key_acute"/>
			<when output="ố" state="Multi_key_apostrophe"/>
			<when output="ỗ" state="Multi_key_asciitilde"/>
			<when output="ồ" state="Multi_key_grave"/>
			<when output="ổ" state="Multi_key_question"/>
			<when output="ố" state="acute"/>
			<when output="ộ" state="belowdot"/>
			<when output="ồ" state="grave"/>
			<when output="ổ" state="hook"/>
			<when output="ỗ" state="tilde"/>
		</action>
		<action id="õ">
			<when output="õ" state="none"/>
			<when output="ṍ" state="Multi_key_acute"/>
			<when output="ṍ" state="Multi_key_apostrophe"/>
			<when output="ȭ" state="Multi_key_macron"/>
			<when output="ṏ" state="Multi_key_quotedbl"/>
			<when output="ȭ" state="Multi_key_underscore"/>
			<when output="ṍ" state="acute"/>
			<when output="ỗ" state="circumflex"/>
			<when output="ṏ" state="diaeresis"/>
			<when output="ỡ" state="horn"/>
			<when output="ȭ" state="macron"/>
		</action>
		<action id="ö">
			<when output="ö" state="none"/>
			<when output="ȫ" state="Multi_key_macron"/>
			<when output="ȫ" state="Multi_key_underscore"/>
			<when output="ȫ" state="macron"/>
			<when output="ṏ" state="tilde"/>
		</action>
		<action id="÷">
			<when output="÷" state="none"/>
		</action>
		<action id="ø">
			<when output="ø" state="none"/>
			<when output="ǿ" state="Multi_key_acute"/>
			<when output="ǿ" state="Multi_key_apostrophe"/>
			<when output="ǿ" state="acute"/>
		</action>
		<action id="ù">
			<when output="ù" state="none"/>
			<when output="ǜ" state="diaeresis"/>
			<when output="ừ" state="horn"/>
		</action>
		<action id="ú">
			<when output="ú" state="none"/>
			<when output="ǘ" state="diaeresis"/>
			<when output="ứ" state="horn"/>
			<when output="ṹ" state="tilde"/>
		</action>
		<action id="ü">
			<when output="ü" state="none"/>
			<when output="ǘ" state="Multi_key_acute"/>
			<when output="ǘ" state="Multi_key_apostrophe"/>
			<when output="ǚ" state="Multi_key_c"/>
			<when output="ǜ" state="Multi_key_grave"/>
			<when output="ǖ" state="Multi_key_macron"/>
			<when output="ǖ" state="Multi_key_underscore"/>
			<when output="ǘ" state="acute"/>
			<when output="ǚ" state="caron"/>
			<when output="ǜ" state="grave"/>
			<when output="ǖ" state="macron"/>
		</action>
		<action id="þ">
			<when output="þ" state="none"/>
			<when output="৲" state="currency"/>
			<when output="ꝥ" state="stroke"/>
			<when output="ꝧ" state="strokethroughdescender"/>
		</action>
		<action id="Ā">
			<when output="Ā" state="none"/>
			<when output="Ǡ" state="abovedot"/>
			<when output="Ǟ" state="diaeresis"/>
			<when output="Ᾱ" state="greek"/>
		</action>
		<action id="ā">
			<when output="ā" state="none"/>
			<when output="ǡ" state="abovedot"/>
			<when output="ǟ" state="diaeresis"/>
			<when output="ᾱ" state="greek"/>
		</action>
		<action id="Ă">
			<when output="Ă" state="none"/>
			<when output="Ắ" state="Multi_key_acute"/>
			<when output="Ắ" state="Multi_key_apostrophe"/>
			<when output="Ẵ" state="Multi_key_asciitilde"/>
			<when output="Ằ" state="Multi_key_grave"/>
			<when output="Ẳ" state="Multi_key_question"/>
			<when output="Ắ" state="acute"/>
			<when output="Ặ" state="belowdot"/>
			<when output="Ằ" state="grave"/>
			<when output="Ẳ" state="hook"/>
			<when output="Ẵ" state="tilde"/>
		</action>
		<action id="ă">
			<when output="ă" state="none"/>
			<when output="ắ" state="Multi_key_acute"/>
			<when output="ắ" state="Multi_key_apostrophe"/>
			<when output="ẵ" state="Multi_key_asciitilde"/>
			<when output="ằ" state="Multi_key_grave"/>
			<when output="ẳ" state="Multi_key_question"/>
			<when output="ắ" state="acute"/>
			<when output="ặ" state="belowdot"/>
			<when output="ằ" state="grave"/>
			<when output="ẳ" state="hook"/>
			<when output="ẵ" state="tilde"/>
		</action>
		<action id="Ć">
			<when output="Ć" state="none"/>
			<when output="Ḉ" state="cedilla"/>
		</action>
		<action id="ć">
			<when output="ć" state="none"/>
			<when output="ḉ" state="cedilla"/>
		</action>
		<action id="Ē">
			<when output="Ē" state="none"/>
			<when output="Ḗ" state="Multi_key_acute"/>
			<when output="Ḗ" state="Multi_key_apostrophe"/>
			<when output="Ḕ" state="Multi_key_grave"/>
			<when output="Ḗ" state="acute"/>
			<when output="Ḕ" state="grave"/>
		</action>
		<action id="ē">
			<when output="ē" state="none"/>
			<when output="ḗ" state="Multi_key_acute"/>
			<when output="ḗ" state="Multi_key_apostrophe"/>
			<when output="ḕ" state="Multi_key_grave"/>
			<when output="ḗ" state="acute"/>
			<when output="ḕ" state="grave"/>
		</action>
		<action id="Ĕ">
			<when output="Ĕ" state="none"/>
			<when output="Ḝ" state="cedilla"/>
		</action>
		<action id="ĕ">
			<when output="ĕ" state="none"/>
			<when output="ḝ" state="cedilla"/>
		</action>
		<action id="Ī">
			<when output="Ī" state="none"/>
			<when output="Ῑ" state="greek"/>
		</action>
		<action id="ī">
			<when output="ī" state="none"/>
			<when output="ῑ" state="greek"/>
		</action>
		<action id="Ĳ">
			<when output="Ĳ" state="none"/>
		</action>
		<action id="ĳ">
			<when output="&#x003E;" state="none"/>
		</action>
		<action id="Ō">
			<when output="Ō" state="none"/>
			<when output="Ṓ" state="Multi_key_acute"/>
			<when output="Ṓ" state="Multi_key_apostrophe"/>
			<when output="Ṑ" state="Multi_key_grave"/>
			<when output="Ȱ" state="abovedot"/>
			<when output="Ṓ" state="acute"/>
			<when output="Ȫ" state="diaeresis"/>
			<when output="Ṑ" state="grave"/>
			<when output="Ǭ" state="ogonek"/>
			<when output="Ȭ" state="tilde"/>
		</action>
		<action id="ō">
			<when output="ō" state="none"/>
			<when output="ṓ" state="Multi_key_acute"/>
			<when output="ṓ" state="Multi_key_apostrophe"/>
			<when output="ṑ" state="Multi_key_grave"/>
			<when output="ȱ" state="abovedot"/>
			<when output="ṓ" state="acute"/>
			<when output="ȫ" state="diaeresis"/>
			<when output="ṑ" state="grave"/>
			<when output="ǭ" state="ogonek"/>
			<when output="ȭ" state="tilde"/>
		</action>
		<action id="Œ">
			<when output="Œ" state="none"/>
		</action>
		<action id="œ">
			<when output="œ" state="none"/>
		</action>
		<action id="Ś">
			<when output="Ś" state="none"/>
			<when output="Ṥ" state="Multi_key_period"/>
			<when output="Ṥ" state="abovedot"/>
		</action>
		<action id="ś">
			<when output="ś" state="none"/>
			<when output="ṥ" state="Multi_key_period"/>
			<when output="ṥ" state="abovedot"/>
		</action>
		<action id="Š">
			<when output="Š" state="none"/>
			<when output="Ṧ" state="Multi_key_period"/>
			<when output="Ṧ" state="abovedot"/>
		</action>
		<action id="š">
			<when output="š" state="none"/>
			<when output="ṧ" state="Multi_key_period"/>
			<when output="ṧ" state="abovedot"/>
		</action>
		<action id="Ũ">
			<when output="Ũ" state="none"/>
			<when output="Ṹ" state="Multi_key_acute"/>
			<when output="Ṹ" state="Multi_key_apostrophe"/>
			<when output="Ṹ" state="acute"/>
			<when output="Ữ" state="horn"/>
		</action>
		<action id="ũ">
			<when output="ũ" state="none"/>
			<when output="ṹ" state="Multi_key_acute"/>
			<when output="ṹ" state="Multi_key_apostrophe"/>
			<when output="ṹ" state="acute"/>
			<when output="ữ" state="horn"/>
		</action>
		<action id="Ū">
			<when output="Ū" state="none"/>
			<when output="Ṻ" state="Multi_key_quotedbl"/>
			<when output="Ǖ" state="diaeresis"/>
			<when output="Ῡ" state="greek"/>
		</action>
		<action id="ū">
			<when output="ū" state="none"/>
			<when output="ṻ" state="Multi_key_quotedbl"/>
			<when output="ǖ" state="diaeresis"/>
			<when output="ῡ" state="greek"/>
		</action>
		<action id="ſ">
			<when output="ſ" state="none"/>
			<when output="ẛ" state="Multi_key_period"/>
			<when output="ẛ" state="abovedot"/>
			<when output="ẜ" state="diagonalstroke"/>
			<when output="ẝ" state="highstroke"/>
		</action>
		<action id="Ə">
			<when output="Ə" state="none"/>
		</action>
		<action id="Ơ">
			<when output="Ơ" state="none"/>
			<when output="Ớ" state="Multi_key_acute"/>
			<when output="Ớ" state="Multi_key_apostrophe"/>
			<when output="Ỡ" state="Multi_key_asciitilde"/>
			<when output="Ợ" state="Multi_key_exclam"/>
			<when output="Ờ" state="Multi_key_grave"/>
			<when output="Ở" state="Multi_key_question"/>
			<when output="Ớ" state="acute"/>
			<when output="Ợ" state="belowdot"/>
			<when output="Ờ" state="grave"/>
			<when output="Ở" state="hook"/>
			<when output="Ỡ" state="tilde"/>
		</action>
		<action id="ơ">
			<when output="ơ" state="none"/>
			<when output="ớ" state="Multi_key_acute"/>
			<when output="ớ" state="Multi_key_apostrophe"/>
			<when output="ỡ" state="Multi_key_asciitilde"/>
			<when output="ợ" state="Multi_key_exclam"/>
			<when output="ờ" state="Multi_key_grave"/>
			<when output="ở" state="Multi_key_question"/>
			<when output="ớ" state="acute"/>
			<when output="ợ" state="belowdot"/>
			<when output="ờ" state="grave"/>
			<when output="ở" state="hook"/>
			<when output="ỡ" state="tilde"/>
		</action>
		<action id="Ư">
			<when output="Ư" state="none"/>
			<when output="Ứ" state="Multi_key_acute"/>
			<when output="Ứ" state="Multi_key_apostrophe"/>
			<when output="Ữ" state="Multi_key_asciitilde"/>
			<when output="Ự" state="Multi_key_exclam"/>
			<when output="Ừ" state="Multi_key_grave"/>
			<when output="Ử" state="Multi_key_question"/>
			<when output="Ứ" state="acute"/>
			<when output="Ự" state="belowdot"/>
			<when output="Ừ" state="grave"/>
			<when output="Ử" state="hook"/>
			<when output="Ữ" state="tilde"/>
		</action>
		<action id="ư">
			<when output="ư" state="none"/>
			<when output="ứ" state="Multi_key_acute"/>
			<when output="ứ" state="Multi_key_apostrophe"/>
			<when output="ữ" state="Multi_key_asciitilde"/>
			<when output="ự" state="Multi_key_exclam"/>
			<when output="ừ" state="Multi_key_grave"/>
			<when output="ử" state="Multi_key_question"/>
			<when output="ứ" state="acute"/>
			<when output="ự" state="belowdot"/>
			<when output="ừ" state="grave"/>
			<when output="ử" state="hook"/>
			<when output="ữ" state="tilde"/>
		</action>
		<action id="Ʒ">
			<when output="Ʒ" state="none"/>
			<when output="Ǯ" state="Multi_key_c"/>
			<when output="Ǯ" state="caron"/>
		</action>
		<action id="Ǔ">
			<when output="Ǔ" state="none"/>
			<when output="Ǚ" state="diaeresis"/>
		</action>
		<action id="ǔ">
			<when output="ǔ" state="none"/>
			<when output="ǚ" state="diaeresis"/>
		</action>
		<action id="Ǫ">
			<when output="Ǫ" state="none"/>
			<when output="Ǭ" state="Multi_key_macron"/>
			<when output="Ǭ" state="Multi_key_underscore"/>
			<when output="Ǭ" state="macron"/>
		</action>
		<action id="ǫ">
			<when output="ǫ" state="none"/>
			<when output="ǭ" state="Multi_key_macron"/>
			<when output="ǭ" state="Multi_key_underscore"/>
			<when output="ǭ" state="macron"/>
		</action>
		<action id="Ǳ">
			<when output="Ǳ" state="none"/>
			<when output="Ǆ" state="caron"/>
		</action>
		<action id="ǲ">
			<when output="ǲ" state="none"/>
			<when output="ǅ" state="caron"/>
		</action>
		<action id="ǳ">
			<when output="ǳ" state="none"/>
			<when output="ǆ" state="caron"/>
		</action>
		<action id="Ȧ">
			<when output="Ȧ" state="none"/>
			<when output="Ǡ" state="Multi_key_macron"/>
			<when output="Ǡ" state="Multi_key_underscore"/>
			<when output="Ǡ" state="macron"/>
		</action>
		<action id="ȧ">
			<when output="ȧ" state="none"/>
			<when output="ǡ" state="Multi_key_macron"/>
			<when output="ǡ" state="Multi_key_underscore"/>
			<when output="ǡ" state="macron"/>
		</action>
		<action id="Ȩ">
			<when output="Ȩ" state="none"/>
			<when output="Ḝ" state="Multi_key_U"/>
			<when output="Ḝ" state="Multi_key_b"/>
			<when output="Ḝ" state="breve"/>
		</action>
		<action id="ȩ">
			<when output="ȩ" state="none"/>
			<when output="ḝ" state="Multi_key_U"/>
			<when output="ḝ" state="Multi_key_b"/>
			<when output="ḝ" state="breve"/>
		</action>
		<action id="Ȯ">
			<when output="Ȯ" state="none"/>
			<when output="Ȱ" state="Multi_key_macron"/>
			<when output="Ȱ" state="Multi_key_underscore"/>
			<when output="Ȱ" state="macron"/>
		</action>
		<action id="ȯ">
			<when output="ȯ" state="none"/>
			<when output="ȱ" state="Multi_key_macron"/>
			<when output="ȱ" state="Multi_key_underscore"/>
			<when output="ȱ" state="macron"/>
		</action>
		<action id="ȷ">
			<when output="ȷ" state="none"/>
			<when output="ɟ" state="stroke"/>
		</action>
		<action id="ɉ">
			<when output="ɉ" state="none"/>
			<when output="ɟ" state="abovedot"/>
		</action>
		<action id="ɍ">
			<when output="ɍ" state="none"/>
			<when output="ϼ" state="greek"/>
		</action>
		<action id="ɑ">
			<when output="ɑ" state="none"/>
			<when output="ᶐ" state="retroflexhook"/>
		</action>
		<action id="ɔ">
			<when output="ɔ" state="none"/>
			<when output="ᶗ" state="retroflexhook"/>
		</action>
		<action id="ɖ">
			<when output="ɖ" state="none"/>
			<when output="ᶑ" state="hook"/>
		</action>
		<action id="ɗ">
			<when output="ɗ" state="none"/>
			<when output="ᶑ" state="tail"/>
		</action>
		<action id="ə">
			<when output="ə" state="none"/>
			<when output="ɚ" state="hook"/>
			<when output="ᶕ" state="retroflexhook"/>
		</action>
		<action id="ɛ">
			<when output="ɛ" state="none"/>
			<when output="ᶓ" state="retroflexhook"/>
		</action>
		<action id="ɜ">
			<when output="ɜ" state="none"/>
			<when output="ɝ" state="hook"/>
			<when output="ᶔ" state="retroflexhook"/>
		</action>
		<action id="ɣ">
			<when output="ɣ" state="none"/>
			<when output="ˠ" state="Multi_key_asciicircum_underscore"/>
		</action>
		<action id="ɥ">
			<when output="ɥ" state="none"/>
			<when output="ʮ" state="fishhook"/>
			<when output="ʯ" state="fishhook_tail"/>
		</action>
		<action id="ɦ">
			<when output="ɦ" state="none"/>
			<when output="ʱ" state="Multi_key_asciicircum_underscore"/>
		</action>
		<action id="ɩ">
			<when output="ɩ" state="none"/>
			<when output="ᵼ" state="stroke"/>
		</action>
		<action id="ɯ">
			<when output="ɯ" state="none"/>
			<when output="ɰ" state="longleg"/>
		</action>
		<action id="ɹ">
			<when output="ɹ" state="none"/>
			<when output="ʴ" state="Multi_key_asciicircum_underscore"/>
			<when output="ɻ" state="hook"/>
			<when output="ɺ" state="longleg"/>
			<when output="ⱹ" state="tail"/>
		</action>
		<action id="ɻ">
			<when output="ɻ" state="none"/>
			<when output="ʵ" state="Multi_key_asciicircum_underscore"/>
		</action>
		<action id="ɾ">
			<when output="ɾ" state="none"/>
			<when output="ᵳ" state="middletilde"/>
		</action>
		<action id="ʁ">
			<when output="ʁ" state="none"/>
			<when output="ʶ" state="Multi_key_asciicircum_underscore"/>
		</action>
		<action id="ʃ">
			<when output="ʃ" state="none"/>
			<when output="ʆ" state="curl"/>
			<when output="ᶋ" state="palatalhook"/>
			<when output="ᶘ" state="retroflexhook"/>
		</action>
		<action id="ʊ">
			<when output="ʊ" state="none"/>
			<when output="ᵿ" state="stroke"/>
		</action>
		<action id="ʒ">
			<when output="ʒ" state="none"/>
			<when output="ǯ" state="Multi_key_c"/>
			<when output="ǯ" state="caron"/>
			<when output="ʓ" state="curl"/>
			<when output="ᶚ" state="retroflexhook"/>
			<when output="ƺ" state="tail"/>
		</action>
		<action id="ʔ">
			<when output="ʔ" state="none"/>
			<when output="ʡ" state="Multi_key_slash"/>
		</action>
		<action id="ʕ">
			<when output="ʕ" state="none"/>
			<when output="ˤ" state="Multi_key_asciicircum_underscore"/>
		</action>
		<action id="ʣ">
			<when output="ʣ" state="none"/>
			<when output="ʥ" state="curl"/>
		</action>
		<action id="ʮ">
			<when output="ʮ" state="none"/>
			<when output="ʯ" state="tail"/>
		</action>
		<action id="ˇ">
			<when output="ˇ" state="none"/>
		</action>
		<action id="˘">
			<when output="˘" state="none"/>
		</action>
		<action id="˛">
			<when output="˛" state="none"/>
		</action>
		<action id="̀">
			<when output="̀" state="none"/>
			<when next="Multi_key_Greek_iota_combining_grave" state="Multi_key_Greek_iota"/>
			<when output="῍" state="Multi_key_U1FBF"/>
			<when output="῝" state="Multi_key_U1FFE"/>
			<when output="῭" state="Multi_key_diaeresis"/>
		</action>
		<action id="́">
			<when output="́" state="none"/>
			<when next="Multi_key_Greek_iota_combining_acute" state="Multi_key_Greek_iota"/>
			<when output="῎" state="Multi_key_U1FBF"/>
			<when output="῞" state="Multi_key_U1FFE"/>
			<when output="΅" state="Multi_key_diaeresis"/>
			<when next="Multi_key_period_combining_acute" state="Multi_key_period"/>
			<when output="̈́" state="Multi_key_quotedbl"/>
		</action>
		<action id="̃">
			<when output="̃" state="none"/>
			<when next="Multi_key_acute_combining_tilde" state="Multi_key_acute"/>
			<when next="Multi_key_apostrophe_combining_tilde" state="Multi_key_apostrophe"/>
			<when next="Multi_key_macron_combining_tilde" state="Multi_key_macron"/>
			<when next="Multi_key_quotedbl_combining_tilde" state="Multi_key_quotedbl"/>
			<when next="Multi_key_underscore_combining_tilde" state="Multi_key_underscore"/>
		</action>
		<action id="̓">
			<when output="̓" state="none"/>
			<when next="Multi_key_Greek_iota_U0313" state="Multi_key_Greek_iota"/>
			<when next="Multi_key_Greek_iota_U0342_U0313" state="Multi_key_Greek_iota_U0342"/>
			<when next="Multi_key_Greek_iota_acute_U0313" state="Multi_key_Greek_iota_acute"/>
			<when next="Multi_key_Greek_iota_apostrophe_U0313" state="Multi_key_Greek_iota_apostrophe"/>
			<when next="Multi_key_Greek_iota_asciitilde_U0313" state="Multi_key_Greek_iota_asciitilde"/>
			<when next="Multi_key_Greek_iota_combining_acute_U0313" state="Multi_key_Greek_iota_combining_acute"/>
			<when next="Multi_key_Greek_iota_combining_grave_U0313" state="Multi_key_Greek_iota_combining_grave"/>
			<when next="Multi_key_Greek_iota_dead_acute_U0313" state="Multi_key_Greek_iota_dead_acute"/>
			<when next="Multi_key_Greek_iota_dead_grave_U0313" state="Multi_key_Greek_iota_dead_grave"/>
			<when next="Multi_key_Greek_iota_dead_tilde_U0313" state="Multi_key_Greek_iota_dead_tilde"/>
			<when next="Multi_key_Greek_iota_grave_U0313" state="Multi_key_Greek_iota_grave"/>
			<when next="Multi_key_acute_U0313" state="Multi_key_acute"/>
			<when next="Multi_key_apostrophe_U0313" state="Multi_key_apostrophe"/>
			<when next="Multi_key_asciitilde_U0313" state="Multi_key_asciitilde"/>
			<when next="Multi_key_grave_U0313" state="Multi_key_grave"/>
		</action>
		<action id="̔">
			<when output="̔" state="none"/>
			<when next="Multi_key_Greek_iota_U0314" state="Multi_key_Greek_iota"/>
			<when next="Multi_key_Greek_iota_U0342_U0314" state="Multi_key_Greek_iota_U0342"/>
			<when next="Multi_key_Greek_iota_acute_U0314" state="Multi_key_Greek_iota_acute"/>
			<when next="Multi_key_Greek_iota_apostrophe_U0314" state="Multi_key_Greek_iota_apostrophe"/>
			<when next="Multi_key_Greek_iota_asciitilde_U0314" state="Multi_key_Greek_iota_asciitilde"/>
			<when next="Multi_key_Greek_iota_combining_acute_U0314" state="Multi_key_Greek_iota_combining_acute"/>
			<when next="Multi_key_Greek_iota_combining_grave_U0314" state="Multi_key_Greek_iota_combining_grave"/>
			<when next="Multi_key_Greek_iota_dead_acute_U0314" state="Multi_key_Greek_iota_dead_acute"/>
			<when next="Multi_key_Greek_iota_dead_grave_U0314" state="Multi_key_Greek_iota_dead_grave"/>
			<when next="Multi_key_Greek_iota_dead_tilde_U0314" state="Multi_key_Greek_iota_dead_tilde"/>
			<when next="Multi_key_Greek_iota_grave_U0314" state="Multi_key_Greek_iota_grave"/>
			<when next="Multi_key_acute_U0314" state="Multi_key_acute"/>
			<when next="Multi_key_apostrophe_U0314" state="Multi_key_apostrophe"/>
			<when next="Multi_key_asciitilde_U0314" state="Multi_key_asciitilde"/>
			<when next="Multi_key_grave_U0314" state="Multi_key_grave"/>
		</action>
		<action id="̣">
			<when output="̣" state="none"/>
			<when next="Multi_key_U_combining_belowdot" state="Multi_key_U"/>
			<when next="Multi_key_asciicircum_combining_belowdot" state="Multi_key_asciicircum"/>
			<when next="Multi_key_b_combining_belowdot" state="Multi_key_b"/>
			<when next="Multi_key_macron_combining_belowdot" state="Multi_key_macron"/>
			<when next="Multi_key_period_combining_belowdot" state="Multi_key_period"/>
			<when next="Multi_key_underscore_combining_belowdot" state="Multi_key_underscore"/>
		</action>
		<action id="̸">
			<when output="̸" state="none"/>
			<when output="∄" state="Multi_key_U2203"/>
			<when output="∉" state="Multi_key_U2208"/>
			<when output="∌" state="Multi_key_U220B"/>
			<when output="∤" state="Multi_key_U2223"/>
			<when output="∦" state="Multi_key_U2225"/>
			<when output="≄" state="Multi_key_U2243"/>
			<when output="≉" state="Multi_key_U2248"/>
			<when output="≭" state="Multi_key_U224D"/>
			<when output="≴" state="Multi_key_U2272"/>
			<when output="≵" state="Multi_key_U2273"/>
			<when output="≸" state="Multi_key_U2276"/>
			<when output="≹" state="Multi_key_U2277"/>
			<when output="⊀" state="Multi_key_U227A"/>
			<when output="⊁" state="Multi_key_U227B"/>
			<when output="⋠" state="Multi_key_U227C"/>
			<when output="⋡" state="Multi_key_U227D"/>
			<when output="⊈" state="Multi_key_U2286"/>
			<when output="⊉" state="Multi_key_U2287"/>
			<when output="⋢" state="Multi_key_U2291"/>
			<when output="⋣" state="Multi_key_U2292"/>
			<when output="⊭" state="Multi_key_U22A8"/>
			<when output="⊮" state="Multi_key_U22A9"/>
			<when output="⊯" state="Multi_key_U22AB"/>
			<when output="⋪" state="Multi_key_U22B2"/>
			<when output="⋫" state="Multi_key_U22B3"/>
			<when output="⋬" state="Multi_key_U22B4"/>
			<when output="⋭" state="Multi_key_U22B5"/>
			<when output="⫝̸" state="Multi_key_U2ADD"/>
			<when output="≇" state="Multi_key_approximate"/>
			<when output="≠" state="Multi_key_equal"/>
			<when output="≯" state="Multi_key_greater"/>
			<when output="≱" state="Multi_key_greaterthanequal"/>
			<when output="≢" state="Multi_key_identical"/>
			<when output="⊄" state="Multi_key_includedin"/>
			<when output="⊅" state="Multi_key_includes"/>
			<when output="≮" state="Multi_key_less"/>
			<when output="≰" state="Multi_key_lessthanequal"/>
			<when output="⊬" state="Multi_key_righttack"/>
		</action>
		<action id="͂">
			<when output="͂" state="none"/>
			<when next="Multi_key_Greek_iota_U0342" state="Multi_key_Greek_iota"/>
			<when output="῏" state="Multi_key_U1FBF"/>
			<when output="῟" state="Multi_key_U1FFE"/>
			<when output="῁" state="Multi_key_diaeresis"/>
		</action>
		<action id="Α">
			<when output="Α" state="none"/>
			<when output="ᾼ" state="Multi_key_Greek_iota"/>
			<when output="ᾈ" state="Multi_key_Greek_iota_U0313"/>
			<when output="ᾉ" state="Multi_key_Greek_iota_U0314"/>
			<when output="ᾎ" state="Multi_key_Greek_iota_U0342_U0313"/>
			<when output="ᾏ" state="Multi_key_Greek_iota_U0342_U0314"/>
			<when output="ᾏ" state="Multi_key_Greek_iota_U0342_dead_dasia"/>
			<when output="ᾎ" state="Multi_key_Greek_iota_U0342_dead_psili"/>
			<when output="ᾏ" state="Multi_key_Greek_iota_U0342_parenleft"/>
			<when output="ᾎ" state="Multi_key_Greek_iota_U0342_parenright"/>
			<when output="ᾌ" state="Multi_key_Greek_iota_acute_U0313"/>
			<when output="ᾍ" state="Multi_key_Greek_iota_acute_U0314"/>
			<when output="ᾍ" state="Multi_key_Greek_iota_acute_dead_dasia"/>
			<when output="ᾌ" state="Multi_key_Greek_iota_acute_dead_psili"/>
			<when output="ᾍ" state="Multi_key_Greek_iota_acute_parenleft"/>
			<when output="ᾌ" state="Multi_key_Greek_iota_acute_parenright"/>
			<when output="ᾌ" state="Multi_key_Greek_iota_apostrophe_U0313"/>
			<when output="ᾍ" state="Multi_key_Greek_iota_apostrophe_U0314"/>
			<when output="ᾍ" state="Multi_key_Greek_iota_apostrophe_dead_dasia"/>
			<when output="ᾌ" state="Multi_key_Greek_iota_apostrophe_dead_psili"/>
			<when output="ᾍ" state="Multi_key_Greek_iota_apostrophe_parenleft"/>
			<when output="ᾌ" state="Multi_key_Greek_iota_apostrophe_parenright"/>
			<when output="ᾎ" state="Multi_key_Greek_iota_asciitilde_U0313"/>
			<when output="ᾏ" state="Multi_key_Greek_iota_asciitilde_U0314"/>
			<when output="ᾏ" state="Multi_key_Greek_iota_asciitilde_dead_dasia"/>
			<when output="ᾎ" state="Multi_key_Greek_iota_asciitilde_dead_psili"/>
			<when output="ᾏ" state="Multi_key_Greek_iota_asciitilde_parenleft"/>
			<when output="ᾎ" state="Multi_key_Greek_iota_asciitilde_parenright"/>
			<when output="ᾌ" state="Multi_key_Greek_iota_combining_acute_U0313"/>
			<when output="ᾍ" state="Multi_key_Greek_iota_combining_acute_U0314"/>
			<when output="ᾍ" state="Multi_key_Greek_iota_combining_acute_dead_dasia"/>
			<when output="ᾌ" state="Multi_key_Greek_iota_combining_acute_dead_psili"/>
			<when output="ᾍ" state="Multi_key_Greek_iota_combining_acute_parenleft"/>
			<when output="ᾌ" state="Multi_key_Greek_iota_combining_acute_parenright"/>
			<when output="ᾊ" state="Multi_key_Greek_iota_combining_grave_U0313"/>
			<when output="ᾋ" state="Multi_key_Greek_iota_combining_grave_U0314"/>
			<when output="ᾋ" state="Multi_key_Greek_iota_combining_grave_dead_dasia"/>
			<when output="ᾊ" state="Multi_key_Greek_iota_combining_grave_dead_psili"/>
			<when output="ᾋ" state="Multi_key_Greek_iota_combining_grave_parenleft"/>
			<when output="ᾊ" state="Multi_key_Greek_iota_combining_grave_parenright"/>
			<when output="ᾌ" state="Multi_key_Greek_iota_dead_acute_U0313"/>
			<when output="ᾍ" state="Multi_key_Greek_iota_dead_acute_U0314"/>
			<when output="ᾍ" state="Multi_key_Greek_iota_dead_acute_dead_dasia"/>
			<when output="ᾌ" state="Multi_key_Greek_iota_dead_acute_dead_psili"/>
			<when output="ᾍ" state="Multi_key_Greek_iota_dead_acute_parenleft"/>
			<when output="ᾌ" state="Multi_key_Greek_iota_dead_acute_parenright"/>
			<when output="ᾉ" state="Multi_key_Greek_iota_dead_dasia"/>
			<when output="ᾊ" state="Multi_key_Greek_iota_dead_grave_U0313"/>
			<when output="ᾋ" state="Multi_key_Greek_iota_dead_grave_U0314"/>
			<when output="ᾋ" state="Multi_key_Greek_iota_dead_grave_dead_dasia"/>
			<when output="ᾊ" state="Multi_key_Greek_iota_dead_grave_dead_psili"/>
			<when output="ᾋ" state="Multi_key_Greek_iota_dead_grave_parenleft"/>
			<when output="ᾊ" state="Multi_key_Greek_iota_dead_grave_parenright"/>
			<when output="ᾈ" state="Multi_key_Greek_iota_dead_psili"/>
			<when output="ᾎ" state="Multi_key_Greek_iota_dead_tilde_U0313"/>
			<when output="ᾏ" state="Multi_key_Greek_iota_dead_tilde_U0314"/>
			<when output="ᾏ" state="Multi_key_Greek_iota_dead_tilde_dead_dasia"/>
			<when output="ᾎ" state="Multi_key_Greek_iota_dead_tilde_dead_psili"/>
			<when output="ᾏ" state="Multi_key_Greek_iota_dead_tilde_parenleft"/>
			<when output="ᾎ" state="Multi_key_Greek_iota_dead_tilde_parenright"/>
			<when output="ᾊ" state="Multi_key_Greek_iota_grave_U0313"/>
			<when output="ᾋ" state="Multi_key_Greek_iota_grave_U0314"/>
			<when output="ᾋ" state="Multi_key_Greek_iota_grave_dead_dasia"/>
			<when output="ᾊ" state="Multi_key_Greek_iota_grave_dead_psili"/>
			<when output="ᾋ" state="Multi_key_Greek_iota_grave_parenleft"/>
			<when output="ᾊ" state="Multi_key_Greek_iota_grave_parenright"/>
			<when output="ᾉ" state="Multi_key_Greek_iota_parenleft"/>
			<when output="ᾈ" state="Multi_key_Greek_iota_parenright"/>
			<when output="Ᾰ" state="Multi_key_U"/>
			<when output="Ά" state="Multi_key_acute"/>
			<when output="Ἄ" state="Multi_key_acute_U0313"/>
			<when output="Ἅ" state="Multi_key_acute_U0314"/>
			<when output="Ἅ" state="Multi_key_acute_dead_dasia"/>
			<when output="Ἄ" state="Multi_key_acute_dead_psili"/>
			<when output="Ἅ" state="Multi_key_acute_parenleft"/>
			<when output="Ἄ" state="Multi_key_acute_parenright"/>
			<when output="Ά" state="Multi_key_apostrophe"/>
			<when output="Ἄ" state="Multi_key_apostrophe_U0313"/>
			<when output="Ἅ" state="Multi_key_apostrophe_U0314"/>
			<when output="Ἅ" state="Multi_key_apostrophe_dead_dasia"/>
			<when output="Ἄ" state="Multi_key_apostrophe_dead_psili"/>
			<when output="Ἅ" state="Multi_key_apostrophe_parenleft"/>
			<when output="Ἄ" state="Multi_key_apostrophe_parenright"/>
			<when output="Ἆ" state="Multi_key_asciitilde_U0313"/>
			<when output="Ἇ" state="Multi_key_asciitilde_U0314"/>
			<when output="Ἇ" state="Multi_key_asciitilde_dead_dasia"/>
			<when output="Ἆ" state="Multi_key_asciitilde_dead_psili"/>
			<when output="Ἇ" state="Multi_key_asciitilde_parenleft"/>
			<when output="Ἆ" state="Multi_key_asciitilde_parenright"/>
			<when output="Ᾰ" state="Multi_key_b"/>
			<when output="Ὰ" state="Multi_key_grave"/>
			<when output="Ἂ" state="Multi_key_grave_U0313"/>
			<when output="Ἃ" state="Multi_key_grave_U0314"/>
			<when output="Ἃ" state="Multi_key_grave_dead_dasia"/>
			<when output="Ἂ" state="Multi_key_grave_dead_psili"/>
			<when output="Ἃ" state="Multi_key_grave_parenleft"/>
			<when output="Ἂ" state="Multi_key_grave_parenright"/>
			<when output="Ᾱ" state="Multi_key_macron"/>
			<when output="Ἁ" state="Multi_key_parenleft"/>
			<when output="Ἀ" state="Multi_key_parenright"/>
			<when output="Ᾱ" state="Multi_key_underscore"/>
			<when output="Ᾱ" state="macron"/>
		</action>
		<action id="Ε">
			<when output="Ε" state="none"/>
			<when output="Έ" state="Multi_key_acute"/>
			<when output="Ἔ" state="Multi_key_acute_U0313"/>
			<when output="Ἕ" state="Multi_key_acute_U0314"/>
			<when output="Ἕ" state="Multi_key_acute_dead_dasia"/>
			<when output="Ἔ" state="Multi_key_acute_dead_psili"/>
			<when output="Ἕ" state="Multi_key_acute_parenleft"/>
			<when output="Ἔ" state="Multi_key_acute_parenright"/>
			<when output="Έ" state="Multi_key_apostrophe"/>
			<when output="Ἔ" state="Multi_key_apostrophe_U0313"/>
			<when output="Ἕ" state="Multi_key_apostrophe_U0314"/>
			<when output="Ἕ" state="Multi_key_apostrophe_dead_dasia"/>
			<when output="Ἔ" state="Multi_key_apostrophe_dead_psili"/>
			<when output="Ἕ" state="Multi_key_apostrophe_parenleft"/>
			<when output="Ἔ" state="Multi_key_apostrophe_parenright"/>
			<when output="Ὲ" state="Multi_key_grave"/>
			<when output="Ἒ" state="Multi_key_grave_U0313"/>
			<when output="Ἓ" state="Multi_key_grave_U0314"/>
			<when output="Ἓ" state="Multi_key_grave_dead_dasia"/>
			<when output="Ἒ" state="Multi_key_grave_dead_psili"/>
			<when output="Ἓ" state="Multi_key_grave_parenleft"/>
			<when output="Ἒ" state="Multi_key_grave_parenright"/>
			<when output="Ἑ" state="Multi_key_parenleft"/>
			<when output="Ἐ" state="Multi_key_parenright"/>
		</action>
		<action id="Η">
			<when output="Η" state="none"/>
			<when output="ῌ" state="Multi_key_Greek_iota"/>
			<when output="ᾘ" state="Multi_key_Greek_iota_U0313"/>
			<when output="ᾙ" state="Multi_key_Greek_iota_U0314"/>
			<when output="ᾞ" state="Multi_key_Greek_iota_U0342_U0313"/>
			<when output="ᾟ" state="Multi_key_Greek_iota_U0342_U0314"/>
			<when output="ᾟ" state="Multi_key_Greek_iota_U0342_dead_dasia"/>
			<when output="ᾞ" state="Multi_key_Greek_iota_U0342_dead_psili"/>
			<when output="ᾟ" state="Multi_key_Greek_iota_U0342_parenleft"/>
			<when output="ᾞ" state="Multi_key_Greek_iota_U0342_parenright"/>
			<when output="ᾜ" state="Multi_key_Greek_iota_acute_U0313"/>
			<when output="ᾝ" state="Multi_key_Greek_iota_acute_U0314"/>
			<when output="ᾝ" state="Multi_key_Greek_iota_acute_dead_dasia"/>
			<when output="ᾜ" state="Multi_key_Greek_iota_acute_dead_psili"/>
			<when output="ᾝ" state="Multi_key_Greek_iota_acute_parenleft"/>
			<when output="ᾜ" state="Multi_key_Greek_iota_acute_parenright"/>
			<when output="ᾜ" state="Multi_key_Greek_iota_apostrophe_U0313"/>
			<when output="ᾝ" state="Multi_key_Greek_iota_apostrophe_U0314"/>
			<when output="ᾝ" state="Multi_key_Greek_iota_apostrophe_dead_dasia"/>
			<when output="ᾜ" state="Multi_key_Greek_iota_apostrophe_dead_psili"/>
			<when output="ᾝ" state="Multi_key_Greek_iota_apostrophe_parenleft"/>
			<when output="ᾜ" state="Multi_key_Greek_iota_apostrophe_parenright"/>
			<when output="ᾞ" state="Multi_key_Greek_iota_asciitilde_U0313"/>
			<when output="ᾟ" state="Multi_key_Greek_iota_asciitilde_U0314"/>
			<when output="ᾟ" state="Multi_key_Greek_iota_asciitilde_dead_dasia"/>
			<when output="ᾞ" state="Multi_key_Greek_iota_asciitilde_dead_psili"/>
			<when output="ᾟ" state="Multi_key_Greek_iota_asciitilde_parenleft"/>
			<when output="ᾞ" state="Multi_key_Greek_iota_asciitilde_parenright"/>
			<when output="ᾜ" state="Multi_key_Greek_iota_combining_acute_U0313"/>
			<when output="ᾝ" state="Multi_key_Greek_iota_combining_acute_U0314"/>
			<when output="ᾝ" state="Multi_key_Greek_iota_combining_acute_dead_dasia"/>
			<when output="ᾜ" state="Multi_key_Greek_iota_combining_acute_dead_psili"/>
			<when output="ᾝ" state="Multi_key_Greek_iota_combining_acute_parenleft"/>
			<when output="ᾜ" state="Multi_key_Greek_iota_combining_acute_parenright"/>
			<when output="ᾚ" state="Multi_key_Greek_iota_combining_grave_U0313"/>
			<when output="ᾛ" state="Multi_key_Greek_iota_combining_grave_U0314"/>
			<when output="ᾛ" state="Multi_key_Greek_iota_combining_grave_dead_dasia"/>
			<when output="ᾚ" state="Multi_key_Greek_iota_combining_grave_dead_psili"/>
			<when output="ᾛ" state="Multi_key_Greek_iota_combining_grave_parenleft"/>
			<when output="ᾚ" state="Multi_key_Greek_iota_combining_grave_parenright"/>
			<when output="ᾜ" state="Multi_key_Greek_iota_dead_acute_U0313"/>
			<when output="ᾝ" state="Multi_key_Greek_iota_dead_acute_U0314"/>
			<when output="ᾝ" state="Multi_key_Greek_iota_dead_acute_dead_dasia"/>
			<when output="ᾜ" state="Multi_key_Greek_iota_dead_acute_dead_psili"/>
			<when output="ᾝ" state="Multi_key_Greek_iota_dead_acute_parenleft"/>
			<when output="ᾜ" state="Multi_key_Greek_iota_dead_acute_parenright"/>
			<when output="ᾙ" state="Multi_key_Greek_iota_dead_dasia"/>
			<when output="ᾚ" state="Multi_key_Greek_iota_dead_grave_U0313"/>
			<when output="ᾛ" state="Multi_key_Greek_iota_dead_grave_U0314"/>
			<when output="ᾛ" state="Multi_key_Greek_iota_dead_grave_dead_dasia"/>
			<when output="ᾚ" state="Multi_key_Greek_iota_dead_grave_dead_psili"/>
			<when output="ᾛ" state="Multi_key_Greek_iota_dead_grave_parenleft"/>
			<when output="ᾚ" state="Multi_key_Greek_iota_dead_grave_parenright"/>
			<when output="ᾘ" state="Multi_key_Greek_iota_dead_psili"/>
			<when output="ᾞ" state="Multi_key_Greek_iota_dead_tilde_U0313"/>
			<when output="ᾟ" state="Multi_key_Greek_iota_dead_tilde_U0314"/>
			<when output="ᾟ" state="Multi_key_Greek_iota_dead_tilde_dead_dasia"/>
			<when output="ᾞ" state="Multi_key_Greek_iota_dead_tilde_dead_psili"/>
			<when output="ᾟ" state="Multi_key_Greek_iota_dead_tilde_parenleft"/>
			<when output="ᾞ" state="Multi_key_Greek_iota_dead_tilde_parenright"/>
			<when output="ᾚ" state="Multi_key_Greek_iota_grave_U0313"/>
			<when output="ᾛ" state="Multi_key_Greek_iota_grave_U0314"/>
			<when output="ᾛ" state="Multi_key_Greek_iota_grave_dead_dasia"/>
			<when output="ᾚ" state="Multi_key_Greek_iota_grave_dead_psili"/>
			<when output="ᾛ" state="Multi_key_Greek_iota_grave_parenleft"/>
			<when output="ᾚ" state="Multi_key_Greek_iota_grave_parenright"/>
			<when output="ᾙ" state="Multi_key_Greek_iota_parenleft"/>
			<when output="ᾘ" state="Multi_key_Greek_iota_parenright"/>
			<when output="Ή" state="Multi_key_acute"/>
			<when output="Ἤ" state="Multi_key_acute_U0313"/>
			<when output="Ἥ" state="Multi_key_acute_U0314"/>
			<when output="Ἥ" state="Multi_key_acute_dead_dasia"/>
			<when output="Ἤ" state="Multi_key_acute_dead_psili"/>
			<when output="Ἥ" state="Multi_key_acute_parenleft"/>
			<when output="Ἤ" state="Multi_key_acute_parenright"/>
			<when output="Ή" state="Multi_key_apostrophe"/>
			<when output="Ἤ" state="Multi_key_apostrophe_U0313"/>
			<when output="Ἥ" state="Multi_key_apostrophe_U0314"/>
			<when output="Ἥ" state="Multi_key_apostrophe_dead_dasia"/>
			<when output="Ἤ" state="Multi_key_apostrophe_dead_psili"/>
			<when output="Ἥ" state="Multi_key_apostrophe_parenleft"/>
			<when output="Ἤ" state="Multi_key_apostrophe_parenright"/>
			<when output="Ἦ" state="Multi_key_asciitilde_U0313"/>
			<when output="Ἧ" state="Multi_key_asciitilde_U0314"/>
			<when output="Ἧ" state="Multi_key_asciitilde_dead_dasia"/>
			<when output="Ἦ" state="Multi_key_asciitilde_dead_psili"/>
			<when output="Ἧ" state="Multi_key_asciitilde_parenleft"/>
			<when output="Ἦ" state="Multi_key_asciitilde_parenright"/>
			<when output="Ὴ" state="Multi_key_grave"/>
			<when output="Ἢ" state="Multi_key_grave_U0313"/>
			<when output="Ἣ" state="Multi_key_grave_U0314"/>
			<when output="Ἣ" state="Multi_key_grave_dead_dasia"/>
			<when output="Ἢ" state="Multi_key_grave_dead_psili"/>
			<when output="Ἣ" state="Multi_key_grave_parenleft"/>
			<when output="Ἢ" state="Multi_key_grave_parenright"/>
			<when output="Ἡ" state="Multi_key_parenleft"/>
			<when output="Ἠ" state="Multi_key_parenright"/>
		</action>
		<action id="Ι">
			<when output="Ι" state="none"/>
			<when output="Ῐ" state="Multi_key_U"/>
			<when output="Ί" state="Multi_key_acute"/>
			<when output="Ἴ" state="Multi_key_acute_U0313"/>
			<when output="Ἵ" state="Multi_key_acute_U0314"/>
			<when output="Ἵ" state="Multi_key_acute_dead_dasia"/>
			<when output="Ἴ" state="Multi_key_acute_dead_psili"/>
			<when output="Ἵ" state="Multi_key_acute_parenleft"/>
			<when output="Ἴ" state="Multi_key_acute_parenright"/>
			<when output="Ί" state="Multi_key_apostrophe"/>
			<when output="Ἴ" state="Multi_key_apostrophe_U0313"/>
			<when output="Ἵ" state="Multi_key_apostrophe_U0314"/>
			<when output="Ἵ" state="Multi_key_apostrophe_dead_dasia"/>
			<when output="Ἴ" state="Multi_key_apostrophe_dead_psili"/>
			<when output="Ἵ" state="Multi_key_apostrophe_parenleft"/>
			<when output="Ἴ" state="Multi_key_apostrophe_parenright"/>
			<when output="Ἶ" state="Multi_key_asciitilde_U0313"/>
			<when output="Ἷ" state="Multi_key_asciitilde_U0314"/>
			<when output="Ἷ" state="Multi_key_asciitilde_dead_dasia"/>
			<when output="Ἶ" state="Multi_key_asciitilde_dead_psili"/>
			<when output="Ἷ" state="Multi_key_asciitilde_parenleft"/>
			<when output="Ἶ" state="Multi_key_asciitilde_parenright"/>
			<when output="Ῐ" state="Multi_key_b"/>
			<when output="Ὶ" state="Multi_key_grave"/>
			<when output="Ἲ" state="Multi_key_grave_U0313"/>
			<when output="Ἳ" state="Multi_key_grave_U0314"/>
			<when output="Ἳ" state="Multi_key_grave_dead_dasia"/>
			<when output="Ἲ" state="Multi_key_grave_dead_psili"/>
			<when output="Ἳ" state="Multi_key_grave_parenleft"/>
			<when output="Ἲ" state="Multi_key_grave_parenright"/>
			<when output="Ῑ" state="Multi_key_macron"/>
			<when output="Ἱ" state="Multi_key_parenleft"/>
			<when output="Ἰ" state="Multi_key_parenright"/>
			<when output="Ϊ" state="Multi_key_quotedbl"/>
			<when output="Ῑ" state="Multi_key_underscore"/>
			<when output="Ῑ" state="macron"/>
		</action>
		<action id="Ο">
			<when output="Ο" state="none"/>
			<when output="Ό" state="Multi_key_acute"/>
			<when output="Ὄ" state="Multi_key_acute_U0313"/>
			<when output="Ὅ" state="Multi_key_acute_U0314"/>
			<when output="Ὅ" state="Multi_key_acute_dead_dasia"/>
			<when output="Ὄ" state="Multi_key_acute_dead_psili"/>
			<when output="Ὅ" state="Multi_key_acute_parenleft"/>
			<when output="Ὄ" state="Multi_key_acute_parenright"/>
			<when output="Ό" state="Multi_key_apostrophe"/>
			<when output="Ὄ" state="Multi_key_apostrophe_U0313"/>
			<when output="Ὅ" state="Multi_key_apostrophe_U0314"/>
			<when output="Ὅ" state="Multi_key_apostrophe_dead_dasia"/>
			<when output="Ὄ" state="Multi_key_apostrophe_dead_psili"/>
			<when output="Ὅ" state="Multi_key_apostrophe_parenleft"/>
			<when output="Ὄ" state="Multi_key_apostrophe_parenright"/>
			<when output="Ὸ" state="Multi_key_grave"/>
			<when output="Ὂ" state="Multi_key_grave_U0313"/>
			<when output="Ὃ" state="Multi_key_grave_U0314"/>
			<when output="Ὃ" state="Multi_key_grave_dead_dasia"/>
			<when output="Ὂ" state="Multi_key_grave_dead_psili"/>
			<when output="Ὃ" state="Multi_key_grave_parenleft"/>
			<when output="Ὂ" state="Multi_key_grave_parenright"/>
			<when output="Ὁ" state="Multi_key_parenleft"/>
			<when output="Ὀ" state="Multi_key_parenright"/>
		</action>
		<action id="Ρ">
			<when output="Ρ" state="none"/>
			<when output="Ῥ" state="Multi_key_parenleft"/>
		</action>
		<action id="Υ">
			<when output="Υ" state="none"/>
			<when output="Ῠ" state="Multi_key_U"/>
			<when output="Ύ" state="Multi_key_acute"/>
			<when output="Ὕ" state="Multi_key_acute_U0314"/>
			<when output="Ὕ" state="Multi_key_acute_dead_dasia"/>
			<when output="Ὕ" state="Multi_key_acute_parenleft"/>
			<when output="Ύ" state="Multi_key_apostrophe"/>
			<when output="Ὕ" state="Multi_key_apostrophe_U0314"/>
			<when output="Ὕ" state="Multi_key_apostrophe_dead_dasia"/>
			<when output="Ὕ" state="Multi_key_apostrophe_parenleft"/>
			<when output="Ὗ" state="Multi_key_asciitilde_U0314"/>
			<when output="Ὗ" state="Multi_key_asciitilde_dead_dasia"/>
			<when output="Ὗ" state="Multi_key_asciitilde_parenleft"/>
			<when output="Ῠ" state="Multi_key_b"/>
			<when output="Ὺ" state="Multi_key_grave"/>
			<when output="Ὓ" state="Multi_key_grave_U0314"/>
			<when output="Ὓ" state="Multi_key_grave_dead_dasia"/>
			<when output="Ὓ" state="Multi_key_grave_parenleft"/>
			<when output="Ῡ" state="Multi_key_macron"/>
			<when output="Ὑ" state="Multi_key_parenleft"/>
			<when output="Ϋ" state="Multi_key_quotedbl"/>
			<when output="Ῡ" state="Multi_key_underscore"/>
			<when output="ϒ" state="hook"/>
			<when output="Ῡ" state="macron"/>
		</action>
		<action id="Ω">
			<when output="Ω" state="none"/>
			<when output="ῼ" state="Multi_key_Greek_iota"/>
			<when output="ᾨ" state="Multi_key_Greek_iota_U0313"/>
			<when output="ᾩ" state="Multi_key_Greek_iota_U0314"/>
			<when output="ᾮ" state="Multi_key_Greek_iota_U0342_U0313"/>
			<when output="ᾯ" state="Multi_key_Greek_iota_U0342_U0314"/>
			<when output="ᾯ" state="Multi_key_Greek_iota_U0342_dead_dasia"/>
			<when output="ᾮ" state="Multi_key_Greek_iota_U0342_dead_psili"/>
			<when output="ᾯ" state="Multi_key_Greek_iota_U0342_parenleft"/>
			<when output="ᾮ" state="Multi_key_Greek_iota_U0342_parenright"/>
			<when output="ᾬ" state="Multi_key_Greek_iota_acute_U0313"/>
			<when output="ᾭ" state="Multi_key_Greek_iota_acute_U0314"/>
			<when output="ᾭ" state="Multi_key_Greek_iota_acute_dead_dasia"/>
			<when output="ᾬ" state="Multi_key_Greek_iota_acute_dead_psili"/>
			<when output="ᾭ" state="Multi_key_Greek_iota_acute_parenleft"/>
			<when output="ᾬ" state="Multi_key_Greek_iota_acute_parenright"/>
			<when output="ᾬ" state="Multi_key_Greek_iota_apostrophe_U0313"/>
			<when output="ᾭ" state="Multi_key_Greek_iota_apostrophe_U0314"/>
			<when output="ᾭ" state="Multi_key_Greek_iota_apostrophe_dead_dasia"/>
			<when output="ᾬ" state="Multi_key_Greek_iota_apostrophe_dead_psili"/>
			<when output="ᾭ" state="Multi_key_Greek_iota_apostrophe_parenleft"/>
			<when output="ᾬ" state="Multi_key_Greek_iota_apostrophe_parenright"/>
			<when output="ᾮ" state="Multi_key_Greek_iota_asciitilde_U0313"/>
			<when output="ᾯ" state="Multi_key_Greek_iota_asciitilde_U0314"/>
			<when output="ᾯ" state="Multi_key_Greek_iota_asciitilde_dead_dasia"/>
			<when output="ᾮ" state="Multi_key_Greek_iota_asciitilde_dead_psili"/>
			<when output="ᾯ" state="Multi_key_Greek_iota_asciitilde_parenleft"/>
			<when output="ᾮ" state="Multi_key_Greek_iota_asciitilde_parenright"/>
			<when output="ᾬ" state="Multi_key_Greek_iota_combining_acute_U0313"/>
			<when output="ᾭ" state="Multi_key_Greek_iota_combining_acute_U0314"/>
			<when output="ᾭ" state="Multi_key_Greek_iota_combining_acute_dead_dasia"/>
			<when output="ᾬ" state="Multi_key_Greek_iota_combining_acute_dead_psili"/>
			<when output="ᾭ" state="Multi_key_Greek_iota_combining_acute_parenleft"/>
			<when output="ᾬ" state="Multi_key_Greek_iota_combining_acute_parenright"/>
			<when output="ᾪ" state="Multi_key_Greek_iota_combining_grave_U0313"/>
			<when output="ᾫ" state="Multi_key_Greek_iota_combining_grave_U0314"/>
			<when output="ᾫ" state="Multi_key_Greek_iota_combining_grave_dead_dasia"/>
			<when output="ᾪ" state="Multi_key_Greek_iota_combining_grave_dead_psili"/>
			<when output="ᾫ" state="Multi_key_Greek_iota_combining_grave_parenleft"/>
			<when output="ᾪ" state="Multi_key_Greek_iota_combining_grave_parenright"/>
			<when output="ᾬ" state="Multi_key_Greek_iota_dead_acute_U0313"/>
			<when output="ᾭ" state="Multi_key_Greek_iota_dead_acute_U0314"/>
			<when output="ᾭ" state="Multi_key_Greek_iota_dead_acute_dead_dasia"/>
			<when output="ᾬ" state="Multi_key_Greek_iota_dead_acute_dead_psili"/>
			<when output="ᾭ" state="Multi_key_Greek_iota_dead_acute_parenleft"/>
			<when output="ᾬ" state="Multi_key_Greek_iota_dead_acute_parenright"/>
			<when output="ᾩ" state="Multi_key_Greek_iota_dead_dasia"/>
			<when output="ᾪ" state="Multi_key_Greek_iota_dead_grave_U0313"/>
			<when output="ᾫ" state="Multi_key_Greek_iota_dead_grave_U0314"/>
			<when output="ᾫ" state="Multi_key_Greek_iota_dead_grave_dead_dasia"/>
			<when output="ᾪ" state="Multi_key_Greek_iota_dead_grave_dead_psili"/>
			<when output="ᾫ" state="Multi_key_Greek_iota_dead_grave_parenleft"/>
			<when output="ᾪ" state="Multi_key_Greek_iota_dead_grave_parenright"/>
			<when output="ᾨ" state="Multi_key_Greek_iota_dead_psili"/>
			<when output="ᾮ" state="Multi_key_Greek_iota_dead_tilde_U0313"/>
			<when output="ᾯ" state="Multi_key_Greek_iota_dead_tilde_U0314"/>
			<when output="ᾯ" state="Multi_key_Greek_iota_dead_tilde_dead_dasia"/>
			<when output="ᾮ" state="Multi_key_Greek_iota_dead_tilde_dead_psili"/>
			<when output="ᾯ" state="Multi_key_Greek_iota_dead_tilde_parenleft"/>
			<when output="ᾮ" state="Multi_key_Greek_iota_dead_tilde_parenright"/>
			<when output="ᾪ" state="Multi_key_Greek_iota_grave_U0313"/>
			<when output="ᾫ" state="Multi_key_Greek_iota_grave_U0314"/>
			<when output="ᾫ" state="Multi_key_Greek_iota_grave_dead_dasia"/>
			<when output="ᾪ" state="Multi_key_Greek_iota_grave_dead_psili"/>
			<when output="ᾫ" state="Multi_key_Greek_iota_grave_parenleft"/>
			<when output="ᾪ" state="Multi_key_Greek_iota_grave_parenright"/>
			<when output="ᾩ" state="Multi_key_Greek_iota_parenleft"/>
			<when output="ᾨ" state="Multi_key_Greek_iota_parenright"/>
			<when output="Ώ" state="Multi_key_acute"/>
			<when output="Ὤ" state="Multi_key_acute_U0313"/>
			<when output="Ὥ" state="Multi_key_acute_U0314"/>
			<when output="Ὥ" state="Multi_key_acute_dead_dasia"/>
			<when output="Ὤ" state="Multi_key_acute_dead_psili"/>
			<when output="Ὥ" state="Multi_key_acute_parenleft"/>
			<when output="Ὤ" state="Multi_key_acute_parenright"/>
			<when output="Ώ" state="Multi_key_apostrophe"/>
			<when output="Ὤ" state="Multi_key_apostrophe_U0313"/>
			<when output="Ὥ" state="Multi_key_apostrophe_U0314"/>
			<when output="Ὥ" state="Multi_key_apostrophe_dead_dasia"/>
			<when output="Ὤ" state="Multi_key_apostrophe_dead_psili"/>
			<when output="Ὥ" state="Multi_key_apostrophe_parenleft"/>
			<when output="Ὤ" state="Multi_key_apostrophe_parenright"/>
			<when output="Ὦ" state="Multi_key_asciitilde_U0313"/>
			<when output="Ὧ" state="Multi_key_asciitilde_U0314"/>
			<when output="Ὧ" state="Multi_key_asciitilde_dead_dasia"/>
			<when output="Ὦ" state="Multi_key_asciitilde_dead_psili"/>
			<when output="Ὧ" state="Multi_key_asciitilde_parenleft"/>
			<when output="Ὦ" state="Multi_key_asciitilde_parenright"/>
			<when output="Ὼ" state="Multi_key_grave"/>
			<when output="Ὢ" state="Multi_key_grave_U0313"/>
			<when output="Ὣ" state="Multi_key_grave_U0314"/>
			<when output="Ὣ" state="Multi_key_grave_dead_dasia"/>
			<when output="Ὢ" state="Multi_key_grave_dead_psili"/>
			<when output="Ὣ" state="Multi_key_grave_parenleft"/>
			<when output="Ὢ" state="Multi_key_grave_parenright"/>
			<when output="Ὡ" state="Multi_key_parenleft"/>
			<when output="Ὠ" state="Multi_key_parenright"/>
		</action>
		<action id="ά">
			<when output="ά" state="none"/>
			<when output="ᾴ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="ή">
			<when output="ή" state="none"/>
			<when output="ῄ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="α">
			<when output="α" state="none"/>
			<when output="ᾳ" state="Multi_key_Greek_iota"/>
			<when output="ᾀ" state="Multi_key_Greek_iota_U0313"/>
			<when output="ᾁ" state="Multi_key_Greek_iota_U0314"/>
			<when output="ᾷ" state="Multi_key_Greek_iota_U0342"/>
			<when output="ᾆ" state="Multi_key_Greek_iota_U0342_U0313"/>
			<when output="ᾇ" state="Multi_key_Greek_iota_U0342_U0314"/>
			<when output="ᾇ" state="Multi_key_Greek_iota_U0342_dead_dasia"/>
			<when output="ᾆ" state="Multi_key_Greek_iota_U0342_dead_psili"/>
			<when output="ᾇ" state="Multi_key_Greek_iota_U0342_parenleft"/>
			<when output="ᾆ" state="Multi_key_Greek_iota_U0342_parenright"/>
			<when output="ᾴ" state="Multi_key_Greek_iota_acute"/>
			<when output="ᾄ" state="Multi_key_Greek_iota_acute_U0313"/>
			<when output="ᾅ" state="Multi_key_Greek_iota_acute_U0314"/>
			<when output="ᾅ" state="Multi_key_Greek_iota_acute_dead_dasia"/>
			<when output="ᾄ" state="Multi_key_Greek_iota_acute_dead_psili"/>
			<when output="ᾅ" state="Multi_key_Greek_iota_acute_parenleft"/>
			<when output="ᾄ" state="Multi_key_Greek_iota_acute_parenright"/>
			<when output="ᾴ" state="Multi_key_Greek_iota_apostrophe"/>
			<when output="ᾄ" state="Multi_key_Greek_iota_apostrophe_U0313"/>
			<when output="ᾅ" state="Multi_key_Greek_iota_apostrophe_U0314"/>
			<when output="ᾅ" state="Multi_key_Greek_iota_apostrophe_dead_dasia"/>
			<when output="ᾄ" state="Multi_key_Greek_iota_apostrophe_dead_psili"/>
			<when output="ᾅ" state="Multi_key_Greek_iota_apostrophe_parenleft"/>
			<when output="ᾄ" state="Multi_key_Greek_iota_apostrophe_parenright"/>
			<when output="ᾷ" state="Multi_key_Greek_iota_asciitilde"/>
			<when output="ᾆ" state="Multi_key_Greek_iota_asciitilde_U0313"/>
			<when output="ᾇ" state="Multi_key_Greek_iota_asciitilde_U0314"/>
			<when output="ᾇ" state="Multi_key_Greek_iota_asciitilde_dead_dasia"/>
			<when output="ᾆ" state="Multi_key_Greek_iota_asciitilde_dead_psili"/>
			<when output="ᾇ" state="Multi_key_Greek_iota_asciitilde_parenleft"/>
			<when output="ᾆ" state="Multi_key_Greek_iota_asciitilde_parenright"/>
			<when output="ᾴ" state="Multi_key_Greek_iota_combining_acute"/>
			<when output="ᾄ" state="Multi_key_Greek_iota_combining_acute_U0313"/>
			<when output="ᾅ" state="Multi_key_Greek_iota_combining_acute_U0314"/>
			<when output="ᾅ" state="Multi_key_Greek_iota_combining_acute_dead_dasia"/>
			<when output="ᾄ" state="Multi_key_Greek_iota_combining_acute_dead_psili"/>
			<when output="ᾅ" state="Multi_key_Greek_iota_combining_acute_parenleft"/>
			<when output="ᾄ" state="Multi_key_Greek_iota_combining_acute_parenright"/>
			<when output="ᾲ" state="Multi_key_Greek_iota_combining_grave"/>
			<when output="ᾂ" state="Multi_key_Greek_iota_combining_grave_U0313"/>
			<when output="ᾃ" state="Multi_key_Greek_iota_combining_grave_U0314"/>
			<when output="ᾃ" state="Multi_key_Greek_iota_combining_grave_dead_dasia"/>
			<when output="ᾂ" state="Multi_key_Greek_iota_combining_grave_dead_psili"/>
			<when output="ᾃ" state="Multi_key_Greek_iota_combining_grave_parenleft"/>
			<when output="ᾂ" state="Multi_key_Greek_iota_combining_grave_parenright"/>
			<when output="ᾴ" state="Multi_key_Greek_iota_dead_acute"/>
			<when output="ᾄ" state="Multi_key_Greek_iota_dead_acute_U0313"/>
			<when output="ᾅ" state="Multi_key_Greek_iota_dead_acute_U0314"/>
			<when output="ᾅ" state="Multi_key_Greek_iota_dead_acute_dead_dasia"/>
			<when output="ᾄ" state="Multi_key_Greek_iota_dead_acute_dead_psili"/>
			<when output="ᾅ" state="Multi_key_Greek_iota_dead_acute_parenleft"/>
			<when output="ᾄ" state="Multi_key_Greek_iota_dead_acute_parenright"/>
			<when output="ᾁ" state="Multi_key_Greek_iota_dead_dasia"/>
			<when output="ᾲ" state="Multi_key_Greek_iota_dead_grave"/>
			<when output="ᾂ" state="Multi_key_Greek_iota_dead_grave_U0313"/>
			<when output="ᾃ" state="Multi_key_Greek_iota_dead_grave_U0314"/>
			<when output="ᾃ" state="Multi_key_Greek_iota_dead_grave_dead_dasia"/>
			<when output="ᾂ" state="Multi_key_Greek_iota_dead_grave_dead_psili"/>
			<when output="ᾃ" state="Multi_key_Greek_iota_dead_grave_parenleft"/>
			<when output="ᾂ" state="Multi_key_Greek_iota_dead_grave_parenright"/>
			<when output="ᾀ" state="Multi_key_Greek_iota_dead_psili"/>
			<when output="ᾷ" state="Multi_key_Greek_iota_dead_tilde"/>
			<when output="ᾆ" state="Multi_key_Greek_iota_dead_tilde_U0313"/>
			<when output="ᾇ" state="Multi_key_Greek_iota_dead_tilde_U0314"/>
			<when output="ᾇ" state="Multi_key_Greek_iota_dead_tilde_dead_dasia"/>
			<when output="ᾆ" state="Multi_key_Greek_iota_dead_tilde_dead_psili"/>
			<when output="ᾇ" state="Multi_key_Greek_iota_dead_tilde_parenleft"/>
			<when output="ᾆ" state="Multi_key_Greek_iota_dead_tilde_parenright"/>
			<when output="ᾲ" state="Multi_key_Greek_iota_grave"/>
			<when output="ᾂ" state="Multi_key_Greek_iota_grave_U0313"/>
			<when output="ᾃ" state="Multi_key_Greek_iota_grave_U0314"/>
			<when output="ᾃ" state="Multi_key_Greek_iota_grave_dead_dasia"/>
			<when output="ᾂ" state="Multi_key_Greek_iota_grave_dead_psili"/>
			<when output="ᾃ" state="Multi_key_Greek_iota_grave_parenleft"/>
			<when output="ᾂ" state="Multi_key_Greek_iota_grave_parenright"/>
			<when output="ᾁ" state="Multi_key_Greek_iota_parenleft"/>
			<when output="ᾀ" state="Multi_key_Greek_iota_parenright"/>
			<when output="ᾰ" state="Multi_key_U"/>
			<when output="ά" state="Multi_key_acute"/>
			<when output="ἄ" state="Multi_key_acute_U0313"/>
			<when output="ἅ" state="Multi_key_acute_U0314"/>
			<when output="ἅ" state="Multi_key_acute_dead_dasia"/>
			<when output="ἄ" state="Multi_key_acute_dead_psili"/>
			<when output="ἅ" state="Multi_key_acute_parenleft"/>
			<when output="ἄ" state="Multi_key_acute_parenright"/>
			<when output="ά" state="Multi_key_apostrophe"/>
			<when output="ἄ" state="Multi_key_apostrophe_U0313"/>
			<when output="ἅ" state="Multi_key_apostrophe_U0314"/>
			<when output="ἅ" state="Multi_key_apostrophe_dead_dasia"/>
			<when output="ἄ" state="Multi_key_apostrophe_dead_psili"/>
			<when output="ἅ" state="Multi_key_apostrophe_parenleft"/>
			<when output="ἄ" state="Multi_key_apostrophe_parenright"/>
			<when output="ᾶ" state="Multi_key_asciitilde"/>
			<when output="ἆ" state="Multi_key_asciitilde_U0313"/>
			<when output="ἇ" state="Multi_key_asciitilde_U0314"/>
			<when output="ἇ" state="Multi_key_asciitilde_dead_dasia"/>
			<when output="ἆ" state="Multi_key_asciitilde_dead_psili"/>
			<when output="ἇ" state="Multi_key_asciitilde_parenleft"/>
			<when output="ἆ" state="Multi_key_asciitilde_parenright"/>
			<when output="ᾰ" state="Multi_key_b"/>
			<when output="ὰ" state="Multi_key_grave"/>
			<when output="ἂ" state="Multi_key_grave_U0313"/>
			<when output="ἃ" state="Multi_key_grave_U0314"/>
			<when output="ἃ" state="Multi_key_grave_dead_dasia"/>
			<when output="ἂ" state="Multi_key_grave_dead_psili"/>
			<when output="ἃ" state="Multi_key_grave_parenleft"/>
			<when output="ἂ" state="Multi_key_grave_parenright"/>
			<when output="ᾱ" state="Multi_key_macron"/>
			<when output="ἁ" state="Multi_key_parenleft"/>
			<when output="ἀ" state="Multi_key_parenright"/>
			<when output="ᾱ" state="Multi_key_underscore"/>
			<when output="ᾱ" state="macron"/>
		</action>
		<action id="ε">
			<when output="ε" state="none"/>
			<when output="έ" state="Multi_key_acute"/>
			<when output="ἔ" state="Multi_key_acute_U0313"/>
			<when output="ἕ" state="Multi_key_acute_U0314"/>
			<when output="ἕ" state="Multi_key_acute_dead_dasia"/>
			<when output="ἔ" state="Multi_key_acute_dead_psili"/>
			<when output="ἕ" state="Multi_key_acute_parenleft"/>
			<when output="ἔ" state="Multi_key_acute_parenright"/>
			<when output="έ" state="Multi_key_apostrophe"/>
			<when output="ἔ" state="Multi_key_apostrophe_U0313"/>
			<when output="ἕ" state="Multi_key_apostrophe_U0314"/>
			<when output="ἕ" state="Multi_key_apostrophe_dead_dasia"/>
			<when output="ἔ" state="Multi_key_apostrophe_dead_psili"/>
			<when output="ἕ" state="Multi_key_apostrophe_parenleft"/>
			<when output="ἔ" state="Multi_key_apostrophe_parenright"/>
			<when output="ὲ" state="Multi_key_grave"/>
			<when output="ἒ" state="Multi_key_grave_U0313"/>
			<when output="ἓ" state="Multi_key_grave_U0314"/>
			<when output="ἓ" state="Multi_key_grave_dead_dasia"/>
			<when output="ἒ" state="Multi_key_grave_dead_psili"/>
			<when output="ἓ" state="Multi_key_grave_parenleft"/>
			<when output="ἒ" state="Multi_key_grave_parenright"/>
			<when output="ἑ" state="Multi_key_parenleft"/>
			<when output="ἐ" state="Multi_key_parenright"/>
		</action>
		<action id="η">
			<when output="η" state="none"/>
			<when output="ῃ" state="Multi_key_Greek_iota"/>
			<when output="ᾐ" state="Multi_key_Greek_iota_U0313"/>
			<when output="ᾑ" state="Multi_key_Greek_iota_U0314"/>
			<when output="ῇ" state="Multi_key_Greek_iota_U0342"/>
			<when output="ᾖ" state="Multi_key_Greek_iota_U0342_U0313"/>
			<when output="ᾗ" state="Multi_key_Greek_iota_U0342_U0314"/>
			<when output="ᾗ" state="Multi_key_Greek_iota_U0342_dead_dasia"/>
			<when output="ᾖ" state="Multi_key_Greek_iota_U0342_dead_psili"/>
			<when output="ᾗ" state="Multi_key_Greek_iota_U0342_parenleft"/>
			<when output="ᾖ" state="Multi_key_Greek_iota_U0342_parenright"/>
			<when output="ῄ" state="Multi_key_Greek_iota_acute"/>
			<when output="ᾔ" state="Multi_key_Greek_iota_acute_U0313"/>
			<when output="ᾕ" state="Multi_key_Greek_iota_acute_U0314"/>
			<when output="ᾕ" state="Multi_key_Greek_iota_acute_dead_dasia"/>
			<when output="ᾔ" state="Multi_key_Greek_iota_acute_dead_psili"/>
			<when output="ᾕ" state="Multi_key_Greek_iota_acute_parenleft"/>
			<when output="ᾔ" state="Multi_key_Greek_iota_acute_parenright"/>
			<when output="ῄ" state="Multi_key_Greek_iota_apostrophe"/>
			<when output="ᾔ" state="Multi_key_Greek_iota_apostrophe_U0313"/>
			<when output="ᾕ" state="Multi_key_Greek_iota_apostrophe_U0314"/>
			<when output="ᾕ" state="Multi_key_Greek_iota_apostrophe_dead_dasia"/>
			<when output="ᾔ" state="Multi_key_Greek_iota_apostrophe_dead_psili"/>
			<when output="ᾕ" state="Multi_key_Greek_iota_apostrophe_parenleft"/>
			<when output="ᾔ" state="Multi_key_Greek_iota_apostrophe_parenright"/>
			<when output="ῇ" state="Multi_key_Greek_iota_asciitilde"/>
			<when output="ᾖ" state="Multi_key_Greek_iota_asciitilde_U0313"/>
			<when output="ᾗ" state="Multi_key_Greek_iota_asciitilde_U0314"/>
			<when output="ᾗ" state="Multi_key_Greek_iota_asciitilde_dead_dasia"/>
			<when output="ᾖ" state="Multi_key_Greek_iota_asciitilde_dead_psili"/>
			<when output="ᾗ" state="Multi_key_Greek_iota_asciitilde_parenleft"/>
			<when output="ᾖ" state="Multi_key_Greek_iota_asciitilde_parenright"/>
			<when output="ῄ" state="Multi_key_Greek_iota_combining_acute"/>
			<when output="ᾔ" state="Multi_key_Greek_iota_combining_acute_U0313"/>
			<when output="ᾕ" state="Multi_key_Greek_iota_combining_acute_U0314"/>
			<when output="ᾕ" state="Multi_key_Greek_iota_combining_acute_dead_dasia"/>
			<when output="ᾔ" state="Multi_key_Greek_iota_combining_acute_dead_psili"/>
			<when output="ᾕ" state="Multi_key_Greek_iota_combining_acute_parenleft"/>
			<when output="ᾔ" state="Multi_key_Greek_iota_combining_acute_parenright"/>
			<when output="ῂ" state="Multi_key_Greek_iota_combining_grave"/>
			<when output="ᾒ" state="Multi_key_Greek_iota_combining_grave_U0313"/>
			<when output="ᾓ" state="Multi_key_Greek_iota_combining_grave_U0314"/>
			<when output="ᾓ" state="Multi_key_Greek_iota_combining_grave_dead_dasia"/>
			<when output="ᾒ" state="Multi_key_Greek_iota_combining_grave_dead_psili"/>
			<when output="ᾓ" state="Multi_key_Greek_iota_combining_grave_parenleft"/>
			<when output="ᾒ" state="Multi_key_Greek_iota_combining_grave_parenright"/>
			<when output="ῄ" state="Multi_key_Greek_iota_dead_acute"/>
			<when output="ᾔ" state="Multi_key_Greek_iota_dead_acute_U0313"/>
			<when output="ᾕ" state="Multi_key_Greek_iota_dead_acute_U0314"/>
			<when output="ᾕ" state="Multi_key_Greek_iota_dead_acute_dead_dasia"/>
			<when output="ᾔ" state="Multi_key_Greek_iota_dead_acute_dead_psili"/>
			<when output="ᾕ" state="Multi_key_Greek_iota_dead_acute_parenleft"/>
			<when output="ᾔ" state="Multi_key_Greek_iota_dead_acute_parenright"/>
			<when output="ᾑ" state="Multi_key_Greek_iota_dead_dasia"/>
			<when output="ῂ" state="Multi_key_Greek_iota_dead_grave"/>
			<when output="ᾒ" state="Multi_key_Greek_iota_dead_grave_U0313"/>
			<when output="ᾓ" state="Multi_key_Greek_iota_dead_grave_U0314"/>
			<when output="ᾓ" state="Multi_key_Greek_iota_dead_grave_dead_dasia"/>
			<when output="ᾒ" state="Multi_key_Greek_iota_dead_grave_dead_psili"/>
			<when output="ᾓ" state="Multi_key_Greek_iota_dead_grave_parenleft"/>
			<when output="ᾒ" state="Multi_key_Greek_iota_dead_grave_parenright"/>
			<when output="ᾐ" state="Multi_key_Greek_iota_dead_psili"/>
			<when output="ῇ" state="Multi_key_Greek_iota_dead_tilde"/>
			<when output="ᾖ" state="Multi_key_Greek_iota_dead_tilde_U0313"/>
			<when output="ᾗ" state="Multi_key_Greek_iota_dead_tilde_U0314"/>
			<when output="ᾗ" state="Multi_key_Greek_iota_dead_tilde_dead_dasia"/>
			<when output="ᾖ" state="Multi_key_Greek_iota_dead_tilde_dead_psili"/>
			<when output="ᾗ" state="Multi_key_Greek_iota_dead_tilde_parenleft"/>
			<when output="ᾖ" state="Multi_key_Greek_iota_dead_tilde_parenright"/>
			<when output="ῂ" state="Multi_key_Greek_iota_grave"/>
			<when output="ᾒ" state="Multi_key_Greek_iota_grave_U0313"/>
			<when output="ᾓ" state="Multi_key_Greek_iota_grave_U0314"/>
			<when output="ᾓ" state="Multi_key_Greek_iota_grave_dead_dasia"/>
			<when output="ᾒ" state="Multi_key_Greek_iota_grave_dead_psili"/>
			<when output="ᾓ" state="Multi_key_Greek_iota_grave_parenleft"/>
			<when output="ᾒ" state="Multi_key_Greek_iota_grave_parenright"/>
			<when output="ᾑ" state="Multi_key_Greek_iota_parenleft"/>
			<when output="ᾐ" state="Multi_key_Greek_iota_parenright"/>
			<when output="ή" state="Multi_key_acute"/>
			<when output="ἤ" state="Multi_key_acute_U0313"/>
			<when output="ἥ" state="Multi_key_acute_U0314"/>
			<when output="ἥ" state="Multi_key_acute_dead_dasia"/>
			<when output="ἤ" state="Multi_key_acute_dead_psili"/>
			<when output="ἥ" state="Multi_key_acute_parenleft"/>
			<when output="ἤ" state="Multi_key_acute_parenright"/>
			<when output="ή" state="Multi_key_apostrophe"/>
			<when output="ἤ" state="Multi_key_apostrophe_U0313"/>
			<when output="ἥ" state="Multi_key_apostrophe_U0314"/>
			<when output="ἥ" state="Multi_key_apostrophe_dead_dasia"/>
			<when output="ἤ" state="Multi_key_apostrophe_dead_psili"/>
			<when output="ἥ" state="Multi_key_apostrophe_parenleft"/>
			<when output="ἤ" state="Multi_key_apostrophe_parenright"/>
			<when output="ῆ" state="Multi_key_asciitilde"/>
			<when output="ἦ" state="Multi_key_asciitilde_U0313"/>
			<when output="ἧ" state="Multi_key_asciitilde_U0314"/>
			<when output="ἧ" state="Multi_key_asciitilde_dead_dasia"/>
			<when output="ἦ" state="Multi_key_asciitilde_dead_psili"/>
			<when output="ἧ" state="Multi_key_asciitilde_parenleft"/>
			<when output="ἦ" state="Multi_key_asciitilde_parenright"/>
			<when output="ὴ" state="Multi_key_grave"/>
			<when output="ἢ" state="Multi_key_grave_U0313"/>
			<when output="ἣ" state="Multi_key_grave_U0314"/>
			<when output="ἣ" state="Multi_key_grave_dead_dasia"/>
			<when output="ἢ" state="Multi_key_grave_dead_psili"/>
			<when output="ἣ" state="Multi_key_grave_parenleft"/>
			<when output="ἢ" state="Multi_key_grave_parenright"/>
			<when output="ἡ" state="Multi_key_parenleft"/>
			<when output="ἠ" state="Multi_key_parenright"/>
		</action>
		<action id="ι">
			<when output="ι" state="none"/>
			<when next="Multi_key_Greek_iota" state="Multi_key"/>
			<when output="ῐ" state="Multi_key_U"/>
			<when output="ί" state="Multi_key_acute"/>
			<when output="ἴ" state="Multi_key_acute_U0313"/>
			<when output="ἵ" state="Multi_key_acute_U0314"/>
			<when output="ἵ" state="Multi_key_acute_dead_dasia"/>
			<when output="ΐ" state="Multi_key_acute_dead_diaeresis"/>
			<when output="ἴ" state="Multi_key_acute_dead_psili"/>
			<when output="ἵ" state="Multi_key_acute_parenleft"/>
			<when output="ἴ" state="Multi_key_acute_parenright"/>
			<when output="ΐ" state="Multi_key_acute_quotedbl"/>
			<when output="ί" state="Multi_key_apostrophe"/>
			<when output="ἴ" state="Multi_key_apostrophe_U0313"/>
			<when output="ἵ" state="Multi_key_apostrophe_U0314"/>
			<when output="ἵ" state="Multi_key_apostrophe_dead_dasia"/>
			<when output="ΐ" state="Multi_key_apostrophe_dead_diaeresis"/>
			<when output="ἴ" state="Multi_key_apostrophe_dead_psili"/>
			<when output="ἵ" state="Multi_key_apostrophe_parenleft"/>
			<when output="ἴ" state="Multi_key_apostrophe_parenright"/>
			<when output="ΐ" state="Multi_key_apostrophe_quotedbl"/>
			<when output="ῖ" state="Multi_key_asciitilde"/>
			<when output="ἶ" state="Multi_key_asciitilde_U0313"/>
			<when output="ἷ" state="Multi_key_asciitilde_U0314"/>
			<when output="ἷ" state="Multi_key_asciitilde_dead_dasia"/>
			<when output="ῗ" state="Multi_key_asciitilde_dead_diaeresis"/>
			<when output="ἶ" state="Multi_key_asciitilde_dead_psili"/>
			<when output="ἷ" state="Multi_key_asciitilde_parenleft"/>
			<when output="ἶ" state="Multi_key_asciitilde_parenright"/>
			<when output="ῗ" state="Multi_key_asciitilde_quotedbl"/>
			<when output="ῐ" state="Multi_key_b"/>
			<when output="ὶ" state="Multi_key_grave"/>
			<when output="ἲ" state="Multi_key_grave_U0313"/>
			<when output="ἳ" state="Multi_key_grave_U0314"/>
			<when output="ἳ" state="Multi_key_grave_dead_dasia"/>
			<when output="ῒ" state="Multi_key_grave_dead_diaeresis"/>
			<when output="ἲ" state="Multi_key_grave_dead_psili"/>
			<when output="ἳ" state="Multi_key_grave_parenleft"/>
			<when output="ἲ" state="Multi_key_grave_parenright"/>
			<when output="ῒ" state="Multi_key_grave_quotedbl"/>
			<when output="ῑ" state="Multi_key_macron"/>
			<when output="ἱ" state="Multi_key_parenleft"/>
			<when output="ἰ" state="Multi_key_parenright"/>
			<when output="ϊ" state="Multi_key_quotedbl"/>
			<when output="ῑ" state="Multi_key_underscore"/>
			<when output="ῑ" state="macron"/>
		</action>
		<action id="ο">
			<when output="ο" state="none"/>
			<when output="ό" state="Multi_key_acute"/>
			<when output="ὄ" state="Multi_key_acute_U0313"/>
			<when output="ὅ" state="Multi_key_acute_U0314"/>
			<when output="ὅ" state="Multi_key_acute_dead_dasia"/>
			<when output="ὄ" state="Multi_key_acute_dead_psili"/>
			<when output="ὅ" state="Multi_key_acute_parenleft"/>
			<when output="ὄ" state="Multi_key_acute_parenright"/>
			<when output="ό" state="Multi_key_apostrophe"/>
			<when output="ὄ" state="Multi_key_apostrophe_U0313"/>
			<when output="ὅ" state="Multi_key_apostrophe_U0314"/>
			<when output="ὅ" state="Multi_key_apostrophe_dead_dasia"/>
			<when output="ὄ" state="Multi_key_apostrophe_dead_psili"/>
			<when output="ὅ" state="Multi_key_apostrophe_parenleft"/>
			<when output="ὄ" state="Multi_key_apostrophe_parenright"/>
			<when output="ὸ" state="Multi_key_grave"/>
			<when output="ὂ" state="Multi_key_grave_U0313"/>
			<when output="ὃ" state="Multi_key_grave_U0314"/>
			<when output="ὃ" state="Multi_key_grave_dead_dasia"/>
			<when output="ὂ" state="Multi_key_grave_dead_psili"/>
			<when output="ὃ" state="Multi_key_grave_parenleft"/>
			<when output="ὂ" state="Multi_key_grave_parenright"/>
			<when output="ὁ" state="Multi_key_parenleft"/>
			<when output="ὀ" state="Multi_key_parenright"/>
		</action>
		<action id="ρ">
			<when output="ρ" state="none"/>
			<when output="ῥ" state="Multi_key_parenleft"/>
			<when output="ῤ" state="Multi_key_parenright"/>
			<when output="ϼ" state="stroke"/>
		</action>
		<action id="υ">
			<when output="υ" state="none"/>
			<when output="ῠ" state="Multi_key_U"/>
			<when output="ύ" state="Multi_key_acute"/>
			<when output="ὔ" state="Multi_key_acute_U0313"/>
			<when output="ὕ" state="Multi_key_acute_U0314"/>
			<when output="ὕ" state="Multi_key_acute_dead_dasia"/>
			<when output="ΰ" state="Multi_key_acute_dead_diaeresis"/>
			<when output="ὔ" state="Multi_key_acute_dead_psili"/>
			<when output="ὕ" state="Multi_key_acute_parenleft"/>
			<when output="ὔ" state="Multi_key_acute_parenright"/>
			<when output="ΰ" state="Multi_key_acute_quotedbl"/>
			<when output="ύ" state="Multi_key_apostrophe"/>
			<when output="ὔ" state="Multi_key_apostrophe_U0313"/>
			<when output="ὕ" state="Multi_key_apostrophe_U0314"/>
			<when output="ὕ" state="Multi_key_apostrophe_dead_dasia"/>
			<when output="ΰ" state="Multi_key_apostrophe_dead_diaeresis"/>
			<when output="ὔ" state="Multi_key_apostrophe_dead_psili"/>
			<when output="ὕ" state="Multi_key_apostrophe_parenleft"/>
			<when output="ὔ" state="Multi_key_apostrophe_parenright"/>
			<when output="ΰ" state="Multi_key_apostrophe_quotedbl"/>
			<when output="ῦ" state="Multi_key_asciitilde"/>
			<when output="ὖ" state="Multi_key_asciitilde_U0313"/>
			<when output="ὗ" state="Multi_key_asciitilde_U0314"/>
			<when output="ὗ" state="Multi_key_asciitilde_dead_dasia"/>
			<when output="ῧ" state="Multi_key_asciitilde_dead_diaeresis"/>
			<when output="ὖ" state="Multi_key_asciitilde_dead_psili"/>
			<when output="ὗ" state="Multi_key_asciitilde_parenleft"/>
			<when output="ὖ" state="Multi_key_asciitilde_parenright"/>
			<when output="ῧ" state="Multi_key_asciitilde_quotedbl"/>
			<when output="ῠ" state="Multi_key_b"/>
			<when output="ὺ" state="Multi_key_grave"/>
			<when output="ὒ" state="Multi_key_grave_U0313"/>
			<when output="ὓ" state="Multi_key_grave_U0314"/>
			<when output="ὓ" state="Multi_key_grave_dead_dasia"/>
			<when output="ῢ" state="Multi_key_grave_dead_diaeresis"/>
			<when output="ὒ" state="Multi_key_grave_dead_psili"/>
			<when output="ὓ" state="Multi_key_grave_parenleft"/>
			<when output="ὒ" state="Multi_key_grave_parenright"/>
			<when output="ῢ" state="Multi_key_grave_quotedbl"/>
			<when output="ῡ" state="Multi_key_macron"/>
			<when output="ὑ" state="Multi_key_parenleft"/>
			<when output="ὐ" state="Multi_key_parenright"/>
			<when output="ϋ" state="Multi_key_quotedbl"/>
			<when output="ῡ" state="Multi_key_underscore"/>
			<when output="ῡ" state="macron"/>
		</action>
		<action id="ω">
			<when output="ω" state="none"/>
			<when output="ῳ" state="Multi_key_Greek_iota"/>
			<when output="ᾠ" state="Multi_key_Greek_iota_U0313"/>
			<when output="ᾡ" state="Multi_key_Greek_iota_U0314"/>
			<when output="ῷ" state="Multi_key_Greek_iota_U0342"/>
			<when output="ᾦ" state="Multi_key_Greek_iota_U0342_U0313"/>
			<when output="ᾧ" state="Multi_key_Greek_iota_U0342_U0314"/>
			<when output="ᾧ" state="Multi_key_Greek_iota_U0342_dead_dasia"/>
			<when output="ᾦ" state="Multi_key_Greek_iota_U0342_dead_psili"/>
			<when output="ᾧ" state="Multi_key_Greek_iota_U0342_parenleft"/>
			<when output="ᾦ" state="Multi_key_Greek_iota_U0342_parenright"/>
			<when output="ῴ" state="Multi_key_Greek_iota_acute"/>
			<when output="ᾤ" state="Multi_key_Greek_iota_acute_U0313"/>
			<when output="ᾥ" state="Multi_key_Greek_iota_acute_U0314"/>
			<when output="ᾥ" state="Multi_key_Greek_iota_acute_dead_dasia"/>
			<when output="ᾤ" state="Multi_key_Greek_iota_acute_dead_psili"/>
			<when output="ᾥ" state="Multi_key_Greek_iota_acute_parenleft"/>
			<when output="ᾤ" state="Multi_key_Greek_iota_acute_parenright"/>
			<when output="ῴ" state="Multi_key_Greek_iota_apostrophe"/>
			<when output="ᾤ" state="Multi_key_Greek_iota_apostrophe_U0313"/>
			<when output="ᾥ" state="Multi_key_Greek_iota_apostrophe_U0314"/>
			<when output="ᾥ" state="Multi_key_Greek_iota_apostrophe_dead_dasia"/>
			<when output="ᾤ" state="Multi_key_Greek_iota_apostrophe_dead_psili"/>
			<when output="ᾥ" state="Multi_key_Greek_iota_apostrophe_parenleft"/>
			<when output="ᾤ" state="Multi_key_Greek_iota_apostrophe_parenright"/>
			<when output="ῷ" state="Multi_key_Greek_iota_asciitilde"/>
			<when output="ᾦ" state="Multi_key_Greek_iota_asciitilde_U0313"/>
			<when output="ᾧ" state="Multi_key_Greek_iota_asciitilde_U0314"/>
			<when output="ᾧ" state="Multi_key_Greek_iota_asciitilde_dead_dasia"/>
			<when output="ᾦ" state="Multi_key_Greek_iota_asciitilde_dead_psili"/>
			<when output="ᾧ" state="Multi_key_Greek_iota_asciitilde_parenleft"/>
			<when output="ᾦ" state="Multi_key_Greek_iota_asciitilde_parenright"/>
			<when output="ῴ" state="Multi_key_Greek_iota_combining_acute"/>
			<when output="ᾤ" state="Multi_key_Greek_iota_combining_acute_U0313"/>
			<when output="ᾥ" state="Multi_key_Greek_iota_combining_acute_U0314"/>
			<when output="ᾥ" state="Multi_key_Greek_iota_combining_acute_dead_dasia"/>
			<when output="ᾤ" state="Multi_key_Greek_iota_combining_acute_dead_psili"/>
			<when output="ᾥ" state="Multi_key_Greek_iota_combining_acute_parenleft"/>
			<when output="ᾤ" state="Multi_key_Greek_iota_combining_acute_parenright"/>
			<when output="ῲ" state="Multi_key_Greek_iota_combining_grave"/>
			<when output="ᾢ" state="Multi_key_Greek_iota_combining_grave_U0313"/>
			<when output="ᾣ" state="Multi_key_Greek_iota_combining_grave_U0314"/>
			<when output="ᾣ" state="Multi_key_Greek_iota_combining_grave_dead_dasia"/>
			<when output="ᾢ" state="Multi_key_Greek_iota_combining_grave_dead_psili"/>
			<when output="ᾣ" state="Multi_key_Greek_iota_combining_grave_parenleft"/>
			<when output="ᾢ" state="Multi_key_Greek_iota_combining_grave_parenright"/>
			<when output="ῴ" state="Multi_key_Greek_iota_dead_acute"/>
			<when output="ᾤ" state="Multi_key_Greek_iota_dead_acute_U0313"/>
			<when output="ᾥ" state="Multi_key_Greek_iota_dead_acute_U0314"/>
			<when output="ᾥ" state="Multi_key_Greek_iota_dead_acute_dead_dasia"/>
			<when output="ᾤ" state="Multi_key_Greek_iota_dead_acute_dead_psili"/>
			<when output="ᾥ" state="Multi_key_Greek_iota_dead_acute_parenleft"/>
			<when output="ᾤ" state="Multi_key_Greek_iota_dead_acute_parenright"/>
			<when output="ᾡ" state="Multi_key_Greek_iota_dead_dasia"/>
			<when output="ῲ" state="Multi_key_Greek_iota_dead_grave"/>
			<when output="ᾢ" state="Multi_key_Greek_iota_dead_grave_U0313"/>
			<when output="ᾣ" state="Multi_key_Greek_iota_dead_grave_U0314"/>
			<when output="ᾣ" state="Multi_key_Greek_iota_dead_grave_dead_dasia"/>
			<when output="ᾢ" state="Multi_key_Greek_iota_dead_grave_dead_psili"/>
			<when output="ᾣ" state="Multi_key_Greek_iota_dead_grave_parenleft"/>
			<when output="ᾢ" state="Multi_key_Greek_iota_dead_grave_parenright"/>
			<when output="ᾠ" state="Multi_key_Greek_iota_dead_psili"/>
			<when output="ῷ" state="Multi_key_Greek_iota_dead_tilde"/>
			<when output="ᾦ" state="Multi_key_Greek_iota_dead_tilde_U0313"/>
			<when output="ᾧ" state="Multi_key_Greek_iota_dead_tilde_U0314"/>
			<when output="ᾧ" state="Multi_key_Greek_iota_dead_tilde_dead_dasia"/>
			<when output="ᾦ" state="Multi_key_Greek_iota_dead_tilde_dead_psili"/>
			<when output="ᾧ" state="Multi_key_Greek_iota_dead_tilde_parenleft"/>
			<when output="ᾦ" state="Multi_key_Greek_iota_dead_tilde_parenright"/>
			<when output="ῲ" state="Multi_key_Greek_iota_grave"/>
			<when output="ᾢ" state="Multi_key_Greek_iota_grave_U0313"/>
			<when output="ᾣ" state="Multi_key_Greek_iota_grave_U0314"/>
			<when output="ᾣ" state="Multi_key_Greek_iota_grave_dead_dasia"/>
			<when output="ᾢ" state="Multi_key_Greek_iota_grave_dead_psili"/>
			<when output="ᾣ" state="Multi_key_Greek_iota_grave_parenleft"/>
			<when output="ᾢ" state="Multi_key_Greek_iota_grave_parenright"/>
			<when output="ᾡ" state="Multi_key_Greek_iota_parenleft"/>
			<when output="ᾠ" state="Multi_key_Greek_iota_parenright"/>
			<when output="ώ" state="Multi_key_acute"/>
			<when output="ὤ" state="Multi_key_acute_U0313"/>
			<when output="ὥ" state="Multi_key_acute_U0314"/>
			<when output="ὥ" state="Multi_key_acute_dead_dasia"/>
			<when output="ὤ" state="Multi_key_acute_dead_psili"/>
			<when output="ὥ" state="Multi_key_acute_parenleft"/>
			<when output="ὤ" state="Multi_key_acute_parenright"/>
			<when output="ώ" state="Multi_key_apostrophe"/>
			<when output="ὤ" state="Multi_key_apostrophe_U0313"/>
			<when output="ὥ" state="Multi_key_apostrophe_U0314"/>
			<when output="ὥ" state="Multi_key_apostrophe_dead_dasia"/>
			<when output="ὤ" state="Multi_key_apostrophe_dead_psili"/>
			<when output="ὥ" state="Multi_key_apostrophe_parenleft"/>
			<when output="ὤ" state="Multi_key_apostrophe_parenright"/>
			<when output="ῶ" state="Multi_key_asciitilde"/>
			<when output="ὦ" state="Multi_key_asciitilde_U0313"/>
			<when output="ὧ" state="Multi_key_asciitilde_U0314"/>
			<when output="ὧ" state="Multi_key_asciitilde_dead_dasia"/>
			<when output="ὦ" state="Multi_key_asciitilde_dead_psili"/>
			<when output="ὧ" state="Multi_key_asciitilde_parenleft"/>
			<when output="ὦ" state="Multi_key_asciitilde_parenright"/>
			<when output="ὼ" state="Multi_key_grave"/>
			<when output="ὢ" state="Multi_key_grave_U0313"/>
			<when output="ὣ" state="Multi_key_grave_U0314"/>
			<when output="ὣ" state="Multi_key_grave_dead_dasia"/>
			<when output="ὢ" state="Multi_key_grave_dead_psili"/>
			<when output="ὣ" state="Multi_key_grave_parenleft"/>
			<when output="ὢ" state="Multi_key_grave_parenright"/>
			<when output="ὡ" state="Multi_key_parenleft"/>
			<when output="ὠ" state="Multi_key_parenright"/>
		</action>
		<action id="ϊ">
			<when output="ϊ" state="none"/>
			<when output="ΐ" state="Multi_key_acute"/>
			<when output="ΐ" state="Multi_key_apostrophe"/>
			<when output="ῗ" state="Multi_key_asciitilde"/>
			<when output="ῒ" state="Multi_key_grave"/>
		</action>
		<action id="ϋ">
			<when output="ϋ" state="none"/>
			<when output="ΰ" state="Multi_key_acute"/>
			<when output="ΰ" state="Multi_key_apostrophe"/>
			<when output="ῧ" state="Multi_key_asciitilde"/>
			<when output="ῢ" state="Multi_key_grave"/>
		</action>
		<action id="ώ">
			<when output="ώ" state="none"/>
			<when output="ῴ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="ϒ">
			<when output="ϒ" state="none"/>
			<when output="ϔ" state="Multi_key_quotedbl"/>
		</action>
		<action id="І">
			<when output="І" state="none"/>
			<when output="Ї" state="Multi_key_quotedbl"/>
		</action>
		<action id="А">
			<when output="А" state="none"/>
			<when output="Ӑ" state="Multi_key_U"/>
			<when output="Ӑ" state="Multi_key_b"/>
			<when output="Ӓ" state="Multi_key_quotedbl"/>
		</action>
		<action id="Г">
			<when output="Г" state="none"/>
			<when output="Ѓ" state="Multi_key_acute"/>
			<when output="Ѓ" state="Multi_key_apostrophe"/>
			<when output="Ғ" state="Multi_key_slash"/>
		</action>
		<action id="Е">
			<when output="Е" state="none"/>
			<when next="Multi_key_Cyrillic_IE" state="Multi_key"/>
			<when output="Ӗ" state="Multi_key_U"/>
			<when output="Ӗ" state="Multi_key_b"/>
			<when output="€" state="Multi_key_equal"/>
			<when output="Ѐ" state="Multi_key_grave"/>
			<when output="Ё" state="Multi_key_quotedbl"/>
		</action>
		<action id="Ж">
			<when output="Ж" state="none"/>
			<when output="Ӂ" state="Multi_key_U"/>
			<when output="Ӂ" state="Multi_key_b"/>
			<when output="Ӝ" state="Multi_key_quotedbl"/>
		</action>
		<action id="З">
			<when output="З" state="none"/>
			<when output="Ӟ" state="Multi_key_quotedbl"/>
		</action>
		<action id="И">
			<when output="И" state="none"/>
			<when output="Й" state="Multi_key_U"/>
			<when output="Й" state="Multi_key_b"/>
			<when output="Ѝ" state="Multi_key_grave"/>
			<when output="Ӣ" state="Multi_key_macron"/>
			<when output="Ӥ" state="Multi_key_quotedbl"/>
			<when output="Ӣ" state="Multi_key_underscore"/>
		</action>
		<action id="К">
			<when output="К" state="none"/>
			<when output="Ќ" state="Multi_key_acute"/>
			<when output="Ќ" state="Multi_key_apostrophe"/>
			<when output="Ҟ" state="Multi_key_slash"/>
		</action>
		<action id="Н">
			<when output="Н" state="none"/>
			<when next="Multi_key_Cyrillic_EN" state="Multi_key"/>
		</action>
		<action id="О">
			<when output="О" state="none"/>
			<when output="№" state="Multi_key_Cyrillic_EN"/>
			<when output="Ӧ" state="Multi_key_quotedbl"/>
		</action>
		<action id="С">
			<when output="С" state="none"/>
			<when next="Multi_key_Cyrillic_ES" state="Multi_key"/>
			<when output="€" state="Multi_key_equal"/>
		</action>
		<action id="У">
			<when output="У" state="none"/>
			<when output="Ў" state="Multi_key_U"/>
			<when output="Ў" state="Multi_key_b"/>
			<when output="Ӳ" state="Multi_key_equal"/>
			<when output="Ӯ" state="Multi_key_macron"/>
			<when output="Ӱ" state="Multi_key_quotedbl"/>
			<when output="Ӯ" state="Multi_key_underscore"/>
		</action>
		<action id="Ч">
			<when output="Ч" state="none"/>
			<when output="Ӵ" state="Multi_key_quotedbl"/>
		</action>
		<action id="Ы">
			<when output="Ы" state="none"/>
			<when output="Ӹ" state="Multi_key_quotedbl"/>
		</action>
		<action id="Э">
			<when output="Э" state="none"/>
			<when output="Ӭ" state="Multi_key_quotedbl"/>
		</action>
		<action id="а">
			<when output="а" state="none"/>
			<when output="§" state="Multi_key_Cyrillic_pe"/>
			<when output="ӑ" state="Multi_key_U"/>
			<when output="ӑ" state="Multi_key_b"/>
			<when output="ӓ" state="Multi_key_quotedbl"/>
		</action>
		<action id="г">
			<when output="г" state="none"/>
			<when output="ѓ" state="Multi_key_acute"/>
			<when output="ѓ" state="Multi_key_apostrophe"/>
			<when output="ғ" state="Multi_key_slash"/>
		</action>
		<action id="е">
			<when output="е" state="none"/>
			<when output="ӗ" state="Multi_key_U"/>
			<when output="ӗ" state="Multi_key_b"/>
			<when output="ѐ" state="Multi_key_grave"/>
			<when output="ё" state="Multi_key_quotedbl"/>
		</action>
		<action id="ж">
			<when output="ж" state="none"/>
			<when output="ӂ" state="Multi_key_U"/>
			<when output="ӂ" state="Multi_key_b"/>
			<when output="ӝ" state="Multi_key_quotedbl"/>
		</action>
		<action id="з">
			<when output="з" state="none"/>
			<when output="ӟ" state="Multi_key_quotedbl"/>
		</action>
		<action id="и">
			<when output="и" state="none"/>
			<when output="й" state="Multi_key_U"/>
			<when output="й" state="Multi_key_b"/>
			<when output="ѝ" state="Multi_key_grave"/>
			<when output="ӣ" state="Multi_key_macron"/>
			<when output="ӥ" state="Multi_key_quotedbl"/>
			<when output="ӣ" state="Multi_key_underscore"/>
		</action>
		<action id="к">
			<when output="к" state="none"/>
			<when output="ќ" state="Multi_key_acute"/>
			<when output="ќ" state="Multi_key_apostrophe"/>
			<when output="ҟ" state="Multi_key_slash"/>
		</action>
		<action id="о">
			<when output="о" state="none"/>
			<when output="№" state="Multi_key_Cyrillic_EN"/>
			<when output="ӧ" state="Multi_key_quotedbl"/>
		</action>
		<action id="п">
			<when output="п" state="none"/>
			<when next="Multi_key_Cyrillic_pe" state="Multi_key"/>
		</action>
		<action id="у">
			<when output="у" state="none"/>
			<when output="ў" state="Multi_key_U"/>
			<when output="ў" state="Multi_key_b"/>
			<when output="ӳ" state="Multi_key_equal"/>
			<when output="ӯ" state="Multi_key_macron"/>
			<when output="ӱ" state="Multi_key_quotedbl"/>
			<when output="ӯ" state="Multi_key_underscore"/>
		</action>
		<action id="ч">
			<when output="ч" state="none"/>
			<when output="ӵ" state="Multi_key_quotedbl"/>
		</action>
		<action id="ы">
			<when output="ы" state="none"/>
			<when output="ӹ" state="Multi_key_quotedbl"/>
		</action>
		<action id="э">
			<when output="э" state="none"/>
			<when output="ӭ" state="Multi_key_quotedbl"/>
		</action>
		<action id="і">
			<when output="і" state="none"/>
			<when output="ї" state="Multi_key_quotedbl"/>
		</action>
		<action id="Ү">
			<when output="Ү" state="none"/>
		</action>
		<action id="ү">
			<when output="ү" state="none"/>
		</action>
		<action id="Ә">
			<when output="Ә" state="none"/>
		</action>
		<action id="ә">
			<when output="ә" state="none"/>
		</action>
		<action id="Ө">
			<when output="Ө" state="none"/>
		</action>
		<action id="ө">
			<when output="ө" state="none"/>
		</action>
		<action id="ִ">
			<when output="ִ" state="none"/>
			<when next="Multi_key_U05B4" state="Multi_key"/>
		</action>
		<action id="ַ">
			<when output="ַ" state="none"/>
			<when next="Multi_key_U05B7" state="Multi_key"/>
		</action>
		<action id="ָ">
			<when output="ָ" state="none"/>
			<when next="Multi_key_U05B8" state="Multi_key"/>
		</action>
		<action id="ֹ">
			<when output="ֹ" state="none"/>
			<when next="Multi_key_U05B9" state="Multi_key"/>
		</action>
		<action id="ּ">
			<when output="ּ" state="none"/>
			<when next="Multi_key_U05BC" state="Multi_key"/>
			<when next="Multi_key_U05C1_U05BC" state="Multi_key_U05C1"/>
			<when next="Multi_key_U05C2_U05BC" state="Multi_key_U05C2"/>
		</action>
		<action id="ֿ">
			<when output="ֿ" state="none"/>
			<when next="Multi_key_U05BF" state="Multi_key"/>
		</action>
		<action id="ׁ">
			<when output="ׁ" state="none"/>
			<when next="Multi_key_U05C1" state="Multi_key"/>
		</action>
		<action id="ׂ">
			<when output="ׂ" state="none"/>
			<when next="Multi_key_U05C2" state="Multi_key"/>
		</action>
		<action id="א">
			<when output="א" state="none"/>
			<when output="אַ" state="Multi_key_U05B7"/>
			<when output="אָ" state="Multi_key_U05B8"/>
			<when output="אּ" state="Multi_key_U05BC"/>
		</action>
		<action id="ב">
			<when output="ב" state="none"/>
			<when output="בּ" state="Multi_key_U05BC"/>
			<when output="בֿ" state="Multi_key_U05BF"/>
		</action>
		<action id="ג">
			<when output="ג" state="none"/>
			<when output="גּ" state="Multi_key_U05BC"/>
		</action>
		<action id="ד">
			<when output="ד" state="none"/>
			<when output="דּ" state="Multi_key_U05BC"/>
		</action>
		<action id="ה">
			<when output="ה" state="none"/>
			<when output="הּ" state="Multi_key_U05BC"/>
		</action>
		<action id="ו">
			<when output="ו" state="none"/>
			<when output="וֹ" state="Multi_key_U05B9"/>
			<when output="וּ" state="Multi_key_U05BC"/>
		</action>
		<action id="ז">
			<when output="ז" state="none"/>
			<when output="זּ" state="Multi_key_U05BC"/>
		</action>
		<action id="ט">
			<when output="ט" state="none"/>
			<when output="טּ" state="Multi_key_U05BC"/>
		</action>
		<action id="י">
			<when output="י" state="none"/>
			<when output="יִ" state="Multi_key_U05B4"/>
			<when output="יּ" state="Multi_key_U05BC"/>
		</action>
		<action id="ך">
			<when output="ך" state="none"/>
			<when output="ךּ" state="Multi_key_U05BC"/>
		</action>
		<action id="כ">
			<when output="כ" state="none"/>
			<when output="כּ" state="Multi_key_U05BC"/>
			<when output="כֿ" state="Multi_key_U05BF"/>
		</action>
		<action id="ל">
			<when output="ל" state="none"/>
			<when output="לּ" state="Multi_key_U05BC"/>
		</action>
		<action id="מ">
			<when output="מ" state="none"/>
			<when output="מּ" state="Multi_key_U05BC"/>
		</action>
		<action id="נ">
			<when output="נ" state="none"/>
			<when output="נּ" state="Multi_key_U05BC"/>
		</action>
		<action id="ס">
			<when output="ס" state="none"/>
			<when output="סּ" state="Multi_key_U05BC"/>
		</action>
		<action id="ף">
			<when output="ף" state="none"/>
			<when output="ףּ" state="Multi_key_U05BC"/>
		</action>
		<action id="פ">
			<when output="פ" state="none"/>
			<when output="פּ" state="Multi_key_U05BC"/>
			<when output="פֿ" state="Multi_key_U05BF"/>
		</action>
		<action id="צ">
			<when output="צ" state="none"/>
			<when output="צּ" state="Multi_key_U05BC"/>
		</action>
		<action id="ק">
			<when output="ק" state="none"/>
			<when output="קּ" state="Multi_key_U05BC"/>
		</action>
		<action id="ר">
			<when output="ר" state="none"/>
			<when output="רּ" state="Multi_key_U05BC"/>
		</action>
		<action id="ש">
			<when output="ש" state="none"/>
			<when output="שּ" state="Multi_key_U05BC"/>
			<when output="שׁ" state="Multi_key_U05C1"/>
			<when output="שּׁ" state="Multi_key_U05C1_U05BC"/>
			<when output="שׂ" state="Multi_key_U05C2"/>
			<when output="שּׂ" state="Multi_key_U05C2_U05BC"/>
		</action>
		<action id="ת">
			<when output="ת" state="none"/>
			<when output="תּ" state="Multi_key_U05BC"/>
		</action>
		<action id="ײ">
			<when output="ײ" state="none"/>
			<when output="ײַ" state="Multi_key_U05B7"/>
		</action>
		<action id="ا">
			<when output="ا" state="none"/>
			<when output="آ" state="Multi_key_U0653"/>
			<when output="أ" state="Multi_key_U0654"/>
			<when output="إ" state="Multi_key_U0655"/>
		</action>
		<action id="و">
			<when output="و" state="none"/>
			<when output="ؤ" state="Multi_key_U0654"/>
		</action>
		<action id="ي">
			<when output="ي" state="none"/>
			<when output="ئ" state="Multi_key_U0654"/>
		</action>
		<action id="ٓ">
			<when output="ٓ" state="none"/>
		</action>
		<action id="ٔ">
			<when output="ٔ" state="none"/>
		</action>
		<action id="ٕ">
			<when output="ٕ" state="none"/>
		</action>
		<action id="ہ">
			<when output="ہ" state="none"/>
		</action>
		<action id="ے">
			<when output="ے" state="none"/>
		</action>
		<action id="ە">
			<when output="ە" state="none"/>
			<when output="ۀ" state="Multi_key_U0654"/>
		</action>
		<action id="क">
			<when output="क" state="none"/>
			<when output="क़" state="Multi_key_U093C"/>
		</action>
		<action id="ख">
			<when output="ख" state="none"/>
			<when output="ख़" state="Multi_key_U093C"/>
		</action>
		<action id="ग">
			<when output="ग" state="none"/>
			<when output="ग़" state="Multi_key_U093C"/>
		</action>
		<action id="ज">
			<when output="ज" state="none"/>
			<when output="ज़" state="Multi_key_U093C"/>
		</action>
		<action id="ड">
			<when output="ड" state="none"/>
			<when output="ड़" state="Multi_key_U093C"/>
		</action>
		<action id="ढ">
			<when output="ढ" state="none"/>
			<when output="ढ़" state="Multi_key_U093C"/>
		</action>
		<action id="न">
			<when output="न" state="none"/>
			<when output="ऩ" state="Multi_key_U093C"/>
		</action>
		<action id="फ">
			<when output="फ" state="none"/>
			<when output="फ़" state="Multi_key_U093C"/>
		</action>
		<action id="य">
			<when output="य" state="none"/>
			<when output="य़" state="Multi_key_U093C"/>
		</action>
		<action id="र">
			<when output="र" state="none"/>
			<when output="ऱ" state="Multi_key_U093C"/>
		</action>
		<action id="ळ">
			<when output="ळ" state="none"/>
			<when output="ऴ" state="Multi_key_U093C"/>
		</action>
		<action id="़">
			<when output="़" state="none"/>
			<when next="Multi_key_U093C" state="Multi_key"/>
		</action>
		<action id="ড">
			<when output="ড" state="none"/>
			<when output="ড়" state="Multi_key_U09BC"/>
		</action>
		<action id="ঢ">
			<when output="ঢ" state="none"/>
			<when output="ঢ়" state="Multi_key_U09BC"/>
		</action>
		<action id="য">
			<when output="য" state="none"/>
			<when output="য়" state="Multi_key_U09BC"/>
		</action>
		<action id="়">
			<when output="়" state="none"/>
			<when next="Multi_key_U09BC" state="Multi_key"/>
		</action>
		<action id="া">
			<when output="া" state="none"/>
			<when output="ো" state="Multi_key_U09C7"/>
		</action>
		<action id="ে">
			<when output="ে" state="none"/>
			<when next="Multi_key_U09C7" state="Multi_key"/>
		</action>
		<action id="ৗ">
			<when output="ৗ" state="none"/>
			<when output="ৌ" state="Multi_key_U09C7"/>
		</action>
		<action id="ਖ">
			<when output="ਖ" state="none"/>
			<when output="ਖ਼" state="Multi_key_U0A3C"/>
		</action>
		<action id="ਗ">
			<when output="ਗ" state="none"/>
			<when output="ਗ਼" state="Multi_key_U0A3C"/>
		</action>
		<action id="ਜ">
			<when output="ਜ" state="none"/>
			<when output="ਜ਼" state="Multi_key_U0A3C"/>
		</action>
		<action id="ਫ">
			<when output="ਫ" state="none"/>
			<when output="ਫ਼" state="Multi_key_U0A3C"/>
		</action>
		<action id="ਲ">
			<when output="ਲ" state="none"/>
			<when output="ਲ਼" state="Multi_key_U0A3C"/>
		</action>
		<action id="ਸ">
			<when output="ਸ" state="none"/>
			<when output="ਸ਼" state="Multi_key_U0A3C"/>
		</action>
		<action id="਼">
			<when output="਼" state="none"/>
			<when next="Multi_key_U0A3C" state="Multi_key"/>
		</action>
		<action id="ଡ">
			<when output="ଡ" state="none"/>
			<when output="ଡ଼" state="Multi_key_U0B3C"/>
		</action>
		<action id="ଢ">
			<when output="ଢ" state="none"/>
			<when output="ଢ଼" state="Multi_key_U0B3C"/>
		</action>
		<action id="଼">
			<when output="଼" state="none"/>
			<when next="Multi_key_U0B3C" state="Multi_key"/>
		</action>
		<action id="ା">
			<when output="ା" state="none"/>
			<when output="ୋ" state="Multi_key_U0B47"/>
		</action>
		<action id="େ">
			<when output="େ" state="none"/>
			<when next="Multi_key_U0B47" state="Multi_key"/>
		</action>
		<action id="ୖ">
			<when output="ୖ" state="none"/>
			<when output="ୈ" state="Multi_key_U0B47"/>
		</action>
		<action id="ୗ">
			<when output="ୗ" state="none"/>
			<when output="ୌ" state="Multi_key_U0B47"/>
		</action>
		<action id="ஒ">
			<when output="ஒ" state="none"/>
			<when output="ஔ" state="Multi_key_U0BD7"/>
		</action>
		<action id="ா">
			<when output="ா" state="none"/>
			<when output="ொ" state="Multi_key_U0BC6"/>
			<when output="ோ" state="Multi_key_U0BC7"/>
		</action>
		<action id="ெ">
			<when output="ெ" state="none"/>
			<when next="Multi_key_U0BC6" state="Multi_key"/>
		</action>
		<action id="ே">
			<when output="ே" state="none"/>
			<when next="Multi_key_U0BC7" state="Multi_key"/>
		</action>
		<action id="ௗ">
			<when output="ௗ" state="none"/>
			<when next="Multi_key_U0BD7" state="Multi_key"/>
			<when output="ௌ" state="Multi_key_U0BC6"/>
		</action>
		<action id="ె">
			<when output="ె" state="none"/>
			<when next="Multi_key_U0C46" state="Multi_key"/>
		</action>
		<action id="ౖ">
			<when output="ౖ" state="none"/>
			<when output="ై" state="Multi_key_U0C46"/>
		</action>
		<action id="ಿ">
			<when output="ಿ" state="none"/>
			<when next="Multi_key_U0CBF" state="Multi_key"/>
		</action>
		<action id="ೂ">
			<when output="ೂ" state="none"/>
			<when output="ೊ" state="Multi_key_U0CC6"/>
		</action>
		<action id="ೆ">
			<when output="ೆ" state="none"/>
			<when next="Multi_key_U0CC6" state="Multi_key"/>
		</action>
		<action id="ೊ">
			<when output="ೊ" state="none"/>
			<when next="Multi_key_U0CCA" state="Multi_key"/>
		</action>
		<action id="ೕ">
			<when output="ೕ" state="none"/>
			<when output="ೀ" state="Multi_key_U0CBF"/>
			<when output="ೇ" state="Multi_key_U0CC6"/>
			<when output="ೋ" state="Multi_key_U0CCA"/>
		</action>
		<action id="ೖ">
			<when output="ೖ" state="none"/>
			<when output="ೈ" state="Multi_key_U0CC6"/>
		</action>
		<action id="ാ">
			<when output="ാ" state="none"/>
			<when output="ൊ" state="Multi_key_U0D46"/>
			<when output="ോ" state="Multi_key_U0D47"/>
		</action>
		<action id="െ">
			<when output="െ" state="none"/>
			<when next="Multi_key_U0D46" state="Multi_key"/>
		</action>
		<action id="േ">
			<when output="േ" state="none"/>
			<when next="Multi_key_U0D47" state="Multi_key"/>
		</action>
		<action id="ൗ">
			<when output="ൗ" state="none"/>
			<when output="ൌ" state="Multi_key_U0D46"/>
		</action>
		<action id="්">
			<when output="්" state="none"/>
			<when output="ේ" state="Multi_key_U0DD9"/>
			<when output="ෝ" state="Multi_key_U0DDC"/>
		</action>
		<action id="ා">
			<when output="ා" state="none"/>
			<when output="ො" state="Multi_key_U0DD9"/>
		</action>
		<action id="ෙ">
			<when output="ෙ" state="none"/>
			<when next="Multi_key_U0DD9" state="Multi_key"/>
		</action>
		<action id="ො">
			<when output="ො" state="none"/>
			<when next="Multi_key_U0DDC" state="Multi_key"/>
		</action>
		<action id="ෟ">
			<when output="ෟ" state="none"/>
			<when output="ෞ" state="Multi_key_U0DD9"/>
		</action>
		<action id="ཀ">
			<when output="ཀ" state="none"/>
			<when output="ཀྵ" state="Multi_key_U0FB5"/>
		</action>
		<action id="ག">
			<when output="ག" state="none"/>
			<when output="གྷ" state="Multi_key_U0FB7"/>
		</action>
		<action id="ཌ">
			<when output="ཌ" state="none"/>
			<when output="ཌྷ" state="Multi_key_U0FB7"/>
		</action>
		<action id="ད">
			<when output="ད" state="none"/>
			<when output="དྷ" state="Multi_key_U0FB7"/>
		</action>
		<action id="བ">
			<when output="བ" state="none"/>
			<when output="བྷ" state="Multi_key_U0FB7"/>
		</action>
		<action id="ཛ">
			<when output="ཛ" state="none"/>
			<when output="ཛྷ" state="Multi_key_U0FB7"/>
		</action>
		<action id="ཱ">
			<when output="ཱ" state="none"/>
			<when next="Multi_key_U0F71" state="Multi_key"/>
		</action>
		<action id="ི">
			<when output="ི" state="none"/>
			<when output="ཱི" state="Multi_key_U0F71"/>
		</action>
		<action id="ུ">
			<when output="ུ" state="none"/>
			<when output="ཱུ" state="Multi_key_U0F71"/>
		</action>
		<action id="ྀ">
			<when output="ྀ" state="none"/>
			<when output="ཱྀ" state="Multi_key_U0F71"/>
			<when output="ྲྀ" state="Multi_key_U0FB2"/>
			<when output="ླྀ" state="Multi_key_U0FB3"/>
		</action>
		<action id="ྐ">
			<when output="ྐ" state="none"/>
			<when next="Multi_key_U0F90" state="Multi_key"/>
		</action>
		<action id="ྒ">
			<when output="ྒ" state="none"/>
			<when next="Multi_key_U0F92" state="Multi_key"/>
		</action>
		<action id="ྜ">
			<when output="ྜ" state="none"/>
			<when next="Multi_key_U0F9C" state="Multi_key"/>
		</action>
		<action id="ྡ">
			<when output="ྡ" state="none"/>
			<when next="Multi_key_U0FA1" state="Multi_key"/>
		</action>
		<action id="ྦ">
			<when output="ྦ" state="none"/>
			<when next="Multi_key_U0FA6" state="Multi_key"/>
		</action>
		<action id="ྫ">
			<when output="ྫ" state="none"/>
			<when next="Multi_key_U0FAB" state="Multi_key"/>
		</action>
		<action id="ྲ">
			<when output="ྲ" state="none"/>
			<when next="Multi_key_U0FB2" state="Multi_key"/>
		</action>
		<action id="ླ">
			<when output="ླ" state="none"/>
			<when next="Multi_key_U0FB3" state="Multi_key"/>
		</action>
		<action id="ྵ">
			<when output="ྵ" state="none"/>
			<when next="Multi_key_U0FB5" state="Multi_key"/>
			<when output="ྐྵ" state="Multi_key_U0F90"/>
		</action>
		<action id="ྷ">
			<when output="ྷ" state="none"/>
			<when next="Multi_key_U0FB7" state="Multi_key"/>
			<when output="ྒྷ" state="Multi_key_U0F92"/>
			<when output="ྜྷ" state="Multi_key_U0F9C"/>
			<when output="ྡྷ" state="Multi_key_U0FA1"/>
			<when output="ྦྷ" state="Multi_key_U0FA6"/>
			<when output="ྫྷ" state="Multi_key_U0FAB"/>
		</action>
		<action id="ဥ">
			<when output="ဥ" state="none"/>
			<when output="ဦ" state="Multi_key_U102E"/>
		</action>
		<action id="ီ">
			<when output="ီ" state="none"/>
			<when next="Multi_key_U102E" state="Multi_key"/>
		</action>
		<action id="ᄀ">
			<when output="ᄀ" state="none"/>
			<when next="Multi_key_U1100" state="Multi_key"/>
			<when output="ᄁ" state="Multi_key_U1100"/>
			<when output="ᄓ" state="Multi_key_U1102"/>
			<when output="ᄗ" state="Multi_key_U1103"/>
			<when output="ᄞ" state="Multi_key_U1107"/>
			<when output="ᄭ" state="Multi_key_U1109"/>
			<when output="ᅁ" state="Multi_key_U110B"/>
			<when output="ᄢ" state="Multi_key_U1121"/>
			<when output="ᄳ" state="Multi_key_U1132"/>
			<when next="Multi_key_parenleft_U1100" state="Multi_key_parenleft"/>
		</action>
		<action id="ᄂ">
			<when output="ᄂ" state="none"/>
			<when next="Multi_key_U1102" state="Multi_key"/>
			<when output="ᄔ" state="Multi_key_U1102"/>
			<when output="ᄘ" state="Multi_key_U1105"/>
			<when output="ᄟ" state="Multi_key_U1107"/>
			<when output="ᄮ" state="Multi_key_U1109"/>
			<when next="Multi_key_parenleft_U1102" state="Multi_key_parenleft"/>
		</action>
		<action id="ᄃ">
			<when output="ᄃ" state="none"/>
			<when next="Multi_key_U1103" state="Multi_key"/>
			<when output="ᄕ" state="Multi_key_U1102"/>
			<when output="ᄄ" state="Multi_key_U1103"/>
			<when output="ᄠ" state="Multi_key_U1107"/>
			<when output="ᄯ" state="Multi_key_U1109"/>
			<when output="ᅂ" state="Multi_key_U110B"/>
			<when output="ᄣ" state="Multi_key_U1121"/>
			<when next="Multi_key_parenleft_U1103" state="Multi_key_parenleft"/>
		</action>
		<action id="ᄅ">
			<when output="ᄅ" state="none"/>
			<when next="Multi_key_U1105" state="Multi_key"/>
			<when output="ᄙ" state="Multi_key_U1105"/>
			<when output="ᄰ" state="Multi_key_U1109"/>
			<when next="Multi_key_parenleft_U1105" state="Multi_key_parenleft"/>
		</action>
		<action id="ᄆ">
			<when output="ᄆ" state="none"/>
			<when next="Multi_key_U1106" state="Multi_key"/>
			<when output="ᄱ" state="Multi_key_U1109"/>
			<when output="ᅃ" state="Multi_key_U110B"/>
			<when next="Multi_key_parenleft_U1106" state="Multi_key_parenleft"/>
		</action>
		<action id="ᄇ">
			<when output="ᄇ" state="none"/>
			<when next="Multi_key_U1107" state="Multi_key"/>
			<when output="ᄖ" state="Multi_key_U1102"/>
			<when output="ᄜ" state="Multi_key_U1106"/>
			<when output="ᄈ" state="Multi_key_U1107"/>
			<when output="ᄲ" state="Multi_key_U1109"/>
			<when output="ᅄ" state="Multi_key_U110B"/>
			<when output="ᅖ" state="Multi_key_U1111"/>
			<when output="ᄤ" state="Multi_key_U1121"/>
			<when next="Multi_key_parenleft_U1107" state="Multi_key_parenleft"/>
		</action>
		<action id="ᄈ">
			<when output="ᄈ" state="none"/>
			<when next="Multi_key_U1108" state="Multi_key"/>
		</action>
		<action id="ᄉ">
			<when output="ᄉ" state="none"/>
			<when next="Multi_key_U1109" state="Multi_key"/>
			<when output="ᄡ" state="Multi_key_U1107"/>
			<when output="ᄊ" state="Multi_key_U1109"/>
			<when output="ᄴ" state="Multi_key_U110A"/>
			<when output="ᅅ" state="Multi_key_U110B"/>
			<when output="ᄥ" state="Multi_key_U1121"/>
			<when next="Multi_key_parenleft_U1109" state="Multi_key_parenleft"/>
		</action>
		<action id="ᄊ">
			<when output="ᄊ" state="none"/>
			<when next="Multi_key_U110A" state="Multi_key"/>
			<when output="ᄥ" state="Multi_key_U1107"/>
			<when output="ᄴ" state="Multi_key_U1109"/>
		</action>
		<action id="ᄋ">
			<when output="ᄋ" state="none"/>
			<when next="Multi_key_U110B" state="Multi_key"/>
			<when output="ᄛ" state="Multi_key_U1105"/>
			<when output="ᄝ" state="Multi_key_U1106"/>
			<when output="ᄫ" state="Multi_key_U1107"/>
			<when output="ᄬ" state="Multi_key_U1108"/>
			<when output="ᄵ" state="Multi_key_U1109"/>
			<when output="ᅇ" state="Multi_key_U110B"/>
			<when output="ᅍ" state="Multi_key_U110C"/>
			<when output="ᅗ" state="Multi_key_U1111"/>
			<when next="Multi_key_parenleft_U110B" state="Multi_key_parenleft"/>
		</action>
		<action id="ᄌ">
			<when output="ᄌ" state="none"/>
			<when next="Multi_key_U110C" state="Multi_key"/>
			<when output="ᄧ" state="Multi_key_U1107"/>
			<when output="ᄶ" state="Multi_key_U1109"/>
			<when output="ᅈ" state="Multi_key_U110B"/>
			<when output="ᄍ" state="Multi_key_U110C"/>
			<when output="ᄦ" state="Multi_key_U1121"/>
			<when next="Multi_key_parenleft_U110C" state="Multi_key_parenleft"/>
		</action>
		<action id="ᄎ">
			<when output="ᄎ" state="none"/>
			<when next="Multi_key_U110E" state="Multi_key"/>
			<when output="ᄨ" state="Multi_key_U1107"/>
			<when output="ᄷ" state="Multi_key_U1109"/>
			<when output="ᅉ" state="Multi_key_U110B"/>
			<when next="Multi_key_parenleft_U110E" state="Multi_key_parenleft"/>
		</action>
		<action id="ᄏ">
			<when output="ᄏ" state="none"/>
			<when output="ᄸ" state="Multi_key_U1109"/>
			<when output="ᅒ" state="Multi_key_U110E"/>
			<when next="Multi_key_parenleft_U110F" state="Multi_key_parenleft"/>
		</action>
		<action id="ᄐ">
			<when output="ᄐ" state="none"/>
			<when output="ᄩ" state="Multi_key_U1107"/>
			<when output="ᄹ" state="Multi_key_U1109"/>
			<when output="ᅊ" state="Multi_key_U110B"/>
			<when next="Multi_key_parenleft_U1110" state="Multi_key_parenleft"/>
		</action>
		<action id="ᄑ">
			<when output="ᄑ" state="none"/>
			<when next="Multi_key_U1111" state="Multi_key"/>
			<when output="ᄪ" state="Multi_key_U1107"/>
			<when output="ᄺ" state="Multi_key_U1109"/>
			<when output="ᅋ" state="Multi_key_U110B"/>
			<when next="Multi_key_parenleft_U1111" state="Multi_key_parenleft"/>
		</action>
		<action id="ᄒ">
			<when output="ᄒ" state="none"/>
			<when next="Multi_key_U1112" state="Multi_key"/>
			<when output="ᄚ" state="Multi_key_U1105"/>
			<when output="ᄻ" state="Multi_key_U1109"/>
			<when output="ᅓ" state="Multi_key_U110E"/>
			<when output="ᅘ" state="Multi_key_U1112"/>
			<when next="Multi_key_parenleft_U1112" state="Multi_key_parenleft"/>
		</action>
		<action id="ᄞ">
			<when output="ᄞ" state="none"/>
			<when output="ᄳ" state="Multi_key_U1109"/>
		</action>
		<action id="ᄡ">
			<when output="ᄡ" state="none"/>
			<when next="Multi_key_U1121" state="Multi_key"/>
		</action>
		<action id="ᄫ">
			<when output="ᄫ" state="none"/>
			<when output="ᄬ" state="Multi_key_U1107"/>
		</action>
		<action id="ᄭ">
			<when output="ᄭ" state="none"/>
			<when output="ᄢ" state="Multi_key_U1107"/>
		</action>
		<action id="ᄯ">
			<when output="ᄯ" state="none"/>
			<when output="ᄣ" state="Multi_key_U1107"/>
		</action>
		<action id="ᄲ">
			<when output="ᄲ" state="none"/>
			<when next="Multi_key_U1132" state="Multi_key"/>
			<when output="ᄤ" state="Multi_key_U1107"/>
		</action>
		<action id="ᄶ">
			<when output="ᄶ" state="none"/>
			<when output="ᄦ" state="Multi_key_U1107"/>
		</action>
		<action id="ᄼ">
			<when output="ᄼ" state="none"/>
			<when next="Multi_key_U113C" state="Multi_key"/>
			<when output="ᄽ" state="Multi_key_U113C"/>
		</action>
		<action id="ᄾ">
			<when output="ᄾ" state="none"/>
			<when next="Multi_key_U113E" state="Multi_key"/>
			<when output="ᄿ" state="Multi_key_U113E"/>
		</action>
		<action id="ᅀ">
			<when output="ᅀ" state="none"/>
			<when output="ᅆ" state="Multi_key_U110B"/>
		</action>
		<action id="ᅎ">
			<when output="ᅎ" state="none"/>
			<when next="Multi_key_U114E" state="Multi_key"/>
			<when output="ᅏ" state="Multi_key_U114E"/>
		</action>
		<action id="ᅐ">
			<when output="ᅐ" state="none"/>
			<when next="Multi_key_U1150" state="Multi_key"/>
			<when output="ᅑ" state="Multi_key_U1150"/>
		</action>
		<action id="ᅡ">
			<when output="ᅡ" state="none"/>
			<when next="Multi_key_U1161" state="Multi_key"/>
			<when output="ᅪ" state="Multi_key_U1169"/>
			<when output="ᆉ" state="Multi_key_U116E"/>
			<when output="ᆎ" state="Multi_key_U1172"/>
			<when output="ᆘ" state="Multi_key_U1175"/>
			<when next="Multi_key_parenleft_U1100_U1161" state="Multi_key_parenleft_U1100"/>
			<when next="Multi_key_parenleft_U1102_U1161" state="Multi_key_parenleft_U1102"/>
			<when next="Multi_key_parenleft_U1103_U1161" state="Multi_key_parenleft_U1103"/>
			<when next="Multi_key_parenleft_U1105_U1161" state="Multi_key_parenleft_U1105"/>
			<when next="Multi_key_parenleft_U1106_U1161" state="Multi_key_parenleft_U1106"/>
			<when next="Multi_key_parenleft_U1107_U1161" state="Multi_key_parenleft_U1107"/>
			<when next="Multi_key_parenleft_U1109_U1161" state="Multi_key_parenleft_U1109"/>
			<when next="Multi_key_parenleft_U110B_U1161" state="Multi_key_parenleft_U110B"/>
			<when next="Multi_key_parenleft_U110C_U1161" state="Multi_key_parenleft_U110C"/>
			<when next="Multi_key_parenleft_U110E_U1161" state="Multi_key_parenleft_U110E"/>
			<when next="Multi_key_parenleft_U110F_U1161" state="Multi_key_parenleft_U110F"/>
			<when next="Multi_key_parenleft_U1110_U1161" state="Multi_key_parenleft_U1110"/>
			<when next="Multi_key_parenleft_U1111_U1161" state="Multi_key_parenleft_U1111"/>
			<when next="Multi_key_parenleft_U1112_U1161" state="Multi_key_parenleft_U1112"/>
		</action>
		<action id="ᅢ">
			<when output="ᅢ" state="none"/>
			<when output="ᅫ" state="Multi_key_U1169"/>
			<when output="ᆊ" state="Multi_key_U116E"/>
		</action>
		<action id="ᅣ">
			<when output="ᅣ" state="none"/>
			<when next="Multi_key_U1163" state="Multi_key"/>
			<when output="ᆄ" state="Multi_key_U116D"/>
			<when output="ᆙ" state="Multi_key_U1175"/>
		</action>
		<action id="ᅤ">
			<when output="ᅤ" state="none"/>
			<when output="ᆅ" state="Multi_key_U116D"/>
		</action>
		<action id="ᅥ">
			<when output="ᅥ" state="none"/>
			<when next="Multi_key_U1165" state="Multi_key"/>
			<when output="ᅿ" state="Multi_key_U1169"/>
			<when output="ᅯ" state="Multi_key_U116E"/>
			<when output="ᆏ" state="Multi_key_U1172"/>
			<when output="ᆟ" state="Multi_key_U119E"/>
		</action>
		<action id="ᅦ">
			<when output="ᅦ" state="none"/>
			<when output="ᆀ" state="Multi_key_U1169"/>
			<when output="ᅰ" state="Multi_key_U116E"/>
			<when output="ᆐ" state="Multi_key_U1172"/>
		</action>
		<action id="ᅧ">
			<when output="ᅧ" state="none"/>
			<when next="Multi_key_U1167" state="Multi_key"/>
			<when output="ᆆ" state="Multi_key_U116D"/>
			<when output="ᆑ" state="Multi_key_U1172"/>
		</action>
		<action id="ᅨ">
			<when output="ᅨ" state="none"/>
			<when output="ᆁ" state="Multi_key_U1169"/>
			<when output="ᆌ" state="Multi_key_U116E"/>
			<when output="ᆒ" state="Multi_key_U1172"/>
		</action>
		<action id="ᅩ">
			<when output="ᅩ" state="none"/>
			<when next="Multi_key_U1169" state="Multi_key"/>
			<when output="ᅶ" state="Multi_key_U1161"/>
			<when output="ᅸ" state="Multi_key_U1163"/>
			<when output="ᅺ" state="Multi_key_U1165"/>
			<when output="ᅽ" state="Multi_key_U1167"/>
			<when output="ᆂ" state="Multi_key_U1169"/>
			<when output="ᆇ" state="Multi_key_U116D"/>
			<when output="ᆚ" state="Multi_key_U1175"/>
		</action>
		<action id="ᅪ">
			<when output="ᅪ" state="none"/>
			<when next="Multi_key_U116A" state="Multi_key"/>
		</action>
		<action id="ᅭ">
			<when output="ᅭ" state="none"/>
			<when next="Multi_key_U116D" state="Multi_key"/>
			<when output="ᅹ" state="Multi_key_U1163"/>
		</action>
		<action id="ᅮ">
			<when output="ᅮ" state="none"/>
			<when next="Multi_key_U116E" state="Multi_key"/>
			<when output="ᅷ" state="Multi_key_U1161"/>
			<when output="ᅻ" state="Multi_key_U1165"/>
			<when output="ᅾ" state="Multi_key_U1167"/>
			<when output="ᆃ" state="Multi_key_U1169"/>
			<when output="ᆍ" state="Multi_key_U116E"/>
			<when output="ᆓ" state="Multi_key_U1172"/>
			<when output="ᆕ" state="Multi_key_U1173"/>
			<when output="ᆗ" state="Multi_key_U1174"/>
			<when output="ᆛ" state="Multi_key_U1175"/>
			<when output="ᆠ" state="Multi_key_U119E"/>
		</action>
		<action id="ᅯ">
			<when output="ᅯ" state="none"/>
			<when next="Multi_key_U116F" state="Multi_key"/>
		</action>
		<action id="ᅲ">
			<when output="ᅲ" state="none"/>
			<when next="Multi_key_U1172" state="Multi_key"/>
		</action>
		<action id="ᅳ">
			<when output="ᅳ" state="none"/>
			<when next="Multi_key_U1173" state="Multi_key"/>
			<when output="ᅼ" state="Multi_key_U1165"/>
			<when output="ᆋ" state="Multi_key_U116F"/>
			<when output="ᆖ" state="Multi_key_U1173"/>
			<when output="ᆜ" state="Multi_key_U1175"/>
		</action>
		<action id="ᅴ">
			<when output="ᅴ" state="none"/>
			<when next="Multi_key_U1174" state="Multi_key"/>
		</action>
		<action id="ᅵ">
			<when output="ᅵ" state="none"/>
			<when next="Multi_key_U1175" state="Multi_key"/>
			<when output="ᅢ" state="Multi_key_U1161"/>
			<when output="ᅤ" state="Multi_key_U1163"/>
			<when output="ᅦ" state="Multi_key_U1165"/>
			<when output="ᅨ" state="Multi_key_U1167"/>
			<when output="ᅬ" state="Multi_key_U1169"/>
			<when output="ᅫ" state="Multi_key_U116A"/>
			<when output="ᆈ" state="Multi_key_U116D"/>
			<when output="ᅱ" state="Multi_key_U116E"/>
			<when output="ᅰ" state="Multi_key_U116F"/>
			<when output="ᆔ" state="Multi_key_U1172"/>
			<when output="ᅴ" state="Multi_key_U1173"/>
			<when output="ᆡ" state="Multi_key_U119E"/>
		</action>
		<action id="ᅼ">
			<when output="ᅼ" state="none"/>
			<when output="ᆋ" state="Multi_key_U116E"/>
		</action>
		<action id="ᆞ">
			<when output="ᆞ" state="none"/>
			<when next="Multi_key_U119E" state="Multi_key"/>
			<when output="ᆝ" state="Multi_key_U1175"/>
			<when output="ᆢ" state="Multi_key_U119E"/>
		</action>
		<action id="ᆨ">
			<when output="ᆨ" state="none"/>
			<when next="Multi_key_U11A8" state="Multi_key"/>
			<when output="ᆩ" state="Multi_key_U11A8"/>
			<when output="ᇄ" state="Multi_key_U11AA"/>
			<when output="ᇅ" state="Multi_key_U11AB"/>
			<when output="ᇊ" state="Multi_key_U11AE"/>
			<when output="ᆰ" state="Multi_key_U11AF"/>
			<when output="ᇑ" state="Multi_key_U11B1"/>
			<when output="ᇚ" state="Multi_key_U11B7"/>
			<when output="ᇧ" state="Multi_key_U11BA"/>
			<when output="ᇬ" state="Multi_key_U11BC"/>
			<when output="ᇭ" state="Multi_key_U11EC"/>
		</action>
		<action id="ᆩ">
			<when output="ᆩ" state="none"/>
			<when output="ᇭ" state="Multi_key_U11BC"/>
		</action>
		<action id="ᆪ">
			<when output="ᆪ" state="none"/>
			<when next="Multi_key_U11AA" state="Multi_key"/>
			<when output="ᇌ" state="Multi_key_U11AF"/>
		</action>
		<action id="ᆫ">
			<when output="ᆫ" state="none"/>
			<when next="Multi_key_U11AB" state="Multi_key"/>
			<when output="ᇍ" state="Multi_key_U11AF"/>
			<when output="ᇵ" state="Multi_key_U11C2"/>
		</action>
		<action id="ᆮ">
			<when output="ᆮ" state="none"/>
			<when next="Multi_key_U11AE" state="Multi_key"/>
			<when output="ᇆ" state="Multi_key_U11AB"/>
			<when output="ᇎ" state="Multi_key_U11AF"/>
			<when output="ᇨ" state="Multi_key_U11BA"/>
		</action>
		<action id="ᆯ">
			<when output="ᆯ" state="none"/>
			<when next="Multi_key_U11AF" state="Multi_key"/>
			<when output="ᇃ" state="Multi_key_U11A8"/>
			<when output="ᇋ" state="Multi_key_U11AE"/>
			<when output="ᇐ" state="Multi_key_U11AF"/>
			<when output="ᇛ" state="Multi_key_U11B7"/>
			<when output="ᇣ" state="Multi_key_U11B8"/>
			<when output="ᇩ" state="Multi_key_U11BA"/>
			<when output="ᇶ" state="Multi_key_U11C2"/>
		</action>
		<action id="ᆰ">
			<when output="ᆰ" state="none"/>
			<when next="Multi_key_U11B0" state="Multi_key"/>
		</action>
		<action id="ᆱ">
			<when output="ᆱ" state="none"/>
			<when next="Multi_key_U11B1" state="Multi_key"/>
		</action>
		<action id="ᆲ">
			<when output="ᆲ" state="none"/>
			<when next="Multi_key_U11B2" state="Multi_key"/>
		</action>
		<action id="ᆳ">
			<when output="ᆳ" state="none"/>
			<when next="Multi_key_U11B3" state="Multi_key"/>
		</action>
		<action id="ᆷ">
			<when output="ᆷ" state="none"/>
			<when next="Multi_key_U11B7" state="Multi_key"/>
			<when output="ᆱ" state="Multi_key_U11AF"/>
			<when output="ᇷ" state="Multi_key_U11C2"/>
		</action>
		<action id="ᆸ">
			<when output="ᆸ" state="none"/>
			<when next="Multi_key_U11B8" state="Multi_key"/>
			<when output="ᆲ" state="Multi_key_U11AF"/>
			<when output="ᇜ" state="Multi_key_U11B7"/>
			<when output="ᇪ" state="Multi_key_U11BA"/>
			<when output="ᇳ" state="Multi_key_U11C1"/>
			<when output="ᇸ" state="Multi_key_U11C2"/>
		</action>
		<action id="ᆹ">
			<when output="ᆹ" state="none"/>
			<when output="ᇓ" state="Multi_key_U11AF"/>
		</action>
		<action id="ᆺ">
			<when output="ᆺ" state="none"/>
			<when next="Multi_key_U11BA" state="Multi_key"/>
			<when output="ᆪ" state="Multi_key_U11A8"/>
			<when output="ᇇ" state="Multi_key_U11AB"/>
			<when output="ᆳ" state="Multi_key_U11AF"/>
			<when output="ᇌ" state="Multi_key_U11B0"/>
			<when output="ᇒ" state="Multi_key_U11B1"/>
			<when output="ᇓ" state="Multi_key_U11B2"/>
			<when output="ᇖ" state="Multi_key_U11B3"/>
			<when output="ᇝ" state="Multi_key_U11B7"/>
			<when output="ᆹ" state="Multi_key_U11B8"/>
			<when output="ᆻ" state="Multi_key_U11BA"/>
			<when output="ᇞ" state="Multi_key_U11DD"/>
			<when output="ᇱ" state="Multi_key_U11F0"/>
		</action>
		<action id="ᆻ">
			<when output="ᆻ" state="none"/>
			<when output="ᇖ" state="Multi_key_U11AF"/>
			<when output="ᇞ" state="Multi_key_U11B7"/>
		</action>
		<action id="ᆼ">
			<when output="ᆼ" state="none"/>
			<when next="Multi_key_U11BC" state="Multi_key"/>
			<when output="ᇕ" state="Multi_key_U11B2"/>
			<when output="ᇢ" state="Multi_key_U11B7"/>
			<when output="ᇦ" state="Multi_key_U11B8"/>
			<when output="ᇮ" state="Multi_key_U11BC"/>
			<when output="ᇴ" state="Multi_key_U11C1"/>
		</action>
		<action id="ᆽ">
			<when output="ᆽ" state="none"/>
			<when output="ᆬ" state="Multi_key_U11AB"/>
		</action>
		<action id="ᆾ">
			<when output="ᆾ" state="none"/>
			<when output="ᇠ" state="Multi_key_U11B7"/>
		</action>
		<action id="ᆿ">
			<when output="ᆿ" state="none"/>
			<when output="ᇘ" state="Multi_key_U11AF"/>
			<when output="ᇯ" state="Multi_key_U11BC"/>
		</action>
		<action id="ᇀ">
			<when output="ᇀ" state="none"/>
			<when output="ᇉ" state="Multi_key_U11AB"/>
			<when output="ᆴ" state="Multi_key_U11AF"/>
		</action>
		<action id="ᇁ">
			<when output="ᇁ" state="none"/>
			<when next="Multi_key_U11C1" state="Multi_key"/>
			<when output="ᆵ" state="Multi_key_U11AF"/>
			<when output="ᇤ" state="Multi_key_U11B8"/>
		</action>
		<action id="ᇂ">
			<when output="ᇂ" state="none"/>
			<when next="Multi_key_U11C2" state="Multi_key"/>
			<when output="ᆭ" state="Multi_key_U11AB"/>
			<when output="ᆶ" state="Multi_key_U11AF"/>
			<when output="ᇔ" state="Multi_key_U11B2"/>
			<when output="ᇡ" state="Multi_key_U11B7"/>
			<when output="ᇥ" state="Multi_key_U11B8"/>
			<when output="ᇏ" state="Multi_key_U11CE"/>
		</action>
		<action id="ᇎ">
			<when output="ᇎ" state="none"/>
			<when next="Multi_key_U11CE" state="Multi_key"/>
		</action>
		<action id="ᇚ">
			<when output="ᇚ" state="none"/>
			<when output="ᇑ" state="Multi_key_U11AF"/>
		</action>
		<action id="ᇝ">
			<when output="ᇝ" state="none"/>
			<when next="Multi_key_U11DD" state="Multi_key"/>
			<when output="ᇒ" state="Multi_key_U11AF"/>
		</action>
		<action id="ᇥ">
			<when output="ᇥ" state="none"/>
			<when output="ᇔ" state="Multi_key_U11AF"/>
		</action>
		<action id="ᇦ">
			<when output="ᇦ" state="none"/>
			<when output="ᇕ" state="Multi_key_U11AF"/>
		</action>
		<action id="ᇧ">
			<when output="ᇧ" state="none"/>
			<when output="ᇄ" state="Multi_key_U11A8"/>
		</action>
		<action id="ᇫ">
			<when output="ᇫ" state="none"/>
			<when output="ᇈ" state="Multi_key_U11AB"/>
			<when output="ᇗ" state="Multi_key_U11AF"/>
			<when output="ᇟ" state="Multi_key_U11B7"/>
			<when output="ᇲ" state="Multi_key_U11F0"/>
		</action>
		<action id="ᇬ">
			<when output="ᇬ" state="none"/>
			<when next="Multi_key_U11EC" state="Multi_key"/>
		</action>
		<action id="ᇰ">
			<when output="ᇰ" state="none"/>
			<when next="Multi_key_U11F0" state="Multi_key"/>
		</action>
		<action id="ᇹ">
			<when output="ᇹ" state="none"/>
			<when output="ᇙ" state="Multi_key_U11AF"/>
		</action>
		<action id="ᴑ">
			<when output="ᴑ" state="none"/>
			<when output="ᴓ" state="stroke"/>
		</action>
		<action id="ᵲ">
			<when output="ᵲ" state="none"/>
			<when output="ᵳ" state="fishhook"/>
		</action>
		<action id="Ḷ">
			<when output="Ḷ" state="none"/>
			<when output="Ḹ" state="Multi_key_macron"/>
			<when output="Ḹ" state="Multi_key_underscore"/>
			<when output="Ḹ" state="macron"/>
		</action>
		<action id="ḷ">
			<when output="ḷ" state="none"/>
			<when output="ḹ" state="Multi_key_macron"/>
			<when output="ḹ" state="Multi_key_underscore"/>
			<when output="ḹ" state="macron"/>
		</action>
		<action id="Ṛ">
			<when output="Ṛ" state="none"/>
			<when output="Ṝ" state="Multi_key_macron"/>
			<when output="Ṝ" state="Multi_key_underscore"/>
			<when output="Ṝ" state="macron"/>
		</action>
		<action id="ṛ">
			<when output="ṛ" state="none"/>
			<when output="ṝ" state="Multi_key_macron"/>
			<when output="ṝ" state="Multi_key_underscore"/>
			<when output="ṝ" state="macron"/>
		</action>
		<action id="Ṡ">
			<when output="Ṡ" state="none"/>
			<when output="Ṥ" state="acute"/>
			<when output="Ṩ" state="belowdot"/>
			<when output="Ṧ" state="caron"/>
		</action>
		<action id="ṡ">
			<when output="ṡ" state="none"/>
			<when output="ṥ" state="acute"/>
			<when output="ṩ" state="belowdot"/>
			<when output="ṧ" state="caron"/>
		</action>
		<action id="Ṣ">
			<when output="Ṣ" state="none"/>
			<when output="Ṩ" state="Multi_key_period"/>
			<when output="Ṩ" state="abovedot"/>
		</action>
		<action id="ṣ">
			<when output="ṣ" state="none"/>
			<when output="ṩ" state="Multi_key_period"/>
			<when output="ṩ" state="abovedot"/>
		</action>
		<action id="Ạ">
			<when output="Ạ" state="none"/>
			<when output="Ặ" state="Multi_key_U"/>
			<when output="Ậ" state="Multi_key_asciicircum"/>
			<when output="Ặ" state="Multi_key_b"/>
			<when output="Ặ" state="breve"/>
			<when output="Ậ" state="circumflex"/>
		</action>
		<action id="ạ">
			<when output="ạ" state="none"/>
			<when output="ặ" state="Multi_key_U"/>
			<when output="ậ" state="Multi_key_asciicircum"/>
			<when output="ặ" state="Multi_key_b"/>
			<when output="ặ" state="breve"/>
			<when output="ậ" state="circumflex"/>
		</action>
		<action id="Ả">
			<when output="Ả" state="none"/>
			<when output="Ẳ" state="breve"/>
			<when output="Ẩ" state="circumflex"/>
		</action>
		<action id="ả">
			<when output="ả" state="none"/>
			<when output="ẳ" state="breve"/>
			<when output="ẩ" state="circumflex"/>
		</action>
		<action id="Ẹ">
			<when output="Ẹ" state="none"/>
			<when output="Ệ" state="Multi_key_asciicircum"/>
			<when output="Ệ" state="circumflex"/>
		</action>
		<action id="ẹ">
			<when output="ẹ" state="none"/>
			<when output="ệ" state="Multi_key_asciicircum"/>
			<when output="ệ" state="circumflex"/>
		</action>
		<action id="Ẻ">
			<when output="Ẻ" state="none"/>
			<when output="Ể" state="circumflex"/>
		</action>
		<action id="ẻ">
			<when output="ẻ" state="none"/>
			<when output="ể" state="circumflex"/>
		</action>
		<action id="Ẽ">
			<when output="Ẽ" state="none"/>
			<when output="Ễ" state="circumflex"/>
		</action>
		<action id="ẽ">
			<when output="ẽ" state="none"/>
			<when output="ễ" state="circumflex"/>
		</action>
		<action id="Ọ">
			<when output="Ọ" state="none"/>
			<when output="Ộ" state="Multi_key_asciicircum"/>
			<when output="Ộ" state="circumflex"/>
			<when output="Ợ" state="horn"/>
		</action>
		<action id="ọ">
			<when output="ọ" state="none"/>
			<when output="ộ" state="Multi_key_asciicircum"/>
			<when output="ộ" state="circumflex"/>
			<when output="ợ" state="horn"/>
		</action>
		<action id="Ỏ">
			<when output="Ỏ" state="none"/>
			<when output="Ổ" state="circumflex"/>
			<when output="Ở" state="horn"/>
		</action>
		<action id="ỏ">
			<when output="ỏ" state="none"/>
			<when output="ổ" state="circumflex"/>
			<when output="ở" state="horn"/>
		</action>
		<action id="Ụ">
			<when output="Ụ" state="none"/>
			<when output="Ự" state="horn"/>
		</action>
		<action id="ụ">
			<when output="ụ" state="none"/>
			<when output="ự" state="horn"/>
		</action>
		<action id="Ủ">
			<when output="Ủ" state="none"/>
			<when output="ϒ" state="greek"/>
			<when output="Ử" state="horn"/>
		</action>
		<action id="ủ">
			<when output="ủ" state="none"/>
			<when output="ử" state="horn"/>
		</action>
		<action id="ἀ">
			<when output="ἀ" state="none"/>
			<when output="ᾀ" state="Multi_key_Greek_iota"/>
			<when output="ᾆ" state="Multi_key_Greek_iota_U0342"/>
			<when output="ᾄ" state="Multi_key_Greek_iota_acute"/>
			<when output="ᾄ" state="Multi_key_Greek_iota_apostrophe"/>
			<when output="ᾆ" state="Multi_key_Greek_iota_asciitilde"/>
			<when output="ᾄ" state="Multi_key_Greek_iota_combining_acute"/>
			<when output="ᾂ" state="Multi_key_Greek_iota_combining_grave"/>
			<when output="ᾄ" state="Multi_key_Greek_iota_dead_acute"/>
			<when output="ᾂ" state="Multi_key_Greek_iota_dead_grave"/>
			<when output="ᾆ" state="Multi_key_Greek_iota_dead_tilde"/>
			<when output="ᾂ" state="Multi_key_Greek_iota_grave"/>
			<when output="ἄ" state="Multi_key_acute"/>
			<when output="ἄ" state="Multi_key_apostrophe"/>
			<when output="ἆ" state="Multi_key_asciitilde"/>
			<when output="ἂ" state="Multi_key_grave"/>
		</action>
		<action id="ἁ">
			<when output="ἁ" state="none"/>
			<when output="ᾁ" state="Multi_key_Greek_iota"/>
			<when output="ᾇ" state="Multi_key_Greek_iota_U0342"/>
			<when output="ᾅ" state="Multi_key_Greek_iota_acute"/>
			<when output="ᾅ" state="Multi_key_Greek_iota_apostrophe"/>
			<when output="ᾇ" state="Multi_key_Greek_iota_asciitilde"/>
			<when output="ᾅ" state="Multi_key_Greek_iota_combining_acute"/>
			<when output="ᾃ" state="Multi_key_Greek_iota_combining_grave"/>
			<when output="ᾅ" state="Multi_key_Greek_iota_dead_acute"/>
			<when output="ᾃ" state="Multi_key_Greek_iota_dead_grave"/>
			<when output="ᾇ" state="Multi_key_Greek_iota_dead_tilde"/>
			<when output="ᾃ" state="Multi_key_Greek_iota_grave"/>
			<when output="ἅ" state="Multi_key_acute"/>
			<when output="ἅ" state="Multi_key_apostrophe"/>
			<when output="ἇ" state="Multi_key_asciitilde"/>
			<when output="ἃ" state="Multi_key_grave"/>
		</action>
		<action id="ἂ">
			<when output="ἂ" state="none"/>
			<when output="ᾂ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="ἃ">
			<when output="ἃ" state="none"/>
			<when output="ᾃ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="ἄ">
			<when output="ἄ" state="none"/>
			<when output="ᾄ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="ἅ">
			<when output="ἅ" state="none"/>
			<when output="ᾅ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="ἆ">
			<when output="ἆ" state="none"/>
			<when output="ᾆ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="ἇ">
			<when output="ἇ" state="none"/>
			<when output="ᾇ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="Ἀ">
			<when output="Ἀ" state="none"/>
			<when output="ᾈ" state="Multi_key_Greek_iota"/>
			<when output="ᾎ" state="Multi_key_Greek_iota_U0342"/>
			<when output="ᾌ" state="Multi_key_Greek_iota_acute"/>
			<when output="ᾌ" state="Multi_key_Greek_iota_apostrophe"/>
			<when output="ᾎ" state="Multi_key_Greek_iota_asciitilde"/>
			<when output="ᾌ" state="Multi_key_Greek_iota_combining_acute"/>
			<when output="ᾊ" state="Multi_key_Greek_iota_combining_grave"/>
			<when output="ᾌ" state="Multi_key_Greek_iota_dead_acute"/>
			<when output="ᾊ" state="Multi_key_Greek_iota_dead_grave"/>
			<when output="ᾎ" state="Multi_key_Greek_iota_dead_tilde"/>
			<when output="ᾊ" state="Multi_key_Greek_iota_grave"/>
			<when output="Ἄ" state="Multi_key_acute"/>
			<when output="Ἄ" state="Multi_key_apostrophe"/>
			<when output="Ἆ" state="Multi_key_asciitilde"/>
			<when output="Ἂ" state="Multi_key_grave"/>
		</action>
		<action id="Ἁ">
			<when output="Ἁ" state="none"/>
			<when output="ᾉ" state="Multi_key_Greek_iota"/>
			<when output="ᾏ" state="Multi_key_Greek_iota_U0342"/>
			<when output="ᾍ" state="Multi_key_Greek_iota_acute"/>
			<when output="ᾍ" state="Multi_key_Greek_iota_apostrophe"/>
			<when output="ᾏ" state="Multi_key_Greek_iota_asciitilde"/>
			<when output="ᾍ" state="Multi_key_Greek_iota_combining_acute"/>
			<when output="ᾋ" state="Multi_key_Greek_iota_combining_grave"/>
			<when output="ᾍ" state="Multi_key_Greek_iota_dead_acute"/>
			<when output="ᾋ" state="Multi_key_Greek_iota_dead_grave"/>
			<when output="ᾏ" state="Multi_key_Greek_iota_dead_tilde"/>
			<when output="ᾋ" state="Multi_key_Greek_iota_grave"/>
			<when output="Ἅ" state="Multi_key_acute"/>
			<when output="Ἅ" state="Multi_key_apostrophe"/>
			<when output="Ἇ" state="Multi_key_asciitilde"/>
			<when output="Ἃ" state="Multi_key_grave"/>
		</action>
		<action id="Ἂ">
			<when output="Ἂ" state="none"/>
			<when output="ᾊ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="Ἃ">
			<when output="Ἃ" state="none"/>
			<when output="ᾋ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="Ἄ">
			<when output="Ἄ" state="none"/>
			<when output="ᾌ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="Ἅ">
			<when output="Ἅ" state="none"/>
			<when output="ᾍ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="Ἆ">
			<when output="Ἆ" state="none"/>
			<when output="ᾎ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="Ἇ">
			<when output="Ἇ" state="none"/>
			<when output="ᾏ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="ἐ">
			<when output="ἐ" state="none"/>
			<when output="ἔ" state="Multi_key_acute"/>
			<when output="ἔ" state="Multi_key_apostrophe"/>
			<when output="ἒ" state="Multi_key_grave"/>
		</action>
		<action id="ἑ">
			<when output="ἑ" state="none"/>
			<when output="ἕ" state="Multi_key_acute"/>
			<when output="ἕ" state="Multi_key_apostrophe"/>
			<when output="ἓ" state="Multi_key_grave"/>
		</action>
		<action id="Ἐ">
			<when output="Ἐ" state="none"/>
			<when output="Ἔ" state="Multi_key_acute"/>
			<when output="Ἔ" state="Multi_key_apostrophe"/>
			<when output="Ἒ" state="Multi_key_grave"/>
		</action>
		<action id="Ἑ">
			<when output="Ἑ" state="none"/>
			<when output="Ἕ" state="Multi_key_acute"/>
			<when output="Ἕ" state="Multi_key_apostrophe"/>
			<when output="Ἓ" state="Multi_key_grave"/>
		</action>
		<action id="ἠ">
			<when output="ἠ" state="none"/>
			<when output="ᾐ" state="Multi_key_Greek_iota"/>
			<when output="ᾖ" state="Multi_key_Greek_iota_U0342"/>
			<when output="ᾔ" state="Multi_key_Greek_iota_acute"/>
			<when output="ᾔ" state="Multi_key_Greek_iota_apostrophe"/>
			<when output="ᾖ" state="Multi_key_Greek_iota_asciitilde"/>
			<when output="ᾔ" state="Multi_key_Greek_iota_combining_acute"/>
			<when output="ᾒ" state="Multi_key_Greek_iota_combining_grave"/>
			<when output="ᾔ" state="Multi_key_Greek_iota_dead_acute"/>
			<when output="ᾒ" state="Multi_key_Greek_iota_dead_grave"/>
			<when output="ᾖ" state="Multi_key_Greek_iota_dead_tilde"/>
			<when output="ᾒ" state="Multi_key_Greek_iota_grave"/>
			<when output="ἤ" state="Multi_key_acute"/>
			<when output="ἤ" state="Multi_key_apostrophe"/>
			<when output="ἦ" state="Multi_key_asciitilde"/>
			<when output="ἢ" state="Multi_key_grave"/>
		</action>
		<action id="ἡ">
			<when output="ἡ" state="none"/>
			<when output="ᾑ" state="Multi_key_Greek_iota"/>
			<when output="ᾗ" state="Multi_key_Greek_iota_U0342"/>
			<when output="ᾕ" state="Multi_key_Greek_iota_acute"/>
			<when output="ᾕ" state="Multi_key_Greek_iota_apostrophe"/>
			<when output="ᾗ" state="Multi_key_Greek_iota_asciitilde"/>
			<when output="ᾕ" state="Multi_key_Greek_iota_combining_acute"/>
			<when output="ᾓ" state="Multi_key_Greek_iota_combining_grave"/>
			<when output="ᾕ" state="Multi_key_Greek_iota_dead_acute"/>
			<when output="ᾓ" state="Multi_key_Greek_iota_dead_grave"/>
			<when output="ᾗ" state="Multi_key_Greek_iota_dead_tilde"/>
			<when output="ᾓ" state="Multi_key_Greek_iota_grave"/>
			<when output="ἥ" state="Multi_key_acute"/>
			<when output="ἥ" state="Multi_key_apostrophe"/>
			<when output="ἧ" state="Multi_key_asciitilde"/>
			<when output="ἣ" state="Multi_key_grave"/>
		</action>
		<action id="ἢ">
			<when output="ἢ" state="none"/>
			<when output="ᾒ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="ἣ">
			<when output="ἣ" state="none"/>
			<when output="ᾓ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="ἤ">
			<when output="ἤ" state="none"/>
			<when output="ᾔ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="ἥ">
			<when output="ἥ" state="none"/>
			<when output="ᾕ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="ἦ">
			<when output="ἦ" state="none"/>
			<when output="ᾖ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="ἧ">
			<when output="ἧ" state="none"/>
			<when output="ᾗ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="Ἠ">
			<when output="Ἠ" state="none"/>
			<when output="ᾘ" state="Multi_key_Greek_iota"/>
			<when output="ᾞ" state="Multi_key_Greek_iota_U0342"/>
			<when output="ᾜ" state="Multi_key_Greek_iota_acute"/>
			<when output="ᾜ" state="Multi_key_Greek_iota_apostrophe"/>
			<when output="ᾞ" state="Multi_key_Greek_iota_asciitilde"/>
			<when output="ᾜ" state="Multi_key_Greek_iota_combining_acute"/>
			<when output="ᾚ" state="Multi_key_Greek_iota_combining_grave"/>
			<when output="ᾜ" state="Multi_key_Greek_iota_dead_acute"/>
			<when output="ᾚ" state="Multi_key_Greek_iota_dead_grave"/>
			<when output="ᾞ" state="Multi_key_Greek_iota_dead_tilde"/>
			<when output="ᾚ" state="Multi_key_Greek_iota_grave"/>
			<when output="Ἤ" state="Multi_key_acute"/>
			<when output="Ἤ" state="Multi_key_apostrophe"/>
			<when output="Ἦ" state="Multi_key_asciitilde"/>
			<when output="Ἢ" state="Multi_key_grave"/>
		</action>
		<action id="Ἡ">
			<when output="Ἡ" state="none"/>
			<when output="ᾙ" state="Multi_key_Greek_iota"/>
			<when output="ᾟ" state="Multi_key_Greek_iota_U0342"/>
			<when output="ᾝ" state="Multi_key_Greek_iota_acute"/>
			<when output="ᾝ" state="Multi_key_Greek_iota_apostrophe"/>
			<when output="ᾟ" state="Multi_key_Greek_iota_asciitilde"/>
			<when output="ᾝ" state="Multi_key_Greek_iota_combining_acute"/>
			<when output="ᾛ" state="Multi_key_Greek_iota_combining_grave"/>
			<when output="ᾝ" state="Multi_key_Greek_iota_dead_acute"/>
			<when output="ᾛ" state="Multi_key_Greek_iota_dead_grave"/>
			<when output="ᾟ" state="Multi_key_Greek_iota_dead_tilde"/>
			<when output="ᾛ" state="Multi_key_Greek_iota_grave"/>
			<when output="Ἥ" state="Multi_key_acute"/>
			<when output="Ἥ" state="Multi_key_apostrophe"/>
			<when output="Ἧ" state="Multi_key_asciitilde"/>
			<when output="Ἣ" state="Multi_key_grave"/>
		</action>
		<action id="Ἢ">
			<when output="Ἢ" state="none"/>
			<when output="ᾚ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="Ἣ">
			<when output="Ἣ" state="none"/>
			<when output="ᾛ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="Ἤ">
			<when output="Ἤ" state="none"/>
			<when output="ᾜ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="Ἥ">
			<when output="Ἥ" state="none"/>
			<when output="ᾝ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="Ἦ">
			<when output="Ἦ" state="none"/>
			<when output="ᾞ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="Ἧ">
			<when output="Ἧ" state="none"/>
			<when output="ᾟ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="ἰ">
			<when output="ἰ" state="none"/>
			<when output="ἴ" state="Multi_key_acute"/>
			<when output="ἴ" state="Multi_key_apostrophe"/>
			<when output="ἶ" state="Multi_key_asciitilde"/>
			<when output="ἲ" state="Multi_key_grave"/>
		</action>
		<action id="ἱ">
			<when output="ἱ" state="none"/>
			<when output="ἵ" state="Multi_key_acute"/>
			<when output="ἵ" state="Multi_key_apostrophe"/>
			<when output="ἷ" state="Multi_key_asciitilde"/>
			<when output="ἳ" state="Multi_key_grave"/>
		</action>
		<action id="Ἰ">
			<when output="Ἰ" state="none"/>
			<when output="Ἴ" state="Multi_key_acute"/>
			<when output="Ἴ" state="Multi_key_apostrophe"/>
			<when output="Ἶ" state="Multi_key_asciitilde"/>
			<when output="Ἲ" state="Multi_key_grave"/>
		</action>
		<action id="Ἱ">
			<when output="Ἱ" state="none"/>
			<when output="Ἵ" state="Multi_key_acute"/>
			<when output="Ἵ" state="Multi_key_apostrophe"/>
			<when output="Ἷ" state="Multi_key_asciitilde"/>
			<when output="Ἳ" state="Multi_key_grave"/>
		</action>
		<action id="ὀ">
			<when output="ὀ" state="none"/>
			<when output="ὄ" state="Multi_key_acute"/>
			<when output="ὄ" state="Multi_key_apostrophe"/>
			<when output="ὂ" state="Multi_key_grave"/>
		</action>
		<action id="ὁ">
			<when output="ὁ" state="none"/>
			<when output="ὅ" state="Multi_key_acute"/>
			<when output="ὅ" state="Multi_key_apostrophe"/>
			<when output="ὃ" state="Multi_key_grave"/>
		</action>
		<action id="Ὀ">
			<when output="Ὀ" state="none"/>
			<when output="Ὄ" state="Multi_key_acute"/>
			<when output="Ὄ" state="Multi_key_apostrophe"/>
			<when output="Ὂ" state="Multi_key_grave"/>
		</action>
		<action id="Ὁ">
			<when output="Ὁ" state="none"/>
			<when output="Ὅ" state="Multi_key_acute"/>
			<when output="Ὅ" state="Multi_key_apostrophe"/>
			<when output="Ὃ" state="Multi_key_grave"/>
		</action>
		<action id="ὐ">
			<when output="ὐ" state="none"/>
			<when output="ὔ" state="Multi_key_acute"/>
			<when output="ὔ" state="Multi_key_apostrophe"/>
			<when output="ὖ" state="Multi_key_asciitilde"/>
			<when output="ὒ" state="Multi_key_grave"/>
		</action>
		<action id="ὑ">
			<when output="ὑ" state="none"/>
			<when output="ὕ" state="Multi_key_acute"/>
			<when output="ὕ" state="Multi_key_apostrophe"/>
			<when output="ὗ" state="Multi_key_asciitilde"/>
			<when output="ὓ" state="Multi_key_grave"/>
		</action>
		<action id="Ὑ">
			<when output="Ὑ" state="none"/>
			<when output="Ὕ" state="Multi_key_acute"/>
			<when output="Ὕ" state="Multi_key_apostrophe"/>
			<when output="Ὗ" state="Multi_key_asciitilde"/>
			<when output="Ὓ" state="Multi_key_grave"/>
		</action>
		<action id="ὠ">
			<when output="ὠ" state="none"/>
			<when output="ᾠ" state="Multi_key_Greek_iota"/>
			<when output="ᾦ" state="Multi_key_Greek_iota_U0342"/>
			<when output="ᾤ" state="Multi_key_Greek_iota_acute"/>
			<when output="ᾤ" state="Multi_key_Greek_iota_apostrophe"/>
			<when output="ᾦ" state="Multi_key_Greek_iota_asciitilde"/>
			<when output="ᾤ" state="Multi_key_Greek_iota_combining_acute"/>
			<when output="ᾢ" state="Multi_key_Greek_iota_combining_grave"/>
			<when output="ᾤ" state="Multi_key_Greek_iota_dead_acute"/>
			<when output="ᾢ" state="Multi_key_Greek_iota_dead_grave"/>
			<when output="ᾦ" state="Multi_key_Greek_iota_dead_tilde"/>
			<when output="ᾢ" state="Multi_key_Greek_iota_grave"/>
			<when output="ὤ" state="Multi_key_acute"/>
			<when output="ὤ" state="Multi_key_apostrophe"/>
			<when output="ὦ" state="Multi_key_asciitilde"/>
			<when output="ὢ" state="Multi_key_grave"/>
		</action>
		<action id="ὡ">
			<when output="ὡ" state="none"/>
			<when output="ᾡ" state="Multi_key_Greek_iota"/>
			<when output="ᾧ" state="Multi_key_Greek_iota_U0342"/>
			<when output="ᾥ" state="Multi_key_Greek_iota_acute"/>
			<when output="ᾥ" state="Multi_key_Greek_iota_apostrophe"/>
			<when output="ᾧ" state="Multi_key_Greek_iota_asciitilde"/>
			<when output="ᾥ" state="Multi_key_Greek_iota_combining_acute"/>
			<when output="ᾣ" state="Multi_key_Greek_iota_combining_grave"/>
			<when output="ᾥ" state="Multi_key_Greek_iota_dead_acute"/>
			<when output="ᾣ" state="Multi_key_Greek_iota_dead_grave"/>
			<when output="ᾧ" state="Multi_key_Greek_iota_dead_tilde"/>
			<when output="ᾣ" state="Multi_key_Greek_iota_grave"/>
			<when output="ὥ" state="Multi_key_acute"/>
			<when output="ὥ" state="Multi_key_apostrophe"/>
			<when output="ὧ" state="Multi_key_asciitilde"/>
			<when output="ὣ" state="Multi_key_grave"/>
		</action>
		<action id="ὢ">
			<when output="ὢ" state="none"/>
			<when output="ᾢ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="ὣ">
			<when output="ὣ" state="none"/>
			<when output="ᾣ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="ὤ">
			<when output="ὤ" state="none"/>
			<when output="ᾤ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="ὥ">
			<when output="ὥ" state="none"/>
			<when output="ᾥ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="ὦ">
			<when output="ὦ" state="none"/>
			<when output="ᾦ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="ὧ">
			<when output="ὧ" state="none"/>
			<when output="ᾧ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="Ὠ">
			<when output="Ὠ" state="none"/>
			<when output="ᾨ" state="Multi_key_Greek_iota"/>
			<when output="ᾮ" state="Multi_key_Greek_iota_U0342"/>
			<when output="ᾬ" state="Multi_key_Greek_iota_acute"/>
			<when output="ᾬ" state="Multi_key_Greek_iota_apostrophe"/>
			<when output="ᾮ" state="Multi_key_Greek_iota_asciitilde"/>
			<when output="ᾬ" state="Multi_key_Greek_iota_combining_acute"/>
			<when output="ᾪ" state="Multi_key_Greek_iota_combining_grave"/>
			<when output="ᾬ" state="Multi_key_Greek_iota_dead_acute"/>
			<when output="ᾪ" state="Multi_key_Greek_iota_dead_grave"/>
			<when output="ᾮ" state="Multi_key_Greek_iota_dead_tilde"/>
			<when output="ᾪ" state="Multi_key_Greek_iota_grave"/>
			<when output="Ὤ" state="Multi_key_acute"/>
			<when output="Ὤ" state="Multi_key_apostrophe"/>
			<when output="Ὦ" state="Multi_key_asciitilde"/>
			<when output="Ὢ" state="Multi_key_grave"/>
		</action>
		<action id="Ὡ">
			<when output="Ὡ" state="none"/>
			<when output="ᾩ" state="Multi_key_Greek_iota"/>
			<when output="ᾯ" state="Multi_key_Greek_iota_U0342"/>
			<when output="ᾭ" state="Multi_key_Greek_iota_acute"/>
			<when output="ᾭ" state="Multi_key_Greek_iota_apostrophe"/>
			<when output="ᾯ" state="Multi_key_Greek_iota_asciitilde"/>
			<when output="ᾭ" state="Multi_key_Greek_iota_combining_acute"/>
			<when output="ᾫ" state="Multi_key_Greek_iota_combining_grave"/>
			<when output="ᾭ" state="Multi_key_Greek_iota_dead_acute"/>
			<when output="ᾫ" state="Multi_key_Greek_iota_dead_grave"/>
			<when output="ᾯ" state="Multi_key_Greek_iota_dead_tilde"/>
			<when output="ᾫ" state="Multi_key_Greek_iota_grave"/>
			<when output="Ὥ" state="Multi_key_acute"/>
			<when output="Ὥ" state="Multi_key_apostrophe"/>
			<when output="Ὧ" state="Multi_key_asciitilde"/>
			<when output="Ὣ" state="Multi_key_grave"/>
		</action>
		<action id="Ὢ">
			<when output="Ὢ" state="none"/>
			<when output="ᾪ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="Ὣ">
			<when output="Ὣ" state="none"/>
			<when output="ᾫ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="Ὤ">
			<when output="Ὤ" state="none"/>
			<when output="ᾬ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="Ὥ">
			<when output="Ὥ" state="none"/>
			<when output="ᾭ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="Ὦ">
			<when output="Ὦ" state="none"/>
			<when output="ᾮ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="Ὧ">
			<when output="Ὧ" state="none"/>
			<when output="ᾯ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="ὰ">
			<when output="ὰ" state="none"/>
			<when output="ᾲ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="ὴ">
			<when output="ὴ" state="none"/>
			<when output="ῂ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="ὼ">
			<when output="ὼ" state="none"/>
			<when output="ῲ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="ᾶ">
			<when output="ᾶ" state="none"/>
			<when output="ᾷ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="᾿">
			<when output="᾿" state="none"/>
			<when next="Multi_key_U1FBF" state="Multi_key"/>
		</action>
		<action id="ῆ">
			<when output="ῆ" state="none"/>
			<when output="ῇ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="ῶ">
			<when output="ῶ" state="none"/>
			<when output="ῷ" state="Multi_key_Greek_iota"/>
		</action>
		<action id="῾">
			<when output="῾" state="none"/>
			<when next="Multi_key_U1FFE" state="Multi_key"/>
		</action>
		<action id="–">
			<when output="–" state="none"/>
		</action>
		<action id="‘">
			<when output="‘" state="none"/>
		</action>
		<action id="’">
			<when output="’" state="none"/>
		</action>
		<action id="“">
			<when output="“" state="none"/>
		</action>
		<action id="”">
			<when output="”" state="none"/>
		</action>
		<action id="„">
			<when output="„" state="none"/>
		</action>
		<action id="†">
			<when output="†" state="none"/>
		</action>
		<action id="‡">
			<when output="‡" state="none"/>
		</action>
		<action id="…">
			<when output="…" state="none"/>
		</action>
		<action id=" ">
			<when output=" " state="none"/>
		</action>
		<action id="‰">
			<when output="‰" state="none"/>
		</action>
		<action id="′">
			<when output="′" state="none"/>
		</action>
		<action id="″">
			<when output="″" state="none"/>
		</action>
		<action id="₡">
			<when output="₡" state="none"/>
			<when output="₵" state="cedilla"/>
		</action>
		<action id="€">
			<when output="€" state="none"/>
		</action>
		<action id="ↄ">
			<when output="ↄ" state="none"/>
			<when output="ꜿ" state="dot"/>
		</action>
		<action id="←">
			<when output="←" state="none"/>
			<when output="↚" state="Multi_key_slash"/>
		</action>
		<action id="→">
			<when output="→" state="none"/>
			<when output="↛" state="Multi_key_slash"/>
		</action>
		<action id="↔">
			<when output="↔" state="none"/>
			<when output="↮" state="Multi_key_slash"/>
		</action>
		<action id="∃">
			<when output="∃" state="none"/>
			<when next="Multi_key_U2203" state="Multi_key"/>
		</action>
		<action id="∈">
			<when output="∈" state="none"/>
		</action>
		<action id="∋">
			<when output="∋" state="none"/>
		</action>
		<action id="−">
			<when output="−" state="none"/>
			<when output="⁻" state="Multi_key_asciicircum"/>
			<when output="₋" state="Multi_key_underscore"/>
		</action>
		<action id="∣">
			<when output="∣" state="none"/>
			<when next="Multi_key_U2223" state="Multi_key"/>
		</action>
		<action id="∥">
			<when output="∥" state="none"/>
			<when next="Multi_key_U2225" state="Multi_key"/>
		</action>
		<action id="∼">
			<when output="∼" state="none"/>
			<when next="Multi_key_approximate" state="Multi_key"/>
		</action>
		<action id="≃">
			<when output="≃" state="none"/>
		</action>
		<action id="≈">
			<when output="≈" state="none"/>
			<when next="Multi_key_U2248" state="Multi_key"/>
		</action>
		<action id="≍">
			<when output="≍" state="none"/>
			<when next="Multi_key_U224D" state="Multi_key"/>
		</action>
		<action id="≠">
			<when output="≠" state="none"/>
		</action>
		<action id="≡">
			<when output="≡" state="none"/>
			<when next="Multi_key_identical" state="Multi_key"/>
		</action>
		<action id="≤">
			<when output="≤" state="none"/>
			<when next="Multi_key_lessthanequal" state="Multi_key"/>
			<when output="≰" state="stroke"/>
		</action>
		<action id="≥">
			<when output="≥" state="none"/>
			<when next="Multi_key_greaterthanequal" state="Multi_key"/>
			<when output="≱" state="stroke"/>
		</action>
		<action id="≲">
			<when output="≲" state="none"/>
			<when next="Multi_key_U2272" state="Multi_key"/>
		</action>
		<action id="≳">
			<when output="≳" state="none"/>
			<when next="Multi_key_U2273" state="Multi_key"/>
		</action>
		<action id="≶">
			<when output="≶" state="none"/>
			<when next="Multi_key_U2276" state="Multi_key"/>
		</action>
		<action id="≷">
			<when output="≷" state="none"/>
			<when next="Multi_key_U2277" state="Multi_key"/>
		</action>
		<action id="≺">
			<when output="≺" state="none"/>
			<when next="Multi_key_U227A" state="Multi_key"/>
		</action>
		<action id="≻">
			<when output="≻" state="none"/>
			<when next="Multi_key_U227B" state="Multi_key"/>
		</action>
		<action id="≼">
			<when output="≼" state="none"/>
			<when next="Multi_key_U227C" state="Multi_key"/>
		</action>
		<action id="≽">
			<when output="≽" state="none"/>
			<when next="Multi_key_U227D" state="Multi_key"/>
		</action>
		<action id="⊂">
			<when output="⊂" state="none"/>
		</action>
		<action id="⊃">
			<when output="⊃" state="none"/>
		</action>
		<action id="⊆">
			<when output="⊆" state="none"/>
			<when next="Multi_key_U2286" state="Multi_key"/>
		</action>
		<action id="⊇">
			<when output="⊇" state="none"/>
			<when next="Multi_key_U2287" state="Multi_key"/>
		</action>
		<action id="⊑">
			<when output="⊑" state="none"/>
			<when next="Multi_key_U2291" state="Multi_key"/>
		</action>
		<action id="⊒">
			<when output="⊒" state="none"/>
			<when next="Multi_key_U2292" state="Multi_key"/>
		</action>
		<action id="⊣">
			<when output="⊣" state="none"/>
			<when next="Multi_key_righttack" state="Multi_key"/>
		</action>
		<action id="⊨">
			<when output="⊨" state="none"/>
			<when next="Multi_key_U22A8" state="Multi_key"/>
		</action>
		<action id="⊩">
			<when output="⊩" state="none"/>
			<when next="Multi_key_U22A9" state="Multi_key"/>
		</action>
		<action id="⊫">
			<when output="⊫" state="none"/>
			<when next="Multi_key_U22AB" state="Multi_key"/>
		</action>
		<action id="⊲">
			<when output="⊲" state="none"/>
			<when next="Multi_key_U22B2" state="Multi_key"/>
		</action>
		<action id="⊳">
			<when output="⊳" state="none"/>
			<when next="Multi_key_U22B3" state="Multi_key"/>
		</action>
		<action id="⊴">
			<when output="⊴" state="none"/>
			<when next="Multi_key_U22B4" state="Multi_key"/>
		</action>
		<action id="⊵">
			<when output="⊵" state="none"/>
			<when next="Multi_key_U22B5" state="Multi_key"/>
		</action>
		<action id="⌨">
			<when output="⌨" state="none"/>
		</action>
		<action id="⫝">
			<when output="⫝" state="none"/>
			<when next="Multi_key_U2ADD" state="Multi_key"/>
		</action>
		<action id="ア">
			<when output="ア" state="none"/>
			<when next="Multi_key_parenleft_kana_A" state="Multi_key_parenleft"/>
		</action>
		<action id="イ">
			<when output="イ" state="none"/>
			<when next="Multi_key_parenleft_kana_I" state="Multi_key_parenleft"/>
		</action>
		<action id="ウ">
			<when output="ウ" state="none"/>
			<when next="Multi_key_parenleft_kana_U" state="Multi_key_parenleft"/>
		</action>
		<action id="エ">
			<when output="エ" state="none"/>
			<when next="Multi_key_parenleft_kana_E" state="Multi_key_parenleft"/>
		</action>
		<action id="オ">
			<when output="オ" state="none"/>
			<when next="Multi_key_parenleft_kana_O" state="Multi_key_parenleft"/>
		</action>
		<action id="カ">
			<when output="カ" state="none"/>
			<when next="Multi_key_parenleft_kana_KA" state="Multi_key_parenleft"/>
		</action>
		<action id="キ">
			<when output="キ" state="none"/>
			<when next="Multi_key_parenleft_kana_KI" state="Multi_key_parenleft"/>
		</action>
		<action id="ク">
			<when output="ク" state="none"/>
			<when next="Multi_key_parenleft_kana_KU" state="Multi_key_parenleft"/>
		</action>
		<action id="ケ">
			<when output="ケ" state="none"/>
			<when next="Multi_key_parenleft_kana_KE" state="Multi_key_parenleft"/>
		</action>
		<action id="コ">
			<when output="コ" state="none"/>
			<when next="Multi_key_parenleft_kana_KO" state="Multi_key_parenleft"/>
		</action>
		<action id="サ">
			<when output="サ" state="none"/>
			<when next="Multi_key_parenleft_kana_SA" state="Multi_key_parenleft"/>
		</action>
		<action id="シ">
			<when output="シ" state="none"/>
			<when next="Multi_key_parenleft_kana_SHI" state="Multi_key_parenleft"/>
		</action>
		<action id="ス">
			<when output="ス" state="none"/>
			<when next="Multi_key_parenleft_kana_SU" state="Multi_key_parenleft"/>
		</action>
		<action id="セ">
			<when output="セ" state="none"/>
			<when next="Multi_key_parenleft_kana_SE" state="Multi_key_parenleft"/>
		</action>
		<action id="ソ">
			<when output="ソ" state="none"/>
			<when next="Multi_key_parenleft_kana_SO" state="Multi_key_parenleft"/>
		</action>
		<action id="タ">
			<when output="タ" state="none"/>
			<when next="Multi_key_parenleft_kana_TA" state="Multi_key_parenleft"/>
		</action>
		<action id="チ">
			<when output="チ" state="none"/>
			<when next="Multi_key_parenleft_kana_CHI" state="Multi_key_parenleft"/>
		</action>
		<action id="ツ">
			<when output="ツ" state="none"/>
			<when next="Multi_key_parenleft_kana_TSU" state="Multi_key_parenleft"/>
		</action>
		<action id="テ">
			<when output="テ" state="none"/>
			<when next="Multi_key_parenleft_kana_TE" state="Multi_key_parenleft"/>
		</action>
		<action id="ト">
			<when output="ト" state="none"/>
			<when next="Multi_key_parenleft_kana_TO" state="Multi_key_parenleft"/>
		</action>
		<action id="ナ">
			<when output="ナ" state="none"/>
			<when next="Multi_key_parenleft_kana_NA" state="Multi_key_parenleft"/>
		</action>
		<action id="ニ">
			<when output="ニ" state="none"/>
			<when next="Multi_key_parenleft_kana_NI" state="Multi_key_parenleft"/>
		</action>
		<action id="ヌ">
			<when output="ヌ" state="none"/>
			<when next="Multi_key_parenleft_kana_NU" state="Multi_key_parenleft"/>
		</action>
		<action id="ネ">
			<when output="ネ" state="none"/>
			<when next="Multi_key_parenleft_kana_NE" state="Multi_key_parenleft"/>
		</action>
		<action id="ノ">
			<when output="ノ" state="none"/>
			<when next="Multi_key_parenleft_kana_NO" state="Multi_key_parenleft"/>
		</action>
		<action id="ハ">
			<when output="ハ" state="none"/>
			<when next="Multi_key_parenleft_kana_HA" state="Multi_key_parenleft"/>
		</action>
		<action id="ヒ">
			<when output="ヒ" state="none"/>
			<when next="Multi_key_parenleft_kana_HI" state="Multi_key_parenleft"/>
		</action>
		<action id="フ">
			<when output="フ" state="none"/>
			<when next="Multi_key_parenleft_kana_FU" state="Multi_key_parenleft"/>
		</action>
		<action id="ヘ">
			<when output="ヘ" state="none"/>
			<when next="Multi_key_parenleft_kana_HE" state="Multi_key_parenleft"/>
		</action>
		<action id="ホ">
			<when output="ホ" state="none"/>
			<when next="Multi_key_parenleft_kana_HO" state="Multi_key_parenleft"/>
		</action>
		<action id="マ">
			<when output="マ" state="none"/>
			<when next="Multi_key_parenleft_kana_MA" state="Multi_key_parenleft"/>
		</action>
		<action id="ミ">
			<when output="ミ" state="none"/>
			<when next="Multi_key_parenleft_kana_MI" state="Multi_key_parenleft"/>
		</action>
		<action id="ム">
			<when output="ム" state="none"/>
			<when next="Multi_key_parenleft_kana_MU" state="Multi_key_parenleft"/>
		</action>
		<action id="メ">
			<when output="メ" state="none"/>
			<when next="Multi_key_parenleft_kana_ME" state="Multi_key_parenleft"/>
		</action>
		<action id="モ">
			<when output="モ" state="none"/>
			<when next="Multi_key_parenleft_kana_MO" state="Multi_key_parenleft"/>
		</action>
		<action id="ヤ">
			<when output="ヤ" state="none"/>
			<when next="Multi_key_parenleft_kana_YA" state="Multi_key_parenleft"/>
		</action>
		<action id="ユ">
			<when output="ユ" state="none"/>
			<when next="Multi_key_parenleft_kana_YU" state="Multi_key_parenleft"/>
		</action>
		<action id="ヨ">
			<when output="ヨ" state="none"/>
			<when next="Multi_key_parenleft_kana_YO" state="Multi_key_parenleft"/>
		</action>
		<action id="ラ">
			<when output="ラ" state="none"/>
			<when next="Multi_key_parenleft_kana_RA" state="Multi_key_parenleft"/>
		</action>
		<action id="リ">
			<when output="リ" state="none"/>
			<when next="Multi_key_parenleft_kana_RI" state="Multi_key_parenleft"/>
		</action>
		<action id="ル">
			<when output="ル" state="none"/>
			<when next="Multi_key_parenleft_kana_RU" state="Multi_key_parenleft"/>
		</action>
		<action id="レ">
			<when output="レ" state="none"/>
			<when next="Multi_key_parenleft_kana_RE" state="Multi_key_parenleft"/>
		</action>
		<action id="ロ">
			<when output="ロ" state="none"/>
			<when next="Multi_key_parenleft_kana_RO" state="Multi_key_parenleft"/>
		</action>
		<action id="ワ">
			<when output="ワ" state="none"/>
			<when next="Multi_key_parenleft_kana_WA" state="Multi_key_parenleft"/>
		</action>
		<action id="ヰ">
			<when output="ヰ" state="none"/>
			<when next="Multi_key_parenleft_U30F0" state="Multi_key_parenleft"/>
		</action>
		<action id="ヱ">
			<when output="ヱ" state="none"/>
			<when next="Multi_key_parenleft_U30F1" state="Multi_key_parenleft"/>
		</action>
		<action id="ヲ">
			<when output="ヲ" state="none"/>
			<when next="Multi_key_parenleft_kana_WO" state="Multi_key_parenleft"/>
		</action>
		<action id="一">
			<when output="一" state="none"/>
			<when output="㆒" state="Multi_key_asciicircum"/>
			<when next="Multi_key_parenleft_U4E00" state="Multi_key_parenleft"/>
		</action>
		<action id="丁">
			<when output="丁" state="none"/>
			<when output="㆜" state="Multi_key_asciicircum"/>
		</action>
		<action id="七">
			<when output="七" state="none"/>
			<when next="Multi_key_parenleft_U4E03" state="Multi_key_parenleft"/>
		</action>
		<action id="三">
			<when output="三" state="none"/>
			<when output="㆔" state="Multi_key_asciicircum"/>
			<when next="Multi_key_parenleft_U4E09" state="Multi_key_parenleft"/>
		</action>
		<action id="上">
			<when output="上" state="none"/>
			<when output="㆖" state="Multi_key_asciicircum"/>
			<when next="Multi_key_parenleft_U4E0A" state="Multi_key_parenleft"/>
		</action>
		<action id="下">
			<when output="下" state="none"/>
			<when output="㆘" state="Multi_key_asciicircum"/>
			<when next="Multi_key_parenleft_U4E0B" state="Multi_key_parenleft"/>
		</action>
		<action id="丙">
			<when output="丙" state="none"/>
			<when output="㆛" state="Multi_key_asciicircum"/>
		</action>
		<action id="中">
			<when output="中" state="none"/>
			<when output="㆗" state="Multi_key_asciicircum"/>
			<when next="Multi_key_parenleft_U4E2D" state="Multi_key_parenleft"/>
		</action>
		<action id="乙">
			<when output="乙" state="none"/>
			<when output="㆚" state="Multi_key_asciicircum"/>
		</action>
		<action id="九">
			<when output="九" state="none"/>
			<when next="Multi_key_parenleft_U4E5D" state="Multi_key_parenleft"/>
		</action>
		<action id="二">
			<when output="二" state="none"/>
			<when output="㆓" state="Multi_key_asciicircum"/>
			<when next="Multi_key_parenleft_U4E8C" state="Multi_key_parenleft"/>
		</action>
		<action id="五">
			<when output="五" state="none"/>
			<when next="Multi_key_parenleft_U4E94" state="Multi_key_parenleft"/>
		</action>
		<action id="人">
			<when output="人" state="none"/>
			<when output="㆟" state="Multi_key_asciicircum"/>
		</action>
		<action id="企">
			<when output="企" state="none"/>
			<when next="Multi_key_parenleft_U4F01" state="Multi_key_parenleft"/>
		</action>
		<action id="休">
			<when output="休" state="none"/>
			<when next="Multi_key_parenleft_U4F11" state="Multi_key_parenleft"/>
		</action>
		<action id="優">
			<when output="優" state="none"/>
			<when next="Multi_key_parenleft_U512A" state="Multi_key_parenleft"/>
		</action>
		<action id="八">
			<when output="八" state="none"/>
			<when next="Multi_key_parenleft_U516B" state="Multi_key_parenleft"/>
		</action>
		<action id="六">
			<when output="六" state="none"/>
			<when next="Multi_key_parenleft_U516D" state="Multi_key_parenleft"/>
		</action>
		<action id="写">
			<when output="写" state="none"/>
			<when next="Multi_key_parenleft_U5199" state="Multi_key_parenleft"/>
		</action>
		<action id="労">
			<when output="労" state="none"/>
			<when next="Multi_key_parenleft_U52B4" state="Multi_key_parenleft"/>
		</action>
		<action id="医">
			<when output="医" state="none"/>
			<when next="Multi_key_parenleft_U533B" state="Multi_key_parenleft"/>
		</action>
		<action id="十">
			<when output="十" state="none"/>
			<when next="Multi_key_parenleft_U5341" state="Multi_key_parenleft"/>
		</action>
		<action id="協">
			<when output="協" state="none"/>
			<when next="Multi_key_parenleft_U5354" state="Multi_key_parenleft"/>
		</action>
		<action id="印">
			<when output="印" state="none"/>
			<when next="Multi_key_parenleft_U5370" state="Multi_key_parenleft"/>
		</action>
		<action id="右">
			<when output="右" state="none"/>
			<when next="Multi_key_parenleft_U53F3" state="Multi_key_parenleft"/>
		</action>
		<action id="名">
			<when output="名" state="none"/>
			<when next="Multi_key_parenleft_U540D" state="Multi_key_parenleft"/>
		</action>
		<action id="四">
			<when output="四" state="none"/>
			<when output="㆕" state="Multi_key_asciicircum"/>
			<when next="Multi_key_parenleft_U56DB" state="Multi_key_parenleft"/>
		</action>
		<action id="土">
			<when output="土" state="none"/>
			<when next="Multi_key_parenleft_U571F" state="Multi_key_parenleft"/>
		</action>
		<action id="地">
			<when output="地" state="none"/>
			<when output="㆞" state="Multi_key_asciicircum"/>
		</action>
		<action id="夜">
			<when output="夜" state="none"/>
			<when next="Multi_key_parenleft_U591C" state="Multi_key_parenleft"/>
		</action>
		<action id="天">
			<when output="天" state="none"/>
			<when output="㆝" state="Multi_key_asciicircum"/>
		</action>
		<action id="女">
			<when output="女" state="none"/>
			<when next="Multi_key_parenleft_U5973" state="Multi_key_parenleft"/>
		</action>
		<action id="学">
			<when output="学" state="none"/>
			<when next="Multi_key_parenleft_U5B66" state="Multi_key_parenleft"/>
		</action>
		<action id="宗">
			<when output="宗" state="none"/>
			<when next="Multi_key_parenleft_U5B97" state="Multi_key_parenleft"/>
		</action>
		<action id="左">
			<when output="左" state="none"/>
			<when next="Multi_key_parenleft_U5DE6" state="Multi_key_parenleft"/>
		</action>
		<action id="日">
			<when output="日" state="none"/>
			<when next="Multi_key_parenleft_U65E5" state="Multi_key_parenleft"/>
		</action>
		<action id="月">
			<when output="月" state="none"/>
			<when next="Multi_key_parenleft_U6708" state="Multi_key_parenleft"/>
		</action>
		<action id="有">
			<when output="有" state="none"/>
			<when next="Multi_key_parenleft_U6709" state="Multi_key_parenleft"/>
		</action>
		<action id="木">
			<when output="木" state="none"/>
			<when next="Multi_key_parenleft_U6728" state="Multi_key_parenleft"/>
		</action>
		<action id="株">
			<when output="株" state="none"/>
			<when next="Multi_key_parenleft_U682A" state="Multi_key_parenleft"/>
		</action>
		<action id="正">
			<when output="正" state="none"/>
			<when next="Multi_key_parenleft_U6B63" state="Multi_key_parenleft"/>
		</action>
		<action id="水">
			<when output="水" state="none"/>
			<when next="Multi_key_parenleft_U6C34" state="Multi_key_parenleft"/>
		</action>
		<action id="注">
			<when output="注" state="none"/>
			<when next="Multi_key_parenleft_U6CE8" state="Multi_key_parenleft"/>
		</action>
		<action id="火">
			<when output="火" state="none"/>
			<when next="Multi_key_parenleft_U706B" state="Multi_key_parenleft"/>
		</action>
		<action id="特">
			<when output="特" state="none"/>
			<when next="Multi_key_parenleft_U7279" state="Multi_key_parenleft"/>
		</action>
		<action id="甲">
			<when output="甲" state="none"/>
			<when output="㆙" state="Multi_key_asciicircum"/>
		</action>
		<action id="男">
			<when output="男" state="none"/>
			<when next="Multi_key_parenleft_U7537" state="Multi_key_parenleft"/>
		</action>
		<action id="監">
			<when output="監" state="none"/>
			<when next="Multi_key_parenleft_U76E3" state="Multi_key_parenleft"/>
		</action>
		<action id="社">
			<when output="社" state="none"/>
			<when next="Multi_key_parenleft_U793E" state="Multi_key_parenleft"/>
		</action>
		<action id="祝">
			<when output="祝" state="none"/>
			<when next="Multi_key_parenleft_U795D" state="Multi_key_parenleft"/>
		</action>
		<action id="秘">
			<when output="秘" state="none"/>
			<when next="Multi_key_parenleft_U79D8" state="Multi_key_parenleft"/>
		</action>
		<action id="財">
			<when output="財" state="none"/>
			<when next="Multi_key_parenleft_U8CA1" state="Multi_key_parenleft"/>
		</action>
		<action id="資">
			<when output="資" state="none"/>
			<when next="Multi_key_parenleft_U8CC7" state="Multi_key_parenleft"/>
		</action>
		<action id="適">
			<when output="適" state="none"/>
			<when next="Multi_key_parenleft_U9069" state="Multi_key_parenleft"/>
		</action>
		<action id="金">
			<when output="金" state="none"/>
			<when next="Multi_key_parenleft_U91D1" state="Multi_key_parenleft"/>
		</action>
		<action id="項">
			<when output="項" state="none"/>
			<when next="Multi_key_parenleft_U9805" state="Multi_key_parenleft"/>
		</action>
		<action id="ꜧ">
			<when output="ꜧ" state="none"/>
			<when output="ɧ" state="hook"/>
		</action>
		<action id="Ꜭ">
			<when output="Ꜭ" state="none"/>
			<when output="Ꜯ" state="comma"/>
		</action>
		<action id="ꜭ">
			<when output="ꜭ" state="none"/>
			<when output="ꜯ" state="comma"/>
		</action>
		<action id="Ꜹ">
			<when output="Ꜹ" state="none"/>
			<when output="Ꜻ" state="horizontalbar"/>
		</action>
		<action id="ꜹ">
			<when output="ꜹ" state="none"/>
			<when output="ꜻ" state="horizontalbar"/>
		</action>
		<action id="Ꝁ">
			<when output="Ꝁ" state="none"/>
			<when output="Ꝅ" state="diagonalstroke"/>
		</action>
		<action id="ꝁ">
			<when output="ꝁ" state="none"/>
			<when output="ꝅ" state="diagonalstroke"/>
		</action>
		<action id="Ꝃ">
			<when output="Ꝃ" state="none"/>
			<when output="Ꝅ" state="stroke"/>
		</action>
		<action id="ꝃ">
			<when output="ꝃ" state="none"/>
			<when output="ꝅ" state="stroke"/>
		</action>
		<action id="שּ">
			<when output="שּ" state="none"/>
			<when output="שּׁ" state="Multi_key_U05C1"/>
			<when output="שּׂ" state="Multi_key_U05C2"/>
		</action>
	</actions>
	<terminators>
		<when output="" state="Dead Key State 0"/>
		<when output="↯" state="Multi_key"/>
		<when output="↯1" state="Multi_key_1"/>
		<when output="↯3" state="Multi_key_3"/>
		<when output="↯A" state="Multi_key_A"/>
		<when output="↯C" state="Multi_key_C"/>
		<when output="↯Н" state="Multi_key_Cyrillic_EN"/>
		<when output="↯С" state="Multi_key_Cyrillic_ES"/>
		<when output="↯Е" state="Multi_key_Cyrillic_IE"/>
		<when output="↯п" state="Multi_key_Cyrillic_pe"/>
		<when output="↯D" state="Multi_key_D"/>
		<when output="↯E" state="Multi_key_E"/>
		<when output="↯F" state="Multi_key_F"/>
		<when output="↯ι" state="Multi_key_Greek_iota"/>
		<when output="↯ἰ" state="Multi_key_Greek_iota_U0313"/>
		<when output="↯ἱ" state="Multi_key_Greek_iota_U0314"/>
		<when output="↯ῖ" state="Multi_key_Greek_iota_U0342"/>
		<when output="↯ῖ̓" state="Multi_key_Greek_iota_U0342_U0313"/>
		<when output="↯ῖ̔" state="Multi_key_Greek_iota_U0342_U0314"/>
		<when output="↯ῖ?" state="Multi_key_Greek_iota_U0342_dead_dasia"/>
		<when output="↯ῖ?" state="Multi_key_Greek_iota_U0342_dead_psili"/>
		<when output="↯ῖ(" state="Multi_key_Greek_iota_U0342_parenleft"/>
		<when output="↯ῖ)" state="Multi_key_Greek_iota_U0342_parenright"/>
		<when output="↯ι´" state="Multi_key_Greek_iota_acute"/>
		<when output="↯ι´̓" state="Multi_key_Greek_iota_acute_U0313"/>
		<when output="↯ι´̔" state="Multi_key_Greek_iota_acute_U0314"/>
		<when output="↯ι´?" state="Multi_key_Greek_iota_acute_dead_dasia"/>
		<when output="↯ι´?" state="Multi_key_Greek_iota_acute_dead_psili"/>
		<when output="↯ι´(" state="Multi_key_Greek_iota_acute_parenleft"/>
		<when output="↯ι´)" state="Multi_key_Greek_iota_acute_parenright"/>
		<when output="↯ι&#x0027;" state="Multi_key_Greek_iota_apostrophe"/>
		<when output="↯ι&#x0027;̓" state="Multi_key_Greek_iota_apostrophe_U0313"/>
		<when output="↯ι&#x0027;̔" state="Multi_key_Greek_iota_apostrophe_U0314"/>
		<when output="↯ι&#x0027;?" state="Multi_key_Greek_iota_apostrophe_dead_dasia"/>
		<when output="↯ι&#x0027;?" state="Multi_key_Greek_iota_apostrophe_dead_psili"/>
		<when output="↯ι&#x0027;(" state="Multi_key_Greek_iota_apostrophe_parenleft"/>
		<when output="↯ι&#x0027;)" state="Multi_key_Greek_iota_apostrophe_parenright"/>
		<when output="↯ι~" state="Multi_key_Greek_iota_asciitilde"/>
		<when output="↯ι~̓" state="Multi_key_Greek_iota_asciitilde_U0313"/>
		<when output="↯ι~̔" state="Multi_key_Greek_iota_asciitilde_U0314"/>
		<when output="↯ι~?" state="Multi_key_Greek_iota_asciitilde_dead_dasia"/>
		<when output="↯ι~?" state="Multi_key_Greek_iota_asciitilde_dead_psili"/>
		<when output="↯ι~(" state="Multi_key_Greek_iota_asciitilde_parenleft"/>
		<when output="↯ι~)" state="Multi_key_Greek_iota_asciitilde_parenright"/>
		<when output="↯ί" state="Multi_key_Greek_iota_combining_acute"/>
		<when output="↯ί̓" state="Multi_key_Greek_iota_combining_acute_U0313"/>
		<when output="↯ί̔" state="Multi_key_Greek_iota_combining_acute_U0314"/>
		<when output="↯ί?" state="Multi_key_Greek_iota_combining_acute_dead_dasia"/>
		<when output="↯ί?" state="Multi_key_Greek_iota_combining_acute_dead_psili"/>
		<when output="↯ί(" state="Multi_key_Greek_iota_combining_acute_parenleft"/>
		<when output="↯ί)" state="Multi_key_Greek_iota_combining_acute_parenright"/>
		<when output="↯ὶ" state="Multi_key_Greek_iota_combining_grave"/>
		<when output="↯ὶ̓" state="Multi_key_Greek_iota_combining_grave_U0313"/>
		<when output="↯ὶ̔" state="Multi_key_Greek_iota_combining_grave_U0314"/>
		<when output="↯ὶ?" state="Multi_key_Greek_iota_combining_grave_dead_dasia"/>
		<when output="↯ὶ?" state="Multi_key_Greek_iota_combining_grave_dead_psili"/>
		<when output="↯ὶ(" state="Multi_key_Greek_iota_combining_grave_parenleft"/>
		<when output="↯ὶ)" state="Multi_key_Greek_iota_combining_grave_parenright"/>
		<when output="↯ι´" state="Multi_key_Greek_iota_dead_acute"/>
		<when output="↯ι´̓" state="Multi_key_Greek_iota_dead_acute_U0313"/>
		<when output="↯ι´̔" state="Multi_key_Greek_iota_dead_acute_U0314"/>
		<when output="↯ι´?" state="Multi_key_Greek_iota_dead_acute_dead_dasia"/>
		<when output="↯ι´?" state="Multi_key_Greek_iota_dead_acute_dead_psili"/>
		<when output="↯ι´(" state="Multi_key_Greek_iota_dead_acute_parenleft"/>
		<when output="↯ι´)" state="Multi_key_Greek_iota_dead_acute_parenright"/>
		<when output="↯ι?" state="Multi_key_Greek_iota_dead_dasia"/>
		<when output="↯ι`" state="Multi_key_Greek_iota_dead_grave"/>
		<when output="↯ι`̓" state="Multi_key_Greek_iota_dead_grave_U0313"/>
		<when output="↯ι`̔" state="Multi_key_Greek_iota_dead_grave_U0314"/>
		<when output="↯ι`?" state="Multi_key_Greek_iota_dead_grave_dead_dasia"/>
		<when output="↯ι`?" state="Multi_key_Greek_iota_dead_grave_dead_psili"/>
		<when output="↯ι`(" state="Multi_key_Greek_iota_dead_grave_parenleft"/>
		<when output="↯ι`)" state="Multi_key_Greek_iota_dead_grave_parenright"/>
		<when output="↯ι?" state="Multi_key_Greek_iota_dead_psili"/>
		<when output="↯ι~" state="Multi_key_Greek_iota_dead_tilde"/>
		<when output="↯ι~̓" state="Multi_key_Greek_iota_dead_tilde_U0313"/>
		<when output="↯ι~̔" state="Multi_key_Greek_iota_dead_tilde_U0314"/>
		<when output="↯ι~?" state="Multi_key_Greek_iota_dead_tilde_dead_dasia"/>
		<when output="↯ι~?" state="Multi_key_Greek_iota_dead_tilde_dead_psili"/>
		<when output="↯ι~(" state="Multi_key_Greek_iota_dead_tilde_parenleft"/>
		<when output="↯ι~)" state="Multi_key_Greek_iota_dead_tilde_parenright"/>
		<when output="↯ι`" state="Multi_key_Greek_iota_grave"/>
		<when output="↯ι`̓" state="Multi_key_Greek_iota_grave_U0313"/>
		<when output="↯ι`̔" state="Multi_key_Greek_iota_grave_U0314"/>
		<when output="↯ι`?" state="Multi_key_Greek_iota_grave_dead_dasia"/>
		<when output="↯ι`?" state="Multi_key_Greek_iota_grave_dead_psili"/>
		<when output="↯ι`(" state="Multi_key_Greek_iota_grave_parenleft"/>
		<when output="↯ι`)" state="Multi_key_Greek_iota_grave_parenright"/>
		<when output="↯ι(" state="Multi_key_Greek_iota_parenleft"/>
		<when output="↯ι)" state="Multi_key_Greek_iota_parenright"/>
		<when output="↯L" state="Multi_key_L"/>
		<when output="↯N" state="Multi_key_N"/>
		<when output="↯O" state="Multi_key_O"/>
		<when output="↯P" state="Multi_key_P"/>
		<when output="↯R" state="Multi_key_R"/>
		<when output="↯S" state="Multi_key_S"/>
		<when output="↯T" state="Multi_key_T"/>
		<when output="↯U" state="Multi_key_U"/>
		<when output="↯ִ" state="Multi_key_U05B4"/>
		<when output="↯ַ" state="Multi_key_U05B7"/>
		<when output="↯ָ" state="Multi_key_U05B8"/>
		<when output="↯ֹ" state="Multi_key_U05B9"/>
		<when output="↯ּ" state="Multi_key_U05BC"/>
		<when output="↯ֿ" state="Multi_key_U05BF"/>
		<when output="↯ׁ" state="Multi_key_U05C1"/>
		<when output="↯ּׁ" state="Multi_key_U05C1_U05BC"/>
		<when output="↯ׂ" state="Multi_key_U05C2"/>
		<when output="↯ּׂ" state="Multi_key_U05C2_U05BC"/>
		<when output="↯ٓ" state="Multi_key_U0653"/>
		<when output="↯ٔ" state="Multi_key_U0654"/>
		<when output="↯ٕ" state="Multi_key_U0655"/>
		<when output="↯़" state="Multi_key_U093C"/>
		<when output="↯়" state="Multi_key_U09BC"/>
		<when output="↯ে" state="Multi_key_U09C7"/>
		<when output="↯਼" state="Multi_key_U0A3C"/>
		<when output="↯଼" state="Multi_key_U0B3C"/>
		<when output="↯େ" state="Multi_key_U0B47"/>
		<when output="↯ெ" state="Multi_key_U0BC6"/>
		<when output="↯ே" state="Multi_key_U0BC7"/>
		<when output="↯ௗ" state="Multi_key_U0BD7"/>
		<when output="↯ె" state="Multi_key_U0C46"/>
		<when output="↯ಿ" state="Multi_key_U0CBF"/>
		<when output="↯ೆ" state="Multi_key_U0CC6"/>
		<when output="↯ೊ" state="Multi_key_U0CCA"/>
		<when output="↯െ" state="Multi_key_U0D46"/>
		<when output="↯േ" state="Multi_key_U0D47"/>
		<when output="↯ෙ" state="Multi_key_U0DD9"/>
		<when output="↯ො" state="Multi_key_U0DDC"/>
		<when output="↯ཱ" state="Multi_key_U0F71"/>
		<when output="↯ྐ" state="Multi_key_U0F90"/>
		<when output="↯ྒ" state="Multi_key_U0F92"/>
		<when output="↯ྜ" state="Multi_key_U0F9C"/>
		<when output="↯ྡ" state="Multi_key_U0FA1"/>
		<when output="↯ྦ" state="Multi_key_U0FA6"/>
		<when output="↯ྫ" state="Multi_key_U0FAB"/>
		<when output="↯ྲ" state="Multi_key_U0FB2"/>
		<when output="↯ླ" state="Multi_key_U0FB3"/>
		<when output="↯ྵ" state="Multi_key_U0FB5"/>
		<when output="↯ྷ" state="Multi_key_U0FB7"/>
		<when output="↯ီ" state="Multi_key_U102E"/>
		<when output="↯ᄀ" state="Multi_key_U1100"/>
		<when output="↯ᄂ" state="Multi_key_U1102"/>
		<when output="↯ᄃ" state="Multi_key_U1103"/>
		<when output="↯ᄅ" state="Multi_key_U1105"/>
		<when output="↯ᄆ" state="Multi_key_U1106"/>
		<when output="↯ᄇ" state="Multi_key_U1107"/>
		<when output="↯ᄈ" state="Multi_key_U1108"/>
		<when output="↯ᄉ" state="Multi_key_U1109"/>
		<when output="↯ᄊ" state="Multi_key_U110A"/>
		<when output="↯ᄋ" state="Multi_key_U110B"/>
		<when output="↯ᄌ" state="Multi_key_U110C"/>
		<when output="↯ᄎ" state="Multi_key_U110E"/>
		<when output="↯ᄑ" state="Multi_key_U1111"/>
		<when output="↯ᄒ" state="Multi_key_U1112"/>
		<when output="↯ᄡ" state="Multi_key_U1121"/>
		<when output="↯ᄲ" state="Multi_key_U1132"/>
		<when output="↯ᄼ" state="Multi_key_U113C"/>
		<when output="↯ᄾ" state="Multi_key_U113E"/>
		<when output="↯ᅎ" state="Multi_key_U114E"/>
		<when output="↯ᅐ" state="Multi_key_U1150"/>
		<when output="↯ᅡ" state="Multi_key_U1161"/>
		<when output="↯ᅣ" state="Multi_key_U1163"/>
		<when output="↯ᅥ" state="Multi_key_U1165"/>
		<when output="↯ᅧ" state="Multi_key_U1167"/>
		<when output="↯ᅩ" state="Multi_key_U1169"/>
		<when output="↯ᅪ" state="Multi_key_U116A"/>
		<when output="↯ᅭ" state="Multi_key_U116D"/>
		<when output="↯ᅮ" state="Multi_key_U116E"/>
		<when output="↯ᅯ" state="Multi_key_U116F"/>
		<when output="↯ᅲ" state="Multi_key_U1172"/>
		<when output="↯ᅳ" state="Multi_key_U1173"/>
		<when output="↯ᅴ" state="Multi_key_U1174"/>
		<when output="↯ᅵ" state="Multi_key_U1175"/>
		<when output="↯ᆞ" state="Multi_key_U119E"/>
		<when output="↯ᆨ" state="Multi_key_U11A8"/>
		<when output="↯ᆪ" state="Multi_key_U11AA"/>
		<when output="↯ᆫ" state="Multi_key_U11AB"/>
		<when output="↯ᆮ" state="Multi_key_U11AE"/>
		<when output="↯ᆯ" state="Multi_key_U11AF"/>
		<when output="↯ᆰ" state="Multi_key_U11B0"/>
		<when output="↯ᆱ" state="Multi_key_U11B1"/>
		<when output="↯ᆲ" state="Multi_key_U11B2"/>
		<when output="↯ᆳ" state="Multi_key_U11B3"/>
		<when output="↯ᆷ" state="Multi_key_U11B7"/>
		<when output="↯ᆸ" state="Multi_key_U11B8"/>
		<when output="↯ᆺ" state="Multi_key_U11BA"/>
		<when output="↯ᆼ" state="Multi_key_U11BC"/>
		<when output="↯ᇁ" state="Multi_key_U11C1"/>
		<when output="↯ᇂ" state="Multi_key_U11C2"/>
		<when output="↯ᇎ" state="Multi_key_U11CE"/>
		<when output="↯ᇝ" state="Multi_key_U11DD"/>
		<when output="↯ᇬ" state="Multi_key_U11EC"/>
		<when output="↯ᇰ" state="Multi_key_U11F0"/>
		<when output="↯᾿" state="Multi_key_U1FBF"/>
		<when output="↯῾" state="Multi_key_U1FFE"/>
		<when output="↯∃" state="Multi_key_U2203"/>
		<when output="↯∈" state="Multi_key_U2208"/>
		<when output="↯∋" state="Multi_key_U220B"/>
		<when output="↯∣" state="Multi_key_U2223"/>
		<when output="↯∥" state="Multi_key_U2225"/>
		<when output="↯≃" state="Multi_key_U2243"/>
		<when output="↯≈" state="Multi_key_U2248"/>
		<when output="↯≍" state="Multi_key_U224D"/>
		<when output="↯≲" state="Multi_key_U2272"/>
		<when output="↯≳" state="Multi_key_U2273"/>
		<when output="↯≶" state="Multi_key_U2276"/>
		<when output="↯≷" state="Multi_key_U2277"/>
		<when output="↯≺" state="Multi_key_U227A"/>
		<when output="↯≻" state="Multi_key_U227B"/>
		<when output="↯≼" state="Multi_key_U227C"/>
		<when output="↯≽" state="Multi_key_U227D"/>
		<when output="↯⊆" state="Multi_key_U2286"/>
		<when output="↯⊇" state="Multi_key_U2287"/>
		<when output="↯⊑" state="Multi_key_U2291"/>
		<when output="↯⊒" state="Multi_key_U2292"/>
		<when output="↯⊨" state="Multi_key_U22A8"/>
		<when output="↯⊩" state="Multi_key_U22A9"/>
		<when output="↯⊫" state="Multi_key_U22AB"/>
		<when output="↯⊲" state="Multi_key_U22B2"/>
		<when output="↯⊳" state="Multi_key_U22B3"/>
		<when output="↯⊴" state="Multi_key_U22B4"/>
		<when output="↯⊵" state="Multi_key_U22B5"/>
		<when output="↯⫝" state="Multi_key_U2ADD"/>
		<when output="↯Ụ" state="Multi_key_U_combining_belowdot"/>
		<when output="↯U," state="Multi_key_U_comma"/>
		<when output="↯Ụ" state="Multi_key_U_dead_belowdot"/>
		<when output="↯U¸" state="Multi_key_U_dead_cedilla"/>
		<when output="↯U!" state="Multi_key_U_exclam"/>
		<when output="↯V" state="Multi_key_V"/>
		<when output="↯W" state="Multi_key_W"/>
		<when output="↯Y" state="Multi_key_Y"/>
		<when output="↯a" state="Multi_key_a"/>
		<when output="↯´" state="Multi_key_acute"/>
		<when output="↯´̓" state="Multi_key_acute_U0313"/>
		<when output="↯´̔" state="Multi_key_acute_U0314"/>
		<when output="↯´^" state="Multi_key_acute_asciicircum"/>
		<when output="↯´~" state="Multi_key_acute_asciitilde"/>
		<when output="↯´b" state="Multi_key_acute_b"/>
		<when output="↯´̃" state="Multi_key_acute_combining_tilde"/>
		<when output="↯´," state="Multi_key_acute_comma"/>
		<when output="↯´°" state="Multi_key_acute_dead_abovering"/>
		<when output="↯´˘" state="Multi_key_acute_dead_breve"/>
		<when output="↯´¸" state="Multi_key_acute_dead_cedilla"/>
		<when output="↯´^" state="Multi_key_acute_dead_circumflex"/>
		<when output="↯´?" state="Multi_key_acute_dead_dasia"/>
		<when output="↯´¨" state="Multi_key_acute_dead_diaeresis"/>
		<when output="↯´̛" state="Multi_key_acute_dead_horn"/>
		<when output="↯´¯" state="Multi_key_acute_dead_macron"/>
		<when output="↯´?" state="Multi_key_acute_dead_psili"/>
		<when output="↯´~" state="Multi_key_acute_dead_tilde"/>
		<when output="↯´¯" state="Multi_key_acute_macron"/>
		<when output="↯´(" state="Multi_key_acute_parenleft"/>
		<when output="↯´)" state="Multi_key_acute_parenright"/>
		<when output="↯´+" state="Multi_key_acute_plus"/>
		<when output="↯´&#x0022;" state="Multi_key_acute_quotedbl"/>
		<when output="↯´/" state="Multi_key_acute_slash"/>
		<when output="↯´_" state="Multi_key_acute_underscore"/>
		<when output="↯&#x0027;" state="Multi_key_apostrophe"/>
		<when output="↯&#x0027;̓" state="Multi_key_apostrophe_U0313"/>
		<when output="↯&#x0027;̔" state="Multi_key_apostrophe_U0314"/>
		<when output="↯&#x0027;^" state="Multi_key_apostrophe_asciicircum"/>
		<when output="↯&#x0027;~" state="Multi_key_apostrophe_asciitilde"/>
		<when output="↯&#x0027;b" state="Multi_key_apostrophe_b"/>
		<when output="↯&#x0027;̃" state="Multi_key_apostrophe_combining_tilde"/>
		<when output="↯&#x0027;°" state="Multi_key_apostrophe_dead_abovering"/>
		<when output="↯&#x0027;˘" state="Multi_key_apostrophe_dead_breve"/>
		<when output="↯&#x0027;¸" state="Multi_key_apostrophe_dead_cedilla"/>
		<when output="↯&#x0027;^" state="Multi_key_apostrophe_dead_circumflex"/>
		<when output="↯&#x0027;?" state="Multi_key_apostrophe_dead_dasia"/>
		<when output="↯&#x0027;¨" state="Multi_key_apostrophe_dead_diaeresis"/>
		<when output="↯&#x0027;̛" state="Multi_key_apostrophe_dead_horn"/>
		<when output="↯&#x0027;¯" state="Multi_key_apostrophe_dead_macron"/>
		<when output="↯&#x0027;?" state="Multi_key_apostrophe_dead_psili"/>
		<when output="↯&#x0027;~" state="Multi_key_apostrophe_dead_tilde"/>
		<when output="↯&#x0027;¯" state="Multi_key_apostrophe_macron"/>
		<when output="↯&#x0027;(" state="Multi_key_apostrophe_parenleft"/>
		<when output="↯&#x0027;)" state="Multi_key_apostrophe_parenright"/>
		<when output="↯&#x0027;+" state="Multi_key_apostrophe_plus"/>
		<when output="↯&#x0027;&#x0022;" state="Multi_key_apostrophe_quotedbl"/>
		<when output="↯&#x0027;/" state="Multi_key_apostrophe_slash"/>
		<when output="↯&#x0027;_" state="Multi_key_apostrophe_underscore"/>
		<when output="↯∼" state="Multi_key_approximate"/>
		<when output="↯^" state="Multi_key_asciicircum"/>
		<when output="↯^̣" state="Multi_key_asciicircum_combining_belowdot"/>
		<when output="↯^̣" state="Multi_key_asciicircum_dead_belowdot"/>
		<when output="↯^!" state="Multi_key_asciicircum_exclam"/>
		<when output="↯^_" state="Multi_key_asciicircum_underscore"/>
		<when output="↯~" state="Multi_key_asciitilde"/>
		<when output="↯~̓" state="Multi_key_asciitilde_U0313"/>
		<when output="↯~̔" state="Multi_key_asciitilde_U0314"/>
		<when output="↯~^" state="Multi_key_asciitilde_asciicircum"/>
		<when output="↯~b" state="Multi_key_asciitilde_b"/>
		<when output="↯~˘" state="Multi_key_asciitilde_dead_breve"/>
		<when output="↯~^" state="Multi_key_asciitilde_dead_circumflex"/>
		<when output="↯~?" state="Multi_key_asciitilde_dead_dasia"/>
		<when output="↯~¨" state="Multi_key_asciitilde_dead_diaeresis"/>
		<when output="↯~̛" state="Multi_key_asciitilde_dead_horn"/>
		<when output="↯~?" state="Multi_key_asciitilde_dead_psili"/>
		<when output="↯~(" state="Multi_key_asciitilde_parenleft"/>
		<when output="↯~)" state="Multi_key_asciitilde_parenright"/>
		<when output="↯~+" state="Multi_key_asciitilde_plus"/>
		<when output="↯~&#x0022;" state="Multi_key_asciitilde_quotedbl"/>
		<when output="↯b" state="Multi_key_b"/>
		<when output="↯ḅ" state="Multi_key_b_combining_belowdot"/>
		<when output="↯b," state="Multi_key_b_comma"/>
		<when output="↯ḅ" state="Multi_key_b_dead_belowdot"/>
		<when output="↯b¸" state="Multi_key_b_dead_cedilla"/>
		<when output="↯b!" state="Multi_key_b_exclam"/>
		<when output="↯|" state="Multi_key_bar"/>
		<when output="↯c" state="Multi_key_c"/>
		<when output="↯c¨" state="Multi_key_c_dead_diaeresis"/>
		<when output="↯c&#x0022;" state="Multi_key_c_quotedbl"/>
		<when output="↯:" state="Multi_key_colon"/>
		<when output="↯," state="Multi_key_comma"/>
		<when output="↯d" state="Multi_key_d"/>
		<when output="↯¨" state="Multi_key_diaeresis"/>
		<when output="↯e" state="Multi_key_e"/>
		<when output="↯=" state="Multi_key_equal"/>
		<when output="↯!" state="Multi_key_exclam"/>
		<when output="↯!̛" state="Multi_key_exclam_dead_horn"/>
		<when output="↯!+" state="Multi_key_exclam_plus"/>
		<when output="↯f" state="Multi_key_f"/>
		<when output="↯`" state="Multi_key_grave"/>
		<when output="↯`̓" state="Multi_key_grave_U0313"/>
		<when output="↯`̔" state="Multi_key_grave_U0314"/>
		<when output="↯`^" state="Multi_key_grave_asciicircum"/>
		<when output="↯`b" state="Multi_key_grave_b"/>
		<when output="↯`˘" state="Multi_key_grave_dead_breve"/>
		<when output="↯`^" state="Multi_key_grave_dead_circumflex"/>
		<when output="↯`?" state="Multi_key_grave_dead_dasia"/>
		<when output="↯`¨" state="Multi_key_grave_dead_diaeresis"/>
		<when output="↯`̛" state="Multi_key_grave_dead_horn"/>
		<when output="↯`¯" state="Multi_key_grave_dead_macron"/>
		<when output="↯`?" state="Multi_key_grave_dead_psili"/>
		<when output="↯`¯" state="Multi_key_grave_macron"/>
		<when output="↯`(" state="Multi_key_grave_parenleft"/>
		<when output="↯`)" state="Multi_key_grave_parenright"/>
		<when output="↯`+" state="Multi_key_grave_plus"/>
		<when output="↯`&#x0022;" state="Multi_key_grave_quotedbl"/>
		<when output="↯`_" state="Multi_key_grave_underscore"/>
		<when output="↯&#x003E;" state="Multi_key_greater"/>
		<when output="↯≥" state="Multi_key_greaterthanequal"/>
		<when output="↯i" state="Multi_key_i"/>
		<when output="↯≡" state="Multi_key_identical"/>
		<when output="↯⊂" state="Multi_key_includedin"/>
		<when output="↯⊃" state="Multi_key_includes"/>
		<when output="↯k" state="Multi_key_k"/>
		<when output="↯l" state="Multi_key_l"/>
		<when output="↯&#x003C;" state="Multi_key_less"/>
		<when output="↯≤" state="Multi_key_lessthanequal"/>
		<when output="↯m" state="Multi_key_m"/>
		<when output="↯¯" state="Multi_key_macron"/>
		<when output="↯¯~" state="Multi_key_macron_asciitilde"/>
		<when output="↯¯̣" state="Multi_key_macron_combining_belowdot"/>
		<when output="↯¯̃" state="Multi_key_macron_combining_tilde"/>
		<when output="↯¯˙" state="Multi_key_macron_dead_abovedot"/>
		<when output="↯¯̣" state="Multi_key_macron_dead_belowdot"/>
		<when output="↯¯¨" state="Multi_key_macron_dead_diaeresis"/>
		<when output="↯¯˛" state="Multi_key_macron_dead_ogonek"/>
		<when output="↯¯~" state="Multi_key_macron_dead_tilde"/>
		<when output="↯¯!" state="Multi_key_macron_exclam"/>
		<when output="↯¯." state="Multi_key_macron_period"/>
		<when output="↯¯&#x0022;" state="Multi_key_macron_quotedbl"/>
		<when output="↯¯;" state="Multi_key_macron_semicolon"/>
		<when output="↯-" state="Multi_key_minus"/>
		<when output="↯--" state="Multi_key_minus_minus"/>
		<when output="↯n" state="Multi_key_n"/>
		<when output="↯#" state="Multi_key_numbersign"/>
		<when output="↯o" state="Multi_key_o"/>
		<when output="↯o&#x0027;" state="Multi_key_o_apostrophe"/>
		<when output="↯p" state="Multi_key_p"/>
		<when output="↯(" state="Multi_key_parenleft"/>
		<when output="↯(0" state="Multi_key_parenleft_0"/>
		<when output="↯(1" state="Multi_key_parenleft_1"/>
		<when output="↯(10" state="Multi_key_parenleft_1_0"/>
		<when output="↯(11" state="Multi_key_parenleft_1_1"/>
		<when output="↯(12" state="Multi_key_parenleft_1_2"/>
		<when output="↯(13" state="Multi_key_parenleft_1_3"/>
		<when output="↯(14" state="Multi_key_parenleft_1_4"/>
		<when output="↯(15" state="Multi_key_parenleft_1_5"/>
		<when output="↯(16" state="Multi_key_parenleft_1_6"/>
		<when output="↯(17" state="Multi_key_parenleft_1_7"/>
		<when output="↯(18" state="Multi_key_parenleft_1_8"/>
		<when output="↯(19" state="Multi_key_parenleft_1_9"/>
		<when output="↯(2" state="Multi_key_parenleft_2"/>
		<when output="↯(20" state="Multi_key_parenleft_2_0"/>
		<when output="↯(21" state="Multi_key_parenleft_2_1"/>
		<when output="↯(22" state="Multi_key_parenleft_2_2"/>
		<when output="↯(23" state="Multi_key_parenleft_2_3"/>
		<when output="↯(24" state="Multi_key_parenleft_2_4"/>
		<when output="↯(25" state="Multi_key_parenleft_2_5"/>
		<when output="↯(26" state="Multi_key_parenleft_2_6"/>
		<when output="↯(27" state="Multi_key_parenleft_2_7"/>
		<when output="↯(28" state="Multi_key_parenleft_2_8"/>
		<when output="↯(29" state="Multi_key_parenleft_2_9"/>
		<when output="↯(3" state="Multi_key_parenleft_3"/>
		<when output="↯(30" state="Multi_key_parenleft_3_0"/>
		<when output="↯(31" state="Multi_key_parenleft_3_1"/>
		<when output="↯(32" state="Multi_key_parenleft_3_2"/>
		<when output="↯(33" state="Multi_key_parenleft_3_3"/>
		<when output="↯(34" state="Multi_key_parenleft_3_4"/>
		<when output="↯(35" state="Multi_key_parenleft_3_5"/>
		<when output="↯(36" state="Multi_key_parenleft_3_6"/>
		<when output="↯(37" state="Multi_key_parenleft_3_7"/>
		<when output="↯(38" state="Multi_key_parenleft_3_8"/>
		<when output="↯(39" state="Multi_key_parenleft_3_9"/>
		<when output="↯(4" state="Multi_key_parenleft_4"/>
		<when output="↯(40" state="Multi_key_parenleft_4_0"/>
		<when output="↯(41" state="Multi_key_parenleft_4_1"/>
		<when output="↯(42" state="Multi_key_parenleft_4_2"/>
		<when output="↯(43" state="Multi_key_parenleft_4_3"/>
		<when output="↯(44" state="Multi_key_parenleft_4_4"/>
		<when output="↯(45" state="Multi_key_parenleft_4_5"/>
		<when output="↯(46" state="Multi_key_parenleft_4_6"/>
		<when output="↯(47" state="Multi_key_parenleft_4_7"/>
		<when output="↯(48" state="Multi_key_parenleft_4_8"/>
		<when output="↯(49" state="Multi_key_parenleft_4_9"/>
		<when output="↯(5" state="Multi_key_parenleft_5"/>
		<when output="↯(50" state="Multi_key_parenleft_5_0"/>
		<when output="↯(6" state="Multi_key_parenleft_6"/>
		<when output="↯(7" state="Multi_key_parenleft_7"/>
		<when output="↯(8" state="Multi_key_parenleft_8"/>
		<when output="↯(9" state="Multi_key_parenleft_9"/>
		<when output="↯(A" state="Multi_key_parenleft_A"/>
		<when output="↯(B" state="Multi_key_parenleft_B"/>
		<when output="↯(C" state="Multi_key_parenleft_C"/>
		<when output="↯(D" state="Multi_key_parenleft_D"/>
		<when output="↯(E" state="Multi_key_parenleft_E"/>
		<when output="↯(F" state="Multi_key_parenleft_F"/>
		<when output="↯(G" state="Multi_key_parenleft_G"/>
		<when output="↯(H" state="Multi_key_parenleft_H"/>
		<when output="↯(I" state="Multi_key_parenleft_I"/>
		<when output="↯(J" state="Multi_key_parenleft_J"/>
		<when output="↯(K" state="Multi_key_parenleft_K"/>
		<when output="↯(L" state="Multi_key_parenleft_L"/>
		<when output="↯(M" state="Multi_key_parenleft_M"/>
		<when output="↯(N" state="Multi_key_parenleft_N"/>
		<when output="↯(O" state="Multi_key_parenleft_O"/>
		<when output="↯(P" state="Multi_key_parenleft_P"/>
		<when output="↯(Q" state="Multi_key_parenleft_Q"/>
		<when output="↯(R" state="Multi_key_parenleft_R"/>
		<when output="↯(S" state="Multi_key_parenleft_S"/>
		<when output="↯(T" state="Multi_key_parenleft_T"/>
		<when output="↯(U" state="Multi_key_parenleft_U"/>
		<when output="↯(ᄀ" state="Multi_key_parenleft_U1100"/>
		<when output="↯(가" state="Multi_key_parenleft_U1100_U1161"/>
		<when output="↯(ᄂ" state="Multi_key_parenleft_U1102"/>
		<when output="↯(나" state="Multi_key_parenleft_U1102_U1161"/>
		<when output="↯(ᄃ" state="Multi_key_parenleft_U1103"/>
		<when output="↯(다" state="Multi_key_parenleft_U1103_U1161"/>
		<when output="↯(ᄅ" state="Multi_key_parenleft_U1105"/>
		<when output="↯(라" state="Multi_key_parenleft_U1105_U1161"/>
		<when output="↯(ᄆ" state="Multi_key_parenleft_U1106"/>
		<when output="↯(마" state="Multi_key_parenleft_U1106_U1161"/>
		<when output="↯(ᄇ" state="Multi_key_parenleft_U1107"/>
		<when output="↯(바" state="Multi_key_parenleft_U1107_U1161"/>
		<when output="↯(ᄉ" state="Multi_key_parenleft_U1109"/>
		<when output="↯(사" state="Multi_key_parenleft_U1109_U1161"/>
		<when output="↯(ᄋ" state="Multi_key_parenleft_U110B"/>
		<when output="↯(아" state="Multi_key_parenleft_U110B_U1161"/>
		<when output="↯(ᄌ" state="Multi_key_parenleft_U110C"/>
		<when output="↯(자" state="Multi_key_parenleft_U110C_U1161"/>
		<when output="↯(ᄎ" state="Multi_key_parenleft_U110E"/>
		<when output="↯(차" state="Multi_key_parenleft_U110E_U1161"/>
		<when output="↯(ᄏ" state="Multi_key_parenleft_U110F"/>
		<when output="↯(카" state="Multi_key_parenleft_U110F_U1161"/>
		<when output="↯(ᄐ" state="Multi_key_parenleft_U1110"/>
		<when output="↯(타" state="Multi_key_parenleft_U1110_U1161"/>
		<when output="↯(ᄑ" state="Multi_key_parenleft_U1111"/>
		<when output="↯(파" state="Multi_key_parenleft_U1111_U1161"/>
		<when output="↯(ᄒ" state="Multi_key_parenleft_U1112"/>
		<when output="↯(하" state="Multi_key_parenleft_U1112_U1161"/>
		<when output="↯(ヰ" state="Multi_key_parenleft_U30F0"/>
		<when output="↯(ヱ" state="Multi_key_parenleft_U30F1"/>
		<when output="↯(一" state="Multi_key_parenleft_U4E00"/>
		<when output="↯(七" state="Multi_key_parenleft_U4E03"/>
		<when output="↯(三" state="Multi_key_parenleft_U4E09"/>
		<when output="↯(上" state="Multi_key_parenleft_U4E0A"/>
		<when output="↯(下" state="Multi_key_parenleft_U4E0B"/>
		<when output="↯(中" state="Multi_key_parenleft_U4E2D"/>
		<when output="↯(九" state="Multi_key_parenleft_U4E5D"/>
		<when output="↯(二" state="Multi_key_parenleft_U4E8C"/>
		<when output="↯(五" state="Multi_key_parenleft_U4E94"/>
		<when output="↯(企" state="Multi_key_parenleft_U4F01"/>
		<when output="↯(休" state="Multi_key_parenleft_U4F11"/>
		<when output="↯(優" state="Multi_key_parenleft_U512A"/>
		<when output="↯(八" state="Multi_key_parenleft_U516B"/>
		<when output="↯(六" state="Multi_key_parenleft_U516D"/>
		<when output="↯(写" state="Multi_key_parenleft_U5199"/>
		<when output="↯(労" state="Multi_key_parenleft_U52B4"/>
		<when output="↯(医" state="Multi_key_parenleft_U533B"/>
		<when output="↯(十" state="Multi_key_parenleft_U5341"/>
		<when output="↯(協" state="Multi_key_parenleft_U5354"/>
		<when output="↯(印" state="Multi_key_parenleft_U5370"/>
		<when output="↯(右" state="Multi_key_parenleft_U53F3"/>
		<when output="↯(名" state="Multi_key_parenleft_U540D"/>
		<when output="↯(四" state="Multi_key_parenleft_U56DB"/>
		<when output="↯(土" state="Multi_key_parenleft_U571F"/>
		<when output="↯(夜" state="Multi_key_parenleft_U591C"/>
		<when output="↯(女" state="Multi_key_parenleft_U5973"/>
		<when output="↯(学" state="Multi_key_parenleft_U5B66"/>
		<when output="↯(宗" state="Multi_key_parenleft_U5B97"/>
		<when output="↯(左" state="Multi_key_parenleft_U5DE6"/>
		<when output="↯(日" state="Multi_key_parenleft_U65E5"/>
		<when output="↯(月" state="Multi_key_parenleft_U6708"/>
		<when output="↯(有" state="Multi_key_parenleft_U6709"/>
		<when output="↯(木" state="Multi_key_parenleft_U6728"/>
		<when output="↯(株" state="Multi_key_parenleft_U682A"/>
		<when output="↯(正" state="Multi_key_parenleft_U6B63"/>
		<when output="↯(水" state="Multi_key_parenleft_U6C34"/>
		<when output="↯(注" state="Multi_key_parenleft_U6CE8"/>
		<when output="↯(火" state="Multi_key_parenleft_U706B"/>
		<when output="↯(特" state="Multi_key_parenleft_U7279"/>
		<when output="↯(男" state="Multi_key_parenleft_U7537"/>
		<when output="↯(監" state="Multi_key_parenleft_U76E3"/>
		<when output="↯(社" state="Multi_key_parenleft_U793E"/>
		<when output="↯(祝" state="Multi_key_parenleft_U795D"/>
		<when output="↯(秘" state="Multi_key_parenleft_U79D8"/>
		<when output="↯(財" state="Multi_key_parenleft_U8CA1"/>
		<when output="↯(資" state="Multi_key_parenleft_U8CC7"/>
		<when output="↯(適" state="Multi_key_parenleft_U9069"/>
		<when output="↯(金" state="Multi_key_parenleft_U91D1"/>
		<when output="↯(項" state="Multi_key_parenleft_U9805"/>
		<when output="↯(V" state="Multi_key_parenleft_V"/>
		<when output="↯(W" state="Multi_key_parenleft_W"/>
		<when output="↯(X" state="Multi_key_parenleft_X"/>
		<when output="↯(Y" state="Multi_key_parenleft_Y"/>
		<when output="↯(Z" state="Multi_key_parenleft_Z"/>
		<when output="↯(a" state="Multi_key_parenleft_a"/>
		<when output="↯(b" state="Multi_key_parenleft_b"/>
		<when output="↯(c" state="Multi_key_parenleft_c"/>
		<when output="↯(d" state="Multi_key_parenleft_d"/>
		<when output="↯(e" state="Multi_key_parenleft_e"/>
		<when output="↯(f" state="Multi_key_parenleft_f"/>
		<when output="↯(g" state="Multi_key_parenleft_g"/>
		<when output="↯(h" state="Multi_key_parenleft_h"/>
		<when output="↯(i" state="Multi_key_parenleft_i"/>
		<when output="↯(j" state="Multi_key_parenleft_j"/>
		<when output="↯(k" state="Multi_key_parenleft_k"/>
		<when output="↯(ア" state="Multi_key_parenleft_kana_A"/>
		<when output="↯(チ" state="Multi_key_parenleft_kana_CHI"/>
		<when output="↯(エ" state="Multi_key_parenleft_kana_E"/>
		<when output="↯(フ" state="Multi_key_parenleft_kana_FU"/>
		<when output="↯(ハ" state="Multi_key_parenleft_kana_HA"/>
		<when output="↯(ヘ" state="Multi_key_parenleft_kana_HE"/>
		<when output="↯(ヒ" state="Multi_key_parenleft_kana_HI"/>
		<when output="↯(ホ" state="Multi_key_parenleft_kana_HO"/>
		<when output="↯(イ" state="Multi_key_parenleft_kana_I"/>
		<when output="↯(カ" state="Multi_key_parenleft_kana_KA"/>
		<when output="↯(ケ" state="Multi_key_parenleft_kana_KE"/>
		<when output="↯(キ" state="Multi_key_parenleft_kana_KI"/>
		<when output="↯(コ" state="Multi_key_parenleft_kana_KO"/>
		<when output="↯(ク" state="Multi_key_parenleft_kana_KU"/>
		<when output="↯(マ" state="Multi_key_parenleft_kana_MA"/>
		<when output="↯(メ" state="Multi_key_parenleft_kana_ME"/>
		<when output="↯(ミ" state="Multi_key_parenleft_kana_MI"/>
		<when output="↯(モ" state="Multi_key_parenleft_kana_MO"/>
		<when output="↯(ム" state="Multi_key_parenleft_kana_MU"/>
		<when output="↯(ナ" state="Multi_key_parenleft_kana_NA"/>
		<when output="↯(ネ" state="Multi_key_parenleft_kana_NE"/>
		<when output="↯(ニ" state="Multi_key_parenleft_kana_NI"/>
		<when output="↯(ノ" state="Multi_key_parenleft_kana_NO"/>
		<when output="↯(ヌ" state="Multi_key_parenleft_kana_NU"/>
		<when output="↯(オ" state="Multi_key_parenleft_kana_O"/>
		<when output="↯(ラ" state="Multi_key_parenleft_kana_RA"/>
		<when output="↯(レ" state="Multi_key_parenleft_kana_RE"/>
		<when output="↯(リ" state="Multi_key_parenleft_kana_RI"/>
		<when output="↯(ロ" state="Multi_key_parenleft_kana_RO"/>
		<when output="↯(ル" state="Multi_key_parenleft_kana_RU"/>
		<when output="↯(サ" state="Multi_key_parenleft_kana_SA"/>
		<when output="↯(セ" state="Multi_key_parenleft_kana_SE"/>
		<when output="↯(シ" state="Multi_key_parenleft_kana_SHI"/>
		<when output="↯(ソ" state="Multi_key_parenleft_kana_SO"/>
		<when output="↯(ス" state="Multi_key_parenleft_kana_SU"/>
		<when output="↯(タ" state="Multi_key_parenleft_kana_TA"/>
		<when output="↯(テ" state="Multi_key_parenleft_kana_TE"/>
		<when output="↯(ト" state="Multi_key_parenleft_kana_TO"/>
		<when output="↯(ツ" state="Multi_key_parenleft_kana_TSU"/>
		<when output="↯(ウ" state="Multi_key_parenleft_kana_U"/>
		<when output="↯(ワ" state="Multi_key_parenleft_kana_WA"/>
		<when output="↯(ヲ" state="Multi_key_parenleft_kana_WO"/>
		<when output="↯(ヤ" state="Multi_key_parenleft_kana_YA"/>
		<when output="↯(ヨ" state="Multi_key_parenleft_kana_YO"/>
		<when output="↯(ユ" state="Multi_key_parenleft_kana_YU"/>
		<when output="↯(l" state="Multi_key_parenleft_l"/>
		<when output="↯(m" state="Multi_key_parenleft_m"/>
		<when output="↯(n" state="Multi_key_parenleft_n"/>
		<when output="↯(o" state="Multi_key_parenleft_o"/>
		<when output="↯(p" state="Multi_key_parenleft_p"/>
		<when output="↯(q" state="Multi_key_parenleft_q"/>
		<when output="↯(r" state="Multi_key_parenleft_r"/>
		<when output="↯(s" state="Multi_key_parenleft_s"/>
		<when output="↯(t" state="Multi_key_parenleft_t"/>
		<when output="↯(u" state="Multi_key_parenleft_u"/>
		<when output="↯(v" state="Multi_key_parenleft_v"/>
		<when output="↯(w" state="Multi_key_parenleft_w"/>
		<when output="↯(x" state="Multi_key_parenleft_x"/>
		<when output="↯(y" state="Multi_key_parenleft_y"/>
		<when output="↯(z" state="Multi_key_parenleft_z"/>
		<when output="↯)" state="Multi_key_parenright"/>
		<when output="↯%" state="Multi_key_percent"/>
		<when output="↯." state="Multi_key_period"/>
		<when output="↯.´" state="Multi_key_period_acute"/>
		<when output="↯.&#x0027;" state="Multi_key_period_apostrophe"/>
		<when output="↯.́" state="Multi_key_period_combining_acute"/>
		<when output="↯.̣" state="Multi_key_period_combining_belowdot"/>
		<when output="↯.´" state="Multi_key_period_dead_acute"/>
		<when output="↯.̣" state="Multi_key_period_dead_belowdot"/>
		<when output="↯.ˇ" state="Multi_key_period_dead_caron"/>
		<when output="↯.!" state="Multi_key_period_exclam"/>
		<when output="↯+" state="Multi_key_plus"/>
		<when output="↯?" state="Multi_key_question"/>
		<when output="↯?^" state="Multi_key_question_asciicircum"/>
		<when output="↯?b" state="Multi_key_question_b"/>
		<when output="↯?˘" state="Multi_key_question_dead_breve"/>
		<when output="↯?^" state="Multi_key_question_dead_circumflex"/>
		<when output="↯?̛" state="Multi_key_question_dead_horn"/>
		<when output="↯?+" state="Multi_key_question_plus"/>
		<when output="↯&#x0022;" state="Multi_key_quotedbl"/>
		<when output="↯&#x0022;~" state="Multi_key_quotedbl_asciitilde"/>
		<when output="↯&#x0022;̃" state="Multi_key_quotedbl_combining_tilde"/>
		<when output="↯&#x0022;¯" state="Multi_key_quotedbl_dead_macron"/>
		<when output="↯&#x0022;~" state="Multi_key_quotedbl_dead_tilde"/>
		<when output="↯&#x0022;¯" state="Multi_key_quotedbl_macron"/>
		<when output="↯&#x0022;_" state="Multi_key_quotedbl_underscore"/>
		<when output="↯⊣" state="Multi_key_righttack"/>
		<when output="↯s" state="Multi_key_s"/>
		<when output="↯;" state="Multi_key_semicolon"/>
		<when output="↯/" state="Multi_key_slash"/>
		<when output="↯ " state="Multi_key_space"/>
		<when output="↯t" state="Multi_key_t"/>
		<when output="↯u" state="Multi_key_u"/>
		<when output="↯_" state="Multi_key_underscore"/>
		<when output="↯_~" state="Multi_key_underscore_asciitilde"/>
		<when output="↯_̣" state="Multi_key_underscore_combining_belowdot"/>
		<when output="↯_̃" state="Multi_key_underscore_combining_tilde"/>
		<when output="↯_˙" state="Multi_key_underscore_dead_abovedot"/>
		<when output="↯_̣" state="Multi_key_underscore_dead_belowdot"/>
		<when output="↯_¨" state="Multi_key_underscore_dead_diaeresis"/>
		<when output="↯_˛" state="Multi_key_underscore_dead_ogonek"/>
		<when output="↯_~" state="Multi_key_underscore_dead_tilde"/>
		<when output="↯_!" state="Multi_key_underscore_exclam"/>
		<when output="↯_." state="Multi_key_underscore_period"/>
		<when output="↯_&#x0022;" state="Multi_key_underscore_quotedbl"/>
		<when output="↯_;" state="Multi_key_underscore_semicolon"/>
		<when output="↯v" state="Multi_key_v"/>
		<when output="↯x" state="Multi_key_x"/>
		<when output="˙" state="abovedot"/>
		<when output="˙´" state="abovedot_acute"/>
		<when output="˙̣" state="abovedot_belowdot"/>
		<when output="˙ˇ" state="abovedot_caron"/>
		<when output="˙̉/" state="abovedot_hook_stroke"/>
		<when output="˙¯" state="abovedot_macron"/>
		<when output="˙/" state="abovedot_stroke"/>
		<when output="´" state="acute"/>
		<when output="´˘" state="acute_breve"/>
		<when output="´¸" state="acute_cedilla"/>
		<when output="´^" state="acute_circumflex"/>
		<when output="´¨" state="acute_diaeresis"/>
		<when output="´̛" state="acute_horn"/>
		<when output="´¯" state="acute_macron"/>
		<when output="´°" state="acute_ringabove"/>
		<when output="´/" state="acute_stroke"/>
		<when output="´~" state="acute_tilde"/>
		<when output="-" state="bar"/>
		<when output="̣" state="belowdot"/>
		<when output="̣˘" state="belowdot_breve"/>
		<when output="̣^" state="belowdot_circumflex"/>
		<when output="̛̣" state="belowdot_horn"/>
		<when output="̣¯" state="belowdot_macron"/>
		<when output="?" state="belt"/>
		<when output="˘" state="breve"/>
		<when output="˘¸" state="breve_cedilla"/>
		<when output="˘`" state="breve_grave"/>
		<when output="˘̉" state="breve_hook"/>
		<when output="˘~" state="breve_tilde"/>
		<when output="?" state="brevebelow"/>
		<when output="ˇ" state="caron"/>
		<when output="ˇ¨" state="caron_diaeresis"/>
		<when output="¸" state="cedilla"/>
		<when output="¸¤" state="cedilla_currency"/>
		<when output="^" state="circumflex"/>
		<when output="^`" state="circumflex_grave"/>
		<when output="^̉" state="circumflex_hook"/>
		<when output="^~" state="circumflex_tilde"/>
		<when output="̭" state="circumflexbelow"/>
		<when output="?" state="comma"/>
		<when output="," state="commabelow"/>
		<when output="?" state="crossedtail"/>
		<when output="?" state="curl"/>
		<when output="¤" state="currency"/>
		<when output="?" state="descender"/>
		<when output="¨" state="diaeresis"/>
		<when output="¨`" state="diaeresis_grave"/>
		<when output="¨¯" state="diaeresis_macron"/>
		<when output="¨~" state="diaeresis_tilde"/>
		<when output="̤" state="diaeresisbelow"/>
		<when output="?" state="diagonalstroke"/>
		<when output="?/" state="diagonalstroke_stroke"/>
		<when output="?" state="dot"/>
		<when output="˝" state="doubleacute"/>
		<when output="?" state="doublebar"/>
		<when output="?" state="doublegrave"/>
		<when output="?" state="fishhook"/>
		<when output="??" state="fishhook_middletilde"/>
		<when output="??" state="fishhook_tail"/>
		<when output="?" state="flourish"/>
		<when output="`" state="grave"/>
		<when output="`̛" state="grave_horn"/>
		<when output="`¯" state="grave_macron"/>
		<when output="µ" state="greek"/>
		<when output="µ̉" state="greek_hook"/>
		<when output="µ¯" state="greek_macron"/>
		<when output="µ/" state="greek_stroke"/>
		<when output="?" state="highstroke"/>
		<when output="̉" state="hook"/>
		<when output="̛̉" state="hook_horn"/>
		<when output="̉?" state="hook_tail"/>
		<when output="?" state="hooktail"/>
		<when output="?" state="horizontalbar"/>
		<when output="̛" state="horn"/>
		<when output="̛~" state="horn_tilde"/>
		<when output="̑" state="invertedbreve"/>
		<when output="_" state="linebelow"/>
		<when output="?" state="longleg"/>
		<when output="?" state="longrightleg"/>
		<when output="?" state="longstrokeoverlay"/>
		<when output="?" state="loop"/>
		<when output="?" state="lowringinside"/>
		<when output="¯" state="macron"/>
		<when output="¯˛" state="macron_ogonek"/>
		<when output="¯~" state="macron_tilde"/>
		<when output="?" state="middletilde"/>
		<when output="?" state="notch"/>
		<when output="˛" state="ogonek"/>
		<when output="?" state="palatalhook"/>
		<when output="̢" state="retroflexhook"/>
		<when output="ʾ" state="righthalfring"/>
		<when output="?" state="righthook"/>
		<when output="°" state="ringabove"/>
		<when output="̥" state="ringbelow"/>
		<when output="?" state="squirreltail"/>
		<when output="/" state="stroke"/>
		<when output="?" state="strokethroughdescender"/>
		<when output="?" state="swashtail"/>
		<when output="?" state="tail"/>
		<when output="~" state="tilde"/>
		<when output="̰" state="tildebelow"/>
		<when output="⁻" state="topbar"/>
	</terminators>
</keyboard>
